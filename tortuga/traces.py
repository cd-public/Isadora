from os import system

regs = ['acw2.AR_CH_DIS', 'acw2.AR_ILLEGAL_REQ', 'acw2.AR_ILL_TRANS_FIL_PTR', 'acw2.AR_ILL_TRANS_SRV_PTR', 'acw2.AR_STATE', 'acw2.AW_CH_DIS', 'acw2.AW_ILLEGAL_REQ', 'acw2.AW_ILL_DATA_TRANS_SRV_PTR', 'acw2.AW_ILL_TRANS_FIL_PTR', 'acw2.AW_ILL_TRANS_SRV_PTR', 'acw2.AW_STATE', 'acw2.B_STATE', 'acw2.M_AXI_ARADDR_INT', 'acw2.M_AXI_ARBURST_INT', 'acw2.M_AXI_ARCACHE_INT', 'acw2.M_AXI_ARID_INT', 'acw2.M_AXI_ARLEN_INT', 'acw2.M_AXI_ARLOCK_INT', 'acw2.M_AXI_ARPROT_INT', 'acw2.M_AXI_ARQOS_INT', 'acw2.M_AXI_ARSIZE_INT', 'acw2.M_AXI_ARUSER_INT', 'acw2.M_AXI_AWADDR_INT', 'acw2.M_AXI_AWBURST_INT', 'acw2.M_AXI_AWCACHE_INT', 'acw2.M_AXI_AWID_INT', 'acw2.M_AXI_AWLEN_INT', 'acw2.M_AXI_AWLOCK_INT', 'acw2.M_AXI_AWPROT_INT', 'acw2.M_AXI_AWQOS_INT', 'acw2.M_AXI_AWSIZE_INT', 'acw2.M_AXI_AWUSER_INT', 'acw2.R_STATE', 'acw2.aw_en', 'acw2.axi_araddr', 'acw2.axi_arready', 'acw2.axi_awaddr', 'acw2.axi_awready', 'acw2.axi_bresp', 'acw2.axi_bvalid', 'acw2.axi_rdata', 'acw2.axi_rresp', 'acw2.axi_rvalid', 'acw2.axi_wready', 'acw2.internal_data', 'acw2.reg00_config', 'acw2.reg01_config', 'acw2.reg02_r_anomaly', 'acw2.reg03_r_anomaly', 'acw2.reg04_w_anomaly', 'acw2.reg05_w_anomaly', 'acw2.reg06_r_config', 'acw2.reg07_r_config', 'acw2.reg08_r_config', 'acw2.reg09_r_config', 'acw2.reg0_config', 'acw2.reg10_r_config', 'acw2.reg11_r_config', 'acw2.reg12_r_config', 'acw2.reg13_r_config', 'acw2.reg14_r_config', 'acw2.reg15_r_config', 'acw2.reg16_r_config', 'acw2.reg17_r_config', 'acw2.reg18_r_config', 'acw2.reg19_r_config', 'acw2.reg20_r_config', 'acw2.reg21_r_config', 'acw2.reg22_w_config', 'acw2.reg23_w_config', 'acw2.reg24_w_config', 'acw2.reg25_w_config', 'acw2.reg26_w_config', 'acw2.reg27_w_config', 'acw2.reg28_w_config', 'acw2.reg29_w_config', 'acw2.reg30_w_config', 'acw2.reg31_w_config', 'acw2.reg32_w_config', 'acw2.reg33_w_config', 'acw2.reg34_w_config', 'acw2.reg35_w_config', 'acw2.reg36_w_config', 'acw2.reg37_w_config', 'acw2.reg_data_out']

## ref property

# CLT_TR4_W_B_TO_SERVE: assert iflow (
# W_B_TO_SERVE
# =/=> 
# M_AXI_AWADDR_wire
# unless
# (ARESETN != 0)
# );

indent = "    "
for reg in regs:
  as_file = open(reg + ".as","w")
  as_file.write("autogenerated_"  + reg + ": assert iflow (\n")
  as_file.write(indent + reg + "\n")
  as_file.write(indent + "=/=>" + "\n")
  as_file.write(indent + "$all_outputs" + "\n")
  as_file.write(");\n\n")
