from os import system

regs = ['trap', 'mem_valid', 'mem_instr', 'mem_addr', 'mem_wdata', 'mem_wstrb', 'mem_la_wdata', 'mem_la_wstrb', 'pcpi_valid', 'pcpi_insn', 'eoi', 'trace_valid', 'trace_data', 'count_cycle', 'count_instr', 'reg_pc', 'reg_next_pc', 'reg_op1', 'reg_op2', 'reg_out', 'reg_sh', 'next_insn_opcode', 'dbg_insn_opcode', 'dbg_insn_addr', 'irq_delay', 'irq_active', 'irq_mask', 'irq_pending', 'timer', 'pcpi_int_wr', 'pcpi_int_rd', 'pcpi_int_wait', 'pcpi_int_ready', 'mem_state', 'mem_wordsize', 'mem_rdata_word', 'mem_rdata_q', 'mem_do_prefetch', 'mem_do_rinst', 'mem_do_rdata', 'mem_do_wdata', 'mem_la_secondword', 'mem_la_firstword_reg', 'last_mem_valid', 'prefetched_high_word', 'clear_prefetched_high_word', 'mem_16bit_buffer', 'instr_lui', 'instr_auipc', 'instr_jal', 'instr_jalr', 'instr_beq', 'instr_bne', 'instr_blt', 'instr_bge', 'instr_bltu', 'instr_bgeu', 'instr_lb', 'instr_lh', 'instr_lw', 'instr_lbu', 'instr_lhu', 'instr_sb', 'instr_sh', 'instr_sw', 'instr_addi', 'instr_slti', 'instr_sltiu', 'instr_xori', 'instr_ori', 'instr_andi', 'instr_slli', 'instr_srli', 'instr_srai', 'instr_add', 'instr_sub', 'instr_sll', 'instr_slt', 'instr_sltu', 'instr_xor', 'instr_srl', 'instr_sra', 'instr_or', 'instr_and', 'instr_rdcycle', 'instr_rdcycleh', 'instr_rdinstr', 'instr_rdinstrh', 'instr_ecall_ebreak', 'instr_getq', 'instr_setq', 'instr_retirq', 'instr_maskirq', 'instr_waitirq', 'instr_timer', 'decoded_rd', 'decoded_rs1', 'decoded_rs2', 'decoded_imm', 'decoded_imm_j', 'decoder_trigger', 'decoder_trigger_q', 'decoder_pseudo_trigger', 'decoder_pseudo_trigger_q', 'compressed_instr', 'is_lui_auipc_jal', 'is_lb_lh_lw_lbu_lhu', 'is_slli_srli_srai', 'is_jalr_addi_slti_sltiu_xori_ori_andi', 'is_sb_sh_sw', 'is_sll_srl_sra', 'is_lui_auipc_jal_jalr_addi_add_sub', 'is_slti_blt_slt', 'is_sltiu_bltu_sltu', 'is_beq_bne_blt_bge_bltu_bgeu', 'is_lbu_lhu_lw', 'is_alu_reg_imm', 'is_alu_reg_reg', 'is_compare', 'new_ascii_instr', 'dbg_ascii_instr', 'dbg_insn_imm', 'dbg_insn_rs1', 'dbg_insn_rs2', 'dbg_insn_rd', 'dbg_rs1val', 'dbg_rs2val', 'dbg_rs1val_valid', 'dbg_rs2val_valid', 'q_ascii_instr', 'q_insn_imm', 'q_insn_opcode', 'q_insn_rs1', 'q_insn_rs2', 'q_insn_rd', 'dbg_next', 'dbg_valid_insn', 'cached_ascii_instr', 'cached_insn_imm', 'cached_insn_opcode', 'cached_insn_rs1', 'cached_insn_rs2', 'cached_insn_rd', 'cpu_state', 'irq_state', 'dbg_ascii_state', 'set_mem_do_rinst', 'set_mem_do_rdata', 'set_mem_do_wdata', 'latched_store', 'latched_stalu', 'latched_branch', 'latched_compr', 'latched_trace', 'latched_is_lu', 'latched_is_lh', 'latched_is_lb', 'latched_rd', 'current_pc', 'pcpi_timeout_counter', 'pcpi_timeout', 'next_irq_pending', 'do_waitirq', 'alu_out', 'alu_out_q', 'alu_out_0', 'alu_out_0_q', 'alu_wait', 'alu_wait_2', 'alu_add_sub', 'alu_shl', 'alu_shr', 'alu_eq', 'alu_ltu', 'alu_lts', 'clear_prefetched_high_word_q', 'cpuregs_write', 'cpuregs_wrdata', 'cpuregs_rs1', 'cpuregs_rs2', 'decoded_rs']

out_file = open("do_all.txt","w")
out_file.write("newgrp hyperflogen\ncd /data/cd\nsource setup_radixs\ntouch start_time.txt\ncd r5\npython traces.py\n") # setup
for reg in regs:
	out_file.write("mv " + reg + ".as spr5.as\n") # set new source
	out_file.write("./clean.sh\nradixs_shell -s r5_explore.script\n./run_questa_explore\n") # run tortuga
	out_file.write("cd /data/cd\nmv r5/iACW.vcd no_r_" + reg + ".vcd\ncd r5\n")
out_file.write("cd data/cd\nrm *ACW.vcd\ntouch end_time.txt\nls -al")