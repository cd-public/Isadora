Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files .(read 1 decls file)
Processing trace data; reading 45 dtrace files:

===========================================================================
..tick():::ENTER
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_wordsize
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jal
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_sw
trap == instr_addi
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoded_rs2
trap == decoded_imm
trap == decoder_trigger
trap == decoder_trigger_q
trap == decoder_pseudo_trigger
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_lui_auipc_jal
trap == is_slli_srli_srai
trap == is_jalr_addi_slti_sltiu_xori_ori_andi
trap == is_sb_sh_sw
trap == is_sll_srl_sra
trap == is_lui_auipc_jal_jalr_addi_add_sub
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_alu_reg_imm
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_insn_imm
trap == dbg_insn_rs2
trap == dbg_rs2val_valid
trap == q_insn_imm
trap == q_insn_rs2
trap == dbg_next
trap == cached_insn_imm
trap == cached_insn_rs2
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_stalu
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == clear_prefetched_high_word_q
trap == cpuregs_write
trap == cpuregs_rs2
mem_valid == mem_instr
mem_valid == mem_state
mem_valid == mem_do_prefetch
mem_valid == mem_do_rinst
mem_valid == last_mem_valid
mem_valid == instr_lw
mem_valid == decoded_rs1
mem_valid == is_lb_lh_lw_lbu_lhu
mem_valid == is_lbu_lhu_lw
mem_valid == dbg_insn_rs1
mem_valid == dbg_rs1val_valid
mem_valid == q_insn_rs1
mem_valid == dbg_valid_insn
mem_valid == cached_insn_rs1
mem_valid == cpu_state
mem_valid == latched_store
mem_addr == reg_next_pc
mem_la_wdata == pcpi_insn
mem_la_wdata == trace_data
mem_la_wdata == reg_op2
mem_la_wdata == reg_out
mem_la_wdata == reg_sh
mem_la_wdata == irq_pending
mem_la_wdata == pcpi_int_rd
mem_la_wdata == mem_16bit_buffer
mem_la_wdata == dbg_rs2val
mem_la_wdata == current_pc
mem_la_wdata == pcpi_timeout_counter
mem_la_wdata == next_irq_pending
mem_la_wdata == alu_out
mem_la_wdata == alu_out_q
mem_la_wdata == alu_out_0
mem_la_wdata == alu_out_0_q
mem_la_wdata == alu_add_sub
mem_la_wdata == alu_shl
mem_la_wdata == alu_shr
mem_la_wdata == alu_eq
mem_la_wdata == alu_ltu
mem_la_wdata == alu_lts
mem_la_wdata == cpuregs_wrdata
mem_la_wdata == decoded_rs
reg_pc == dbg_insn_addr
reg_op1 == dbg_rs1val
reg_op1 == cpuregs_rs1
next_insn_opcode == mem_rdata_q
next_insn_opcode == cached_insn_opcode
dbg_insn_opcode == q_insn_opcode
decoded_rd == dbg_insn_rd
decoded_rd == q_insn_rd
decoded_rd == cached_insn_rd
decoded_rd == latched_rd
new_ascii_instr == dbg_ascii_instr
new_ascii_instr == q_ascii_instr
new_ascii_instr == cached_ascii_instr
trap == 0
mem_valid == 1
mem_addr == 12
mem_la_wdata == -1
mem_la_wstrb == 15
reg_pc == 8
reg_op1 == 1020
next_insn_opcode one of { -1, 41219 }
dbg_insn_opcode == 41219
irq_mask == 4294967295L
mem_rdata_word == 1114387
decoded_rd == 2
decoded_imm_j == 40960
new_ascii_instr == 27767
dbg_ascii_state == 465541358957L
trap <= mem_wdata
trap < count_cycle
trap < count_instr
trap != next_insn_opcode
mem_valid < count_cycle
mem_valid < count_instr
mem_valid != next_insn_opcode
mem_addr < count_cycle
mem_addr != count_instr
mem_addr != next_insn_opcode
mem_wdata > mem_la_wdata
22 * mem_wdata - count_cycle + 18 == 0
mem_wdata < count_cycle
4 * mem_wdata - count_instr + 3 == 0
mem_wdata < count_instr
mem_wdata < reg_op1
mem_wdata != next_insn_opcode
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata < mem_rdata_word
mem_wdata < decoded_imm_j
mem_wdata < new_ascii_instr
mem_wdata < dbg_ascii_state
mem_la_wdata < count_cycle
mem_la_wdata < count_instr
mem_la_wdata <= next_insn_opcode
mem_la_wstrb < count_cycle
mem_la_wstrb != next_insn_opcode
2 * count_cycle - 2 * count_instr - 3 == 0
count_cycle > reg_pc
count_cycle < reg_op1
count_cycle != next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle < irq_mask
count_cycle < mem_rdata_word
count_cycle % decoded_rd == 0
count_cycle > decoded_rd
count_cycle < decoded_imm_j
count_cycle < new_ascii_instr
count_cycle < dbg_ascii_state
count_instr != reg_pc
count_instr < reg_op1
count_instr != next_insn_opcode
count_instr < dbg_insn_opcode
count_instr < irq_mask
count_instr < mem_rdata_word
count_instr > decoded_rd
count_instr < decoded_imm_j
count_instr < new_ascii_instr
count_instr < dbg_ascii_state
reg_pc != next_insn_opcode
reg_op1 != next_insn_opcode
next_insn_opcode <= dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode < mem_rdata_word
next_insn_opcode != decoded_rd
next_insn_opcode != decoded_imm_j
next_insn_opcode != new_ascii_instr
next_insn_opcode < dbg_ascii_state
===========================================================================
..tick():::EXIT
trap == mem_valid
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_state
trap == mem_wordsize
trap == mem_do_prefetch
trap == mem_do_rinst
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == last_mem_valid
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jal
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_sw
trap == instr_addi
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoded_imm
trap == decoder_trigger_q
trap == decoder_pseudo_trigger
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_lui_auipc_jal
trap == is_lb_lh_lw_lbu_lhu
trap == is_slli_srli_srai
trap == is_jalr_addi_slti_sltiu_xori_ori_andi
trap == is_sb_sh_sw
trap == is_sll_srl_sra
trap == is_lui_auipc_jal_jalr_addi_add_sub
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_insn_imm
trap == dbg_insn_rs2
trap == dbg_rs2val_valid
trap == q_insn_imm
trap == q_insn_rs2
trap == dbg_next
trap == cached_insn_imm
trap == cached_insn_rs2
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_wdata
trap == latched_stalu
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == clear_prefetched_high_word_q
trap == cpuregs_write
trap == orig(trap)
trap == orig(mem_wstrb)
trap == orig(pcpi_valid)
trap == orig(eoi)
trap == orig(trace_valid)
trap == orig(irq_delay)
trap == orig(irq_active)
trap == orig(timer)
trap == orig(pcpi_int_wr)
trap == orig(pcpi_int_wait)
trap == orig(pcpi_int_ready)
trap == orig(mem_wordsize)
trap == orig(mem_do_rdata)
trap == orig(mem_do_wdata)
trap == orig(mem_la_secondword)
trap == orig(mem_la_firstword_reg)
trap == orig(prefetched_high_word)
trap == orig(clear_prefetched_high_word)
trap == orig(instr_lui)
trap == orig(instr_auipc)
trap == orig(instr_jal)
trap == orig(instr_jalr)
trap == orig(instr_beq)
trap == orig(instr_bne)
trap == orig(instr_blt)
trap == orig(instr_bge)
trap == orig(instr_bltu)
trap == orig(instr_bgeu)
trap == orig(instr_lb)
trap == orig(instr_lh)
trap == orig(instr_lbu)
trap == orig(instr_lhu)
trap == orig(instr_sb)
trap == orig(instr_sh)
trap == orig(instr_sw)
trap == orig(instr_addi)
trap == orig(instr_slti)
trap == orig(instr_sltiu)
trap == orig(instr_xori)
trap == orig(instr_ori)
trap == orig(instr_andi)
trap == orig(instr_slli)
trap == orig(instr_srli)
trap == orig(instr_srai)
trap == orig(instr_add)
trap == orig(instr_sub)
trap == orig(instr_sll)
trap == orig(instr_slt)
trap == orig(instr_sltu)
trap == orig(instr_xor)
trap == orig(instr_srl)
trap == orig(instr_sra)
trap == orig(instr_or)
trap == orig(instr_and)
trap == orig(instr_rdcycle)
trap == orig(instr_rdcycleh)
trap == orig(instr_rdinstr)
trap == orig(instr_rdinstrh)
trap == orig(instr_ecall_ebreak)
trap == orig(instr_getq)
trap == orig(instr_setq)
trap == orig(instr_retirq)
trap == orig(instr_maskirq)
trap == orig(instr_waitirq)
trap == orig(instr_timer)
trap == orig(decoded_rs2)
trap == orig(decoded_imm)
trap == orig(decoder_trigger)
trap == orig(decoder_trigger_q)
trap == orig(decoder_pseudo_trigger)
trap == orig(decoder_pseudo_trigger_q)
trap == orig(compressed_instr)
trap == orig(is_lui_auipc_jal)
trap == orig(is_slli_srli_srai)
trap == orig(is_jalr_addi_slti_sltiu_xori_ori_andi)
trap == orig(is_sb_sh_sw)
trap == orig(is_sll_srl_sra)
trap == orig(is_lui_auipc_jal_jalr_addi_add_sub)
trap == orig(is_slti_blt_slt)
trap == orig(is_sltiu_bltu_sltu)
trap == orig(is_beq_bne_blt_bge_bltu_bgeu)
trap == orig(is_alu_reg_imm)
trap == orig(is_alu_reg_reg)
trap == orig(is_compare)
trap == orig(dbg_insn_imm)
trap == orig(dbg_insn_rs2)
trap == orig(dbg_rs2val_valid)
trap == orig(q_insn_imm)
trap == orig(q_insn_rs2)
trap == orig(dbg_next)
trap == orig(cached_insn_imm)
trap == orig(cached_insn_rs2)
trap == orig(irq_state)
trap == orig(set_mem_do_rinst)
trap == orig(set_mem_do_rdata)
trap == orig(set_mem_do_wdata)
trap == orig(latched_stalu)
trap == orig(latched_branch)
trap == orig(latched_compr)
trap == orig(latched_trace)
trap == orig(latched_is_lu)
trap == orig(latched_is_lh)
trap == orig(latched_is_lb)
trap == orig(pcpi_timeout)
trap == orig(do_waitirq)
trap == orig(alu_wait)
trap == orig(alu_wait_2)
trap == orig(clear_prefetched_high_word_q)
trap == orig(cpuregs_write)
trap == orig(cpuregs_rs2)
mem_instr == mem_do_rdata
mem_instr == instr_lw
mem_instr == decoded_rs2
mem_instr == decoder_trigger
mem_instr == is_lbu_lhu_lw
mem_instr == is_alu_reg_imm
mem_instr == dbg_insn_rs1
mem_instr == dbg_rs1val_valid
mem_instr == q_insn_rs1
mem_instr == dbg_valid_insn
mem_instr == cached_insn_rs1
mem_instr == cpu_state
mem_instr == set_mem_do_rdata
mem_instr == latched_store
mem_instr == latched_is_lu
mem_instr == orig(mem_valid)
mem_instr == orig(mem_instr)
mem_instr == orig(mem_state)
mem_instr == orig(mem_do_prefetch)
mem_instr == orig(mem_do_rinst)
mem_instr == orig(last_mem_valid)
mem_instr == orig(instr_lw)
mem_instr == orig(decoded_rs1)
mem_instr == orig(is_lb_lh_lw_lbu_lhu)
mem_instr == orig(is_lbu_lhu_lw)
mem_instr == orig(dbg_insn_rs1)
mem_instr == orig(dbg_rs1val_valid)
mem_instr == orig(q_insn_rs1)
mem_instr == orig(dbg_valid_insn)
mem_instr == orig(cached_insn_rs1)
mem_instr == orig(cpu_state)
mem_instr == orig(latched_store)
mem_addr == reg_next_pc
mem_addr == orig(mem_addr)
mem_addr == orig(reg_next_pc)
mem_wdata == orig(mem_wdata)
mem_la_wdata == pcpi_insn
mem_la_wdata == trace_data
mem_la_wdata == reg_op2
mem_la_wdata == reg_out
mem_la_wdata == reg_sh
mem_la_wdata == irq_pending
mem_la_wdata == pcpi_int_rd
mem_la_wdata == mem_16bit_buffer
mem_la_wdata == dbg_rs2val
mem_la_wdata == current_pc
mem_la_wdata == pcpi_timeout_counter
mem_la_wdata == next_irq_pending
mem_la_wdata == alu_out
mem_la_wdata == alu_out_q
mem_la_wdata == alu_out_0
mem_la_wdata == alu_out_0_q
mem_la_wdata == alu_add_sub
mem_la_wdata == alu_shl
mem_la_wdata == alu_shr
mem_la_wdata == alu_eq
mem_la_wdata == alu_ltu
mem_la_wdata == alu_lts
mem_la_wdata == cpuregs_wrdata
mem_la_wdata == decoded_rs
mem_la_wdata == orig(mem_la_wdata)
mem_la_wdata == orig(pcpi_insn)
mem_la_wdata == orig(trace_data)
mem_la_wdata == orig(reg_op2)
mem_la_wdata == orig(reg_out)
mem_la_wdata == orig(reg_sh)
mem_la_wdata == orig(irq_pending)
mem_la_wdata == orig(pcpi_int_rd)
mem_la_wdata == orig(mem_16bit_buffer)
mem_la_wdata == orig(dbg_rs2val)
mem_la_wdata == orig(current_pc)
mem_la_wdata == orig(pcpi_timeout_counter)
mem_la_wdata == orig(next_irq_pending)
mem_la_wdata == orig(alu_out)
mem_la_wdata == orig(alu_out_q)
mem_la_wdata == orig(alu_out_0)
mem_la_wdata == orig(alu_out_0_q)
mem_la_wdata == orig(alu_add_sub)
mem_la_wdata == orig(alu_shl)
mem_la_wdata == orig(alu_shr)
mem_la_wdata == orig(alu_eq)
mem_la_wdata == orig(alu_ltu)
mem_la_wdata == orig(alu_lts)
mem_la_wdata == orig(cpuregs_wrdata)
mem_la_wdata == orig(decoded_rs)
mem_la_wstrb == orig(mem_la_wstrb)
count_instr == orig(count_instr)
reg_pc == dbg_insn_addr
reg_pc == orig(reg_pc)
reg_pc == orig(dbg_insn_addr)
reg_op1 == dbg_rs1val
reg_op1 == cpuregs_rs2
reg_op1 == orig(reg_op1)
reg_op1 == orig(dbg_rs1val)
reg_op1 == orig(cpuregs_rs1)
next_insn_opcode == mem_rdata_word
next_insn_opcode == mem_rdata_q
next_insn_opcode == orig(mem_rdata_word)
dbg_insn_opcode == q_insn_opcode
dbg_insn_opcode == orig(dbg_insn_opcode)
dbg_insn_opcode == orig(q_insn_opcode)
irq_mask == orig(irq_mask)
decoded_rd == decoded_rs1
decoded_rd == dbg_insn_rd
decoded_rd == q_insn_rd
decoded_rd == cached_insn_rd
decoded_rd == latched_rd
decoded_rd == orig(decoded_rd)
decoded_rd == orig(dbg_insn_rd)
decoded_rd == orig(q_insn_rd)
decoded_rd == orig(cached_insn_rd)
decoded_rd == orig(latched_rd)
new_ascii_instr == dbg_ascii_instr
new_ascii_instr == q_ascii_instr
new_ascii_instr == cached_ascii_instr
new_ascii_instr == orig(new_ascii_instr)
new_ascii_instr == orig(dbg_ascii_instr)
new_ascii_instr == orig(q_ascii_instr)
new_ascii_instr == orig(cached_ascii_instr)
cached_insn_opcode == orig(next_insn_opcode)
cached_insn_opcode == orig(mem_rdata_q)
cached_insn_opcode == orig(cached_insn_opcode)
dbg_ascii_state == orig(dbg_ascii_state)
trap == 0
mem_instr == 1
mem_addr == 12
mem_la_wdata == -1
mem_la_wstrb == 15
reg_pc == 8
reg_op1 == 1020
next_insn_opcode == 1114387
dbg_insn_opcode == 41219
irq_mask == 4294967295L
decoded_rd == 2
decoded_imm_j == 67584
new_ascii_instr == 27767
cached_insn_opcode one of { -1, 41219 }
dbg_ascii_state == 465541358957L
trap <= mem_wdata
trap < count_cycle
trap < count_instr
trap != cached_insn_opcode
trap != cpuregs_rs1
trap < orig(count_cycle)
mem_instr < count_cycle
mem_instr < count_instr
mem_instr != cached_insn_opcode
mem_instr < orig(count_cycle)
mem_addr < count_cycle
mem_addr != count_instr
mem_addr != cached_insn_opcode
mem_addr < orig(count_cycle)
mem_wdata > mem_la_wdata
22 * mem_wdata - count_cycle + 19 == 0
mem_wdata < count_cycle
4 * mem_wdata - count_instr + 3 == 0
mem_wdata < count_instr
mem_wdata < reg_op1
mem_wdata < next_insn_opcode
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata < decoded_imm_j
mem_wdata < new_ascii_instr
mem_wdata != cached_insn_opcode
mem_wdata < dbg_ascii_state
mem_wdata % cpuregs_rs1 == 0
mem_wdata >= cpuregs_rs1
22 * mem_wdata - orig(count_cycle) + 18 == 0
mem_wdata < orig(count_cycle)
mem_wdata < orig(decoded_imm_j)
mem_la_wdata < count_cycle
mem_la_wdata < count_instr
mem_la_wdata <= cached_insn_opcode
mem_la_wdata <= cpuregs_rs1
mem_la_wdata < orig(count_cycle)
mem_la_wstrb < count_cycle
mem_la_wstrb != cached_insn_opcode
mem_la_wstrb < orig(count_cycle)
2 * count_cycle - 11 * count_instr - 5 == 0
count_cycle > count_instr
count_cycle > reg_pc
count_cycle < reg_op1
count_cycle < next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle < irq_mask
count_cycle > decoded_rd
count_cycle < decoded_imm_j
count_cycle < new_ascii_instr
count_cycle != cached_insn_opcode
count_cycle < dbg_ascii_state
count_cycle > cpuregs_rs1
count_cycle - orig(count_cycle) - 1 == 0
count_cycle < orig(decoded_imm_j)
count_instr != reg_pc
count_instr < reg_op1
count_instr < next_insn_opcode
count_instr < dbg_insn_opcode
count_instr < irq_mask
count_instr > decoded_rd
count_instr < decoded_imm_j
count_instr < new_ascii_instr
count_instr != cached_insn_opcode
count_instr < dbg_ascii_state
count_instr > cpuregs_rs1
11 * count_instr - 2 * orig(count_cycle) + 3 == 0
count_instr < orig(count_cycle)
count_instr < orig(decoded_imm_j)
reg_pc != cached_insn_opcode
reg_pc < orig(count_cycle)
reg_op1 != cached_insn_opcode
reg_op1 > cpuregs_rs1
reg_op1 > orig(count_cycle)
next_insn_opcode > cached_insn_opcode
next_insn_opcode > cpuregs_rs1
next_insn_opcode > orig(count_cycle)
dbg_insn_opcode >= cached_insn_opcode
dbg_insn_opcode > cpuregs_rs1
dbg_insn_opcode > orig(count_cycle)
irq_mask > cached_insn_opcode
irq_mask > cpuregs_rs1
irq_mask > orig(count_cycle)
decoded_rd != cached_insn_opcode
decoded_rd < orig(count_cycle)
orig(count_cycle) % decoded_rd == 0
decoded_imm_j > cached_insn_opcode
decoded_imm_j > cpuregs_rs1
decoded_imm_j > orig(count_cycle)
new_ascii_instr != cached_insn_opcode
new_ascii_instr > cpuregs_rs1
new_ascii_instr > orig(count_cycle)
cached_insn_opcode < dbg_ascii_state
cached_insn_opcode >= cpuregs_rs1
cached_insn_opcode != orig(count_cycle)
cached_insn_opcode != orig(decoded_imm_j)
dbg_ascii_state > cpuregs_rs1
dbg_ascii_state > orig(count_cycle)
cpuregs_rs1 < orig(count_cycle)
cpuregs_rs1 < orig(decoded_imm_j)
41220 * mem_wdata + cached_insn_opcode - 41220 * cpuregs_rs1 - 41219 == 0
20610 * count_cycle + 11 * cached_insn_opcode - 453420 * cpuregs_rs1 - 844999 == 0
10305 * count_instr + cached_insn_opcode - 41220 * cpuregs_rs1 - 72134 == 0
11 * cached_insn_opcode - 453420 * cpuregs_rs1 + 20610 * orig(count_cycle) - 824389 == 0
Exiting Daikon.
