Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files .(read 1 decls file)
Processing trace data; reading 79 dtrace files:

===========================================================================
..tick():::ENTER
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_wordsize
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == last_mem_valid
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jal
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_sw
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoder_trigger
trap == decoder_trigger_q
trap == decoder_pseudo_trigger
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_lui_auipc_jal
trap == is_slli_srli_srai
trap == is_sb_sh_sw
trap == is_sll_srl_sra
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_rs2val_valid
trap == dbg_next
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_store
trap == latched_stalu
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == clear_prefetched_high_word_q
trap == cpuregs_write
mem_valid == mem_instr
mem_valid == mem_state
mem_valid == mem_do_prefetch
mem_valid == mem_do_rinst
mem_valid == dbg_rs1val_valid
mem_valid == dbg_valid_insn
mem_addr == reg_next_pc
mem_la_wdata == reg_op2
pcpi_insn == trace_data
pcpi_insn == reg_out
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == dbg_rs2val
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out_q
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == cpuregs_wrdata
pcpi_insn == decoded_rs
reg_pc == dbg_insn_addr
reg_op1 == dbg_rs1val
reg_op1 == cpuregs_rs1
next_insn_opcode == mem_rdata_word
next_insn_opcode == mem_rdata_q
next_insn_opcode == cached_insn_opcode
dbg_insn_opcode == q_insn_opcode
instr_lw == is_lb_lh_lw_lbu_lhu
instr_lw == is_lbu_lhu_lw
instr_addi == decoded_rs2
instr_addi == decoded_imm
instr_addi == is_jalr_addi_slti_sltiu_xori_ori_andi
instr_addi == is_lui_auipc_jal_jalr_addi_add_sub
instr_addi == is_alu_reg_imm
instr_addi == dbg_insn_imm
instr_addi == dbg_insn_rs2
instr_addi == q_insn_imm
instr_addi == q_insn_rs2
instr_addi == cached_insn_imm
instr_addi == cached_insn_rs2
decoded_rd == dbg_insn_rd
decoded_rd == q_insn_rd
decoded_rd == cached_insn_rd
decoded_rd == latched_rd
decoded_rs1 == dbg_insn_rs1
decoded_rs1 == q_insn_rs1
decoded_rs1 == cached_insn_rs1
new_ascii_instr == dbg_ascii_instr
new_ascii_instr == q_ascii_instr
new_ascii_instr == cached_ascii_instr
alu_out == alu_add_sub
alu_ltu == alu_lts
trap == 0
mem_valid == 1
mem_addr one of { 12, 16 }
mem_la_wdata one of { -1, 1 }
mem_la_wdata != 0
mem_la_wstrb == 15
pcpi_insn == -1
reg_pc one of { 8, 12 }
dbg_insn_opcode one of { 41219, 1114387 }
irq_mask == 4294967295L
instr_lw one of { 0, 1 }
instr_addi one of { 0, 1 }
decoded_rd == 2
decoded_rs1 one of { 1, 2 }
decoded_imm_j one of { 40960, 67584 }
new_ascii_instr one of { 27767, 1633969257 }
cpu_state one of { 1, 8 }
dbg_ascii_state one of { 1702389091, 465541358957L }
alu_out >= -1
alu_shl >= -1
alu_shr >= -1
alu_eq one of { -1, 0, 1 }
alu_ltu one of { -1, 0 }
cpuregs_rs2 one of { 0, 1020 }
trap < mem_addr
trap <= mem_wdata
trap != mem_la_wdata
trap < count_cycle
trap < count_instr
trap < reg_pc
trap < reg_op1
trap != next_insn_opcode
trap < dbg_insn_opcode
trap <= instr_lw
trap <= instr_addi
trap < decoded_rs1
trap < decoded_imm_j
trap < new_ascii_instr
trap < cpu_state
trap < dbg_ascii_state
trap != alu_out
trap != alu_shl
trap >= alu_ltu
trap <= cpuregs_rs2
mem_valid < mem_addr
mem_valid >= mem_la_wdata
mem_valid < count_cycle
mem_valid < count_instr
mem_valid < reg_pc
mem_valid <= reg_op1
mem_valid < dbg_insn_opcode
mem_valid >= instr_lw
mem_valid >= instr_addi
mem_valid <= decoded_rs1
mem_valid < decoded_imm_j
mem_valid < new_ascii_instr
mem_valid <= cpu_state
mem_valid < dbg_ascii_state
mem_valid != alu_out
mem_valid != alu_shl
mem_valid >= alu_eq
mem_valid > alu_ltu
mem_valid != cpuregs_rs2
mem_addr > mem_la_wdata
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr < count_cycle
mem_addr > reg_pc
mem_addr != reg_op1
mem_addr != next_insn_opcode
mem_addr < dbg_insn_opcode
mem_addr < irq_mask
mem_addr > instr_lw
mem_addr > instr_addi
mem_addr > decoded_rd
mem_addr > decoded_rs1
mem_addr < decoded_imm_j
mem_addr < new_ascii_instr
mem_addr > cpu_state
mem_addr < dbg_ascii_state
mem_addr != alu_out
mem_addr != alu_shl
mem_addr > alu_eq
mem_addr > alu_ltu
mem_addr != cpuregs_rs2
mem_wdata % mem_la_wdata == 0
mem_wdata >= mem_la_wdata
mem_wdata > pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata <= reg_op1
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata >= instr_addi
mem_wdata < decoded_imm_j
mem_wdata < new_ascii_instr
mem_wdata < dbg_ascii_state
mem_wdata != alu_out
mem_wdata != alu_shl
mem_wdata > alu_shr
mem_wdata >= alu_eq
mem_wdata > alu_ltu
mem_la_wdata < mem_la_wstrb
mem_la_wdata >= pcpi_insn
count_cycle % mem_la_wdata == 0
mem_la_wdata < count_cycle
count_instr % mem_la_wdata == 0
mem_la_wdata < count_instr
mem_la_wdata < reg_pc
mem_la_wdata <= reg_op1
reg_op1 % mem_la_wdata == 0
mem_la_wdata <= next_insn_opcode
next_insn_opcode % mem_la_wdata == 0
mem_la_wdata < dbg_insn_opcode
mem_la_wdata < irq_mask
mem_la_wdata != instr_lw
mem_la_wdata <= instr_addi
mem_la_wdata < decoded_rd
mem_la_wdata < decoded_rs1
mem_la_wdata < decoded_imm_j
mem_la_wdata < new_ascii_instr
mem_la_wdata < cpu_state
mem_la_wdata < dbg_ascii_state
alu_out % mem_la_wdata == 0
mem_la_wdata <= alu_out
alu_shl % mem_la_wdata == 0
mem_la_wdata <= alu_shl
alu_shr % mem_la_wdata == 0
alu_eq % mem_la_wdata == 0
mem_la_wdata >= alu_eq
mem_la_wdata >= alu_ltu
mem_la_wdata < cpuregs_rs2
mem_la_wstrb < count_cycle
mem_la_wstrb > reg_pc
mem_la_wstrb != reg_op1
mem_la_wstrb != next_insn_opcode
mem_la_wstrb < dbg_insn_opcode
mem_la_wstrb > instr_lw
mem_la_wstrb > instr_addi
mem_la_wstrb > decoded_rs1
mem_la_wstrb < decoded_imm_j
mem_la_wstrb < new_ascii_instr
mem_la_wstrb > cpu_state
mem_la_wstrb < dbg_ascii_state
mem_la_wstrb != alu_shl
mem_la_wstrb > alu_eq
mem_la_wstrb > alu_ltu
mem_la_wstrb != cpuregs_rs2
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < reg_op1
pcpi_insn <= next_insn_opcode
pcpi_insn < dbg_insn_opcode
pcpi_insn < instr_lw
pcpi_insn < instr_addi
pcpi_insn < decoded_rs1
pcpi_insn < decoded_imm_j
pcpi_insn < new_ascii_instr
pcpi_insn < cpu_state
pcpi_insn < dbg_ascii_state
pcpi_insn <= alu_out
pcpi_insn <= alu_shl
pcpi_insn <= alu_shr
pcpi_insn <= alu_eq
pcpi_insn <= alu_ltu
pcpi_insn < cpuregs_rs2
count_cycle > count_instr
count_cycle > reg_pc
count_cycle != reg_op1
count_cycle != next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle < irq_mask
count_cycle > instr_lw
count_cycle > instr_addi
count_cycle > decoded_rd
count_cycle % decoded_rs1 == 0
count_cycle > decoded_rs1
count_cycle < decoded_imm_j
count_cycle < new_ascii_instr
count_cycle > cpu_state
count_cycle < dbg_ascii_state
count_cycle > alu_out
count_cycle > alu_shl
count_cycle > alu_shr
count_cycle > alu_eq
count_cycle > alu_ltu
count_cycle != cpuregs_rs2
count_instr != reg_op1
count_instr != next_insn_opcode
count_instr < dbg_insn_opcode
count_instr < irq_mask
count_instr > instr_lw
count_instr > instr_addi
count_instr > decoded_rd
count_instr % decoded_rs1 == 0
count_instr > decoded_rs1
count_instr < decoded_imm_j
count_instr < new_ascii_instr
count_instr >= cpu_state
count_instr < dbg_ascii_state
count_instr % alu_out == 0
count_instr > alu_out
count_instr > alu_shl
count_instr > alu_shr
count_instr > alu_eq
count_instr > alu_ltu
count_instr != cpuregs_rs2
reg_pc < dbg_insn_opcode
reg_pc < irq_mask
reg_pc > instr_lw
reg_pc > instr_addi
reg_pc > decoded_rd
reg_pc > decoded_rs1
reg_pc < decoded_imm_j
reg_pc < new_ascii_instr
reg_pc > cpu_state
reg_pc < dbg_ascii_state
reg_pc > alu_eq
reg_pc > alu_ltu
reg_pc != cpuregs_rs2
reg_op1 < dbg_insn_opcode
reg_op1 < irq_mask
reg_op1 > instr_lw
reg_op1 >= instr_addi
reg_op1 < decoded_imm_j
reg_op1 < new_ascii_instr
reg_op1 != cpu_state
reg_op1 < dbg_ascii_state
reg_op1 != alu_out
reg_op1 != alu_shl
reg_op1 > alu_shr
reg_op1 >= alu_eq
reg_op1 > alu_ltu
reg_op1 != cpuregs_rs2
next_insn_opcode <= dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode != instr_lw
next_insn_opcode != decoded_imm_j
next_insn_opcode != new_ascii_instr
next_insn_opcode != cpu_state
next_insn_opcode < dbg_ascii_state
next_insn_opcode >= alu_shr
next_insn_opcode >= alu_eq
next_insn_opcode >= alu_ltu
next_insn_opcode != cpuregs_rs2
dbg_insn_opcode < irq_mask
dbg_insn_opcode > instr_lw
dbg_insn_opcode > instr_addi
dbg_insn_opcode > decoded_rd
dbg_insn_opcode > decoded_rs1
dbg_insn_opcode > decoded_imm_j
dbg_insn_opcode != new_ascii_instr
dbg_insn_opcode > cpu_state
dbg_insn_opcode < dbg_ascii_state
dbg_insn_opcode > alu_out
dbg_insn_opcode > alu_shl
dbg_insn_opcode > alu_shr
dbg_insn_opcode > alu_eq
dbg_insn_opcode > alu_ltu
dbg_insn_opcode > cpuregs_rs2
irq_mask > instr_lw
irq_mask > instr_addi
irq_mask > decoded_rs1
irq_mask > decoded_imm_j
irq_mask > new_ascii_instr
irq_mask > cpu_state
irq_mask != dbg_ascii_state
irq_mask > alu_out
irq_mask > alu_shl
irq_mask > alu_shr
irq_mask > alu_eq
irq_mask > alu_ltu
irq_mask > cpuregs_rs2
instr_lw != instr_addi
instr_lw < decoded_rd
instr_lw <= decoded_rs1
instr_lw < decoded_imm_j
instr_lw < new_ascii_instr
instr_lw <= cpu_state
instr_lw < dbg_ascii_state
instr_lw != alu_out
instr_lw % alu_out == 0
instr_lw != alu_shl
instr_lw % alu_shl == 0
instr_lw >= alu_ltu
instr_lw != cpuregs_rs2
instr_addi < decoded_rd
instr_addi < decoded_rs1
instr_addi < decoded_imm_j
instr_addi < new_ascii_instr
instr_addi < cpu_state
instr_addi < dbg_ascii_state
instr_addi != alu_out
instr_addi != alu_shl
instr_addi >= alu_eq
instr_addi > alu_ltu
instr_addi <= cpuregs_rs2
decoded_rd >= decoded_rs1
decoded_rd < decoded_imm_j
decoded_rd < new_ascii_instr
decoded_rd != cpu_state
decoded_rd < dbg_ascii_state
decoded_rd > alu_eq
decoded_rd > alu_ltu
decoded_rd != cpuregs_rs2
decoded_rs1 < decoded_imm_j
decoded_rs1 < new_ascii_instr
decoded_rs1 <= cpu_state
decoded_rs1 < dbg_ascii_state
alu_shl % decoded_rs1 == 0
decoded_rs1 > alu_eq
decoded_rs1 > alu_ltu
decoded_rs1 != cpuregs_rs2
decoded_imm_j != new_ascii_instr
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j > alu_out
decoded_imm_j > alu_shl
decoded_imm_j > alu_shr
decoded_imm_j > alu_eq
decoded_imm_j > alu_ltu
decoded_imm_j > cpuregs_rs2
new_ascii_instr > cpu_state
new_ascii_instr < dbg_ascii_state
new_ascii_instr > alu_out
new_ascii_instr > alu_shl
new_ascii_instr > alu_shr
new_ascii_instr > alu_eq
new_ascii_instr > alu_ltu
new_ascii_instr > cpuregs_rs2
cpu_state < dbg_ascii_state
cpu_state != alu_out
cpu_state > alu_eq
cpu_state > alu_ltu
cpu_state != cpuregs_rs2
dbg_ascii_state > alu_out
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
dbg_ascii_state > alu_eq
dbg_ascii_state > alu_ltu
dbg_ascii_state > cpuregs_rs2
alu_out <= alu_shl
alu_out >= alu_shr
alu_out >= alu_eq
alu_ltu % alu_out == 0
alu_out >= alu_ltu
alu_out < cpuregs_rs2
alu_shl >= alu_shr
alu_shl >= alu_eq
alu_ltu % alu_shl == 0
alu_shl >= alu_ltu
alu_shl < cpuregs_rs2
alu_shr >= alu_ltu
alu_shr < cpuregs_rs2
alu_eq >= alu_ltu
alu_eq < cpuregs_rs2
alu_ltu < cpuregs_rs2
7 * mem_addr + 88 * mem_wdata - 4 * count_cycle - 16 == 0
mem_addr + 16 * mem_wdata - 4 * count_instr == 0
3 * mem_addr - 8 * count_cycle + 44 * count_instr - 32 == 0
511 * mem_addr + 2 * reg_op1 - 2 * alu_out - 8174 == 0
2041 * mem_addr + 8 * reg_op1 - 4 * alu_shl - 32656 == 0
3 * mem_addr - 8 * alu_out + 4 * alu_shl - 40 == 0
44 * mem_wdata + 7 * mem_la_wdata - 2 * count_cycle + 41 == 0
8 * mem_wdata + mem_la_wdata - 2 * count_instr + 7 == 0
6 * mem_wdata + count_cycle - 7 * count_instr + 4 == 0
88 * mem_wdata - 4 * count_cycle + 7 * reg_pc + 12 == 0
23609696 * mem_wdata - 1073168 * count_cycle + 7 * dbg_insn_opcode + 17955323 == 0
22 * mem_wdata - count_cycle - 7 * instr_lw + 24 == 0
22 * mem_wdata - count_cycle + 7 * instr_addi + 17 == 0
22 * mem_wdata - count_cycle + 7 * decoded_rs1 + 10 == 0
585728 * mem_wdata - 26624 * count_cycle + 7 * decoded_imm_j + 165888 == 0
3.594671278E10 * mem_wdata - 1633941490 * count_cycle + 7 * new_ascii_instr + 2.7776810961E10 == 0
22 * mem_wdata - count_cycle + cpu_state + 16 == 0
1.0204457337052E13 * mem_wdata - 4.63838969866E11 * count_cycle - 7 * dbg_ascii_state + 1.1144052000421E13 == 0
22 * mem_wdata - count_cycle + 7 * alu_ltu + 24 == 0
22440 * mem_wdata - 1020 * count_cycle + 7 * cpuregs_rs2 + 17340 == 0
16 * mem_wdata - 4 * count_instr + reg_pc + 4 == 0
4292672 * mem_wdata - 1073168 * count_instr + dbg_insn_opcode + 3178285 == 0
4 * mem_wdata - count_instr - instr_lw + 4 == 0
4 * mem_wdata - count_instr + instr_addi + 3 == 0
4 * mem_wdata - count_instr + decoded_rs1 + 2 == 0
106496 * mem_wdata - 26624 * count_instr + decoded_imm_j + 38912 == 0
6.53576596E9 * mem_wdata - 1633941490 * count_instr + new_ascii_instr + 4.901796703E9 == 0
28 * mem_wdata - 7 * count_instr + cpu_state + 20 == 0
1.855355879464E12 * mem_wdata - 4.63838969866E11 * count_instr - dbg_ascii_state + 1.857058268555E12 == 0
4 * mem_wdata - count_instr + alu_ltu + 4 == 0
4080 * mem_wdata - 1020 * count_instr + cpuregs_rs2 + 3060 == 0
3 * mem_la_wdata - 4 * count_cycle + 22 * count_instr + 5 == 0
511 * mem_la_wdata + reg_op1 - alu_out - 510 == 0
2041 * mem_la_wdata + 4 * reg_op1 - 2 * alu_shl - 2041 == 0
3 * mem_la_wdata - 4 * alu_out + 2 * alu_shl + 1 == 0
8 * count_cycle - 44 * count_instr - 3 * reg_pc + 20 == 0
2146336 * count_cycle - 11804848 * count_instr - 3 * dbg_insn_opcode - 949511 == 0
2 * count_cycle - 11 * count_instr + 3 * instr_lw - 4 == 0
2 * count_cycle - 11 * count_instr - 3 * instr_addi - 1 == 0
2 * count_cycle - 11 * count_instr - 3 * decoded_rs1 + 2 == 0
53248 * count_cycle - 292864 * count_instr - 3 * decoded_imm_j + 96256 == 0
3.26788298E9 * count_cycle - 1.797335639E10 * count_instr - 3 * new_ascii_instr - 1633858189 == 0
14 * count_cycle - 77 * count_instr - 3 * cpu_state - 4 == 0
9.27677939732E11 * count_cycle - 5.102228668526E12 * count_instr + 3 * dbg_ascii_state - 1.860463046737E12 == 0
2 * count_cycle - 11 * count_instr - 3 * alu_ltu - 4 == 0
680 * count_cycle - 3740 * count_instr - cpuregs_rs2 - 340 == 0
511 * reg_pc + 2 * reg_op1 - 2 * alu_out - 6130 == 0
2041 * reg_pc + 8 * reg_op1 - 4 * alu_shl - 24492 == 0
3 * reg_pc - 8 * alu_out + 4 * alu_shl - 28 == 0
536584 * reg_op1 + 511 * dbg_insn_opcode - 536584 * alu_out - 568915173 == 0
2146336 * reg_op1 + 2041 * dbg_insn_opcode - 1073168 * alu_shl - 2.274463867E9 == 0
reg_op1 - 1022 * instr_lw - alu_out + 1 == 0
2 * reg_op1 - 2041 * instr_lw - alu_shl == 0
reg_op1 + 1022 * instr_addi - alu_out - 1021 == 0
2 * reg_op1 + 2041 * instr_addi - alu_shl - 2041 == 0
reg_op1 + 1022 * decoded_rs1 - alu_out - 2043 == 0
2 * reg_op1 + 2041 * decoded_rs1 - alu_shl - 4082 == 0
13312 * reg_op1 + 511 * decoded_imm_j - 13312 * alu_out - 34522112 == 0
4096 * reg_op1 + 157 * decoded_imm_j - 2048 * alu_shl - 10610688 == 0
816970745 * reg_op1 + 511 * new_ascii_instr - 816970745 * alu_out - 8.34141319582E11 == 0
3.26788298E9 * reg_op1 + 2041 * new_ascii_instr - 1633941490 * alu_shl - 3.334931253537E12 == 0
reg_op1 + 146 * cpu_state - alu_out - 1167 == 0
14 * reg_op1 + 2041 * cpu_state - 7 * alu_shl - 16328 == 0
2.31919484933E11 * reg_op1 - 511 * dbg_ascii_state - 2.31919484933E11 * alu_out + 1.101840310434E12 == 0
9.27677939732E11 * reg_op1 - 2041 * dbg_ascii_state - 4.63838969866E11 * alu_shl + 3.474576134731E12 == 0
3 * reg_op1 + 2041 * alu_out - 1022 * alu_shl - 2041 == 0
reg_op1 - alu_out + 1022 * alu_ltu + 1 == 0
510 * reg_op1 - 510 * alu_out + 511 * cpuregs_rs2 - 520710 == 0
2 * reg_op1 - alu_shl + 2041 * alu_ltu == 0
2040 * reg_op1 - 1020 * alu_shl + 2041 * cpuregs_rs2 - 2081820 == 0
3 * dbg_insn_opcode - 2146336 * alu_out + 1073168 * alu_shl - 1196825 == 0
3 * instr_lw + 2 * alu_out - alu_shl - 2 == 0
3 * instr_addi - 2 * alu_out + alu_shl - 1 == 0
3 * decoded_rs1 - 2 * alu_out + alu_shl - 4 == 0
3 * decoded_imm_j - 53248 * alu_out + 26624 * alu_shl - 149504 == 0
3 * new_ascii_instr - 3.26788298E9 * alu_out + 1633941490 * alu_shl - 1634024791 == 0
3 * cpu_state - 14 * alu_out + 7 * alu_shl - 10 == 0
3 * dbg_ascii_state + 9.27677939732E11 * alu_out - 4.63838969866E11 * alu_shl - 9.32785107005E11 == 0
2 * alu_out - alu_shl - 3 * alu_ltu - 2 == 0
680 * alu_out - 340 * alu_shl - cpuregs_rs2 + 340 == 0
===========================================================================
..tick():::EXIT
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_wordsize
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jal
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_sw
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoder_trigger
trap == decoder_trigger_q
trap == decoder_pseudo_trigger
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_lui_auipc_jal
trap == is_slli_srli_srai
trap == is_sb_sh_sw
trap == is_sll_srl_sra
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_rs2val_valid
trap == dbg_next
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == clear_prefetched_high_word_q
trap == orig(trap)
trap == orig(mem_wstrb)
trap == orig(pcpi_valid)
trap == orig(eoi)
trap == orig(trace_valid)
trap == orig(irq_delay)
trap == orig(irq_active)
trap == orig(timer)
trap == orig(pcpi_int_wr)
trap == orig(pcpi_int_wait)
trap == orig(pcpi_int_ready)
trap == orig(mem_wordsize)
trap == orig(mem_do_rdata)
trap == orig(mem_do_wdata)
trap == orig(mem_la_secondword)
trap == orig(mem_la_firstword_reg)
trap == orig(last_mem_valid)
trap == orig(prefetched_high_word)
trap == orig(clear_prefetched_high_word)
trap == orig(instr_lui)
trap == orig(instr_auipc)
trap == orig(instr_jal)
trap == orig(instr_jalr)
trap == orig(instr_beq)
trap == orig(instr_bne)
trap == orig(instr_blt)
trap == orig(instr_bge)
trap == orig(instr_bltu)
trap == orig(instr_bgeu)
trap == orig(instr_lb)
trap == orig(instr_lh)
trap == orig(instr_lbu)
trap == orig(instr_lhu)
trap == orig(instr_sb)
trap == orig(instr_sh)
trap == orig(instr_sw)
trap == orig(instr_slti)
trap == orig(instr_sltiu)
trap == orig(instr_xori)
trap == orig(instr_ori)
trap == orig(instr_andi)
trap == orig(instr_slli)
trap == orig(instr_srli)
trap == orig(instr_srai)
trap == orig(instr_add)
trap == orig(instr_sub)
trap == orig(instr_sll)
trap == orig(instr_slt)
trap == orig(instr_sltu)
trap == orig(instr_xor)
trap == orig(instr_srl)
trap == orig(instr_sra)
trap == orig(instr_or)
trap == orig(instr_and)
trap == orig(instr_rdcycle)
trap == orig(instr_rdcycleh)
trap == orig(instr_rdinstr)
trap == orig(instr_rdinstrh)
trap == orig(instr_ecall_ebreak)
trap == orig(instr_getq)
trap == orig(instr_setq)
trap == orig(instr_retirq)
trap == orig(instr_maskirq)
trap == orig(instr_waitirq)
trap == orig(instr_timer)
trap == orig(decoder_trigger)
trap == orig(decoder_trigger_q)
trap == orig(decoder_pseudo_trigger)
trap == orig(decoder_pseudo_trigger_q)
trap == orig(compressed_instr)
trap == orig(is_lui_auipc_jal)
trap == orig(is_slli_srli_srai)
trap == orig(is_sb_sh_sw)
trap == orig(is_sll_srl_sra)
trap == orig(is_slti_blt_slt)
trap == orig(is_sltiu_bltu_sltu)
trap == orig(is_beq_bne_blt_bge_bltu_bgeu)
trap == orig(is_alu_reg_reg)
trap == orig(is_compare)
trap == orig(dbg_rs2val_valid)
trap == orig(dbg_next)
trap == orig(irq_state)
trap == orig(set_mem_do_rinst)
trap == orig(set_mem_do_rdata)
trap == orig(set_mem_do_wdata)
trap == orig(latched_store)
trap == orig(latched_stalu)
trap == orig(latched_branch)
trap == orig(latched_compr)
trap == orig(latched_trace)
trap == orig(latched_is_lu)
trap == orig(latched_is_lh)
trap == orig(latched_is_lb)
trap == orig(pcpi_timeout)
trap == orig(do_waitirq)
trap == orig(alu_wait)
trap == orig(alu_wait_2)
trap == orig(clear_prefetched_high_word_q)
trap == orig(cpuregs_write)
mem_valid == mem_instr
mem_valid == mem_state
mem_valid == mem_do_prefetch
mem_valid == mem_do_rinst
mem_valid == last_mem_valid
mem_valid == dbg_rs1val_valid
mem_valid == dbg_valid_insn
mem_valid == latched_store
mem_valid == orig(mem_valid)
mem_valid == orig(mem_instr)
mem_valid == orig(mem_state)
mem_valid == orig(mem_do_prefetch)
mem_valid == orig(mem_do_rinst)
mem_valid == orig(dbg_rs1val_valid)
mem_valid == orig(dbg_valid_insn)
mem_addr == reg_next_pc
mem_addr == orig(mem_addr)
mem_addr == orig(reg_next_pc)
mem_wdata == orig(mem_wdata)
mem_la_wdata == reg_op2
mem_la_wdata == orig(mem_la_wdata)
mem_la_wdata == orig(reg_op2)
mem_la_wstrb == orig(mem_la_wstrb)
pcpi_insn == trace_data
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == dbg_rs2val
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == decoded_rs
pcpi_insn == orig(pcpi_insn)
pcpi_insn == orig(trace_data)
pcpi_insn == orig(reg_out)
pcpi_insn == orig(reg_sh)
pcpi_insn == orig(irq_pending)
pcpi_insn == orig(pcpi_int_rd)
pcpi_insn == orig(mem_16bit_buffer)
pcpi_insn == orig(dbg_rs2val)
pcpi_insn == orig(current_pc)
pcpi_insn == orig(pcpi_timeout_counter)
pcpi_insn == orig(next_irq_pending)
pcpi_insn == orig(alu_out_q)
pcpi_insn == orig(alu_out_0)
pcpi_insn == orig(alu_out_0_q)
pcpi_insn == orig(cpuregs_wrdata)
pcpi_insn == orig(decoded_rs)
count_instr == orig(count_instr)
reg_pc == dbg_insn_addr
reg_pc == orig(reg_pc)
reg_pc == orig(dbg_insn_addr)
reg_op1 == dbg_rs1val
reg_op1 == cpuregs_rs1
reg_op1 == orig(reg_op1)
reg_op1 == orig(dbg_rs1val)
reg_op1 == orig(cpuregs_rs1)
next_insn_opcode == mem_rdata_q
next_insn_opcode == cached_insn_opcode
next_insn_opcode == orig(next_insn_opcode)
next_insn_opcode == orig(mem_rdata_word)
next_insn_opcode == orig(mem_rdata_q)
next_insn_opcode == orig(cached_insn_opcode)
dbg_insn_opcode == q_insn_opcode
dbg_insn_opcode == orig(dbg_insn_opcode)
dbg_insn_opcode == orig(q_insn_opcode)
irq_mask == orig(irq_mask)
instr_lw == is_lb_lh_lw_lbu_lhu
instr_lw == is_lbu_lhu_lw
instr_lw == orig(instr_lw)
instr_lw == orig(is_lb_lh_lw_lbu_lhu)
instr_lw == orig(is_lbu_lhu_lw)
instr_addi == decoded_rs2
instr_addi == decoded_imm
instr_addi == is_jalr_addi_slti_sltiu_xori_ori_andi
instr_addi == is_lui_auipc_jal_jalr_addi_add_sub
instr_addi == is_alu_reg_imm
instr_addi == dbg_insn_imm
instr_addi == dbg_insn_rs2
instr_addi == q_insn_imm
instr_addi == q_insn_rs2
instr_addi == cached_insn_imm
instr_addi == cached_insn_rs2
instr_addi == latched_stalu
instr_addi == cpuregs_write
instr_addi == orig(instr_addi)
instr_addi == orig(decoded_rs2)
instr_addi == orig(decoded_imm)
instr_addi == orig(is_jalr_addi_slti_sltiu_xori_ori_andi)
instr_addi == orig(is_lui_auipc_jal_jalr_addi_add_sub)
instr_addi == orig(is_alu_reg_imm)
instr_addi == orig(dbg_insn_imm)
instr_addi == orig(dbg_insn_rs2)
instr_addi == orig(q_insn_imm)
instr_addi == orig(q_insn_rs2)
instr_addi == orig(cached_insn_imm)
instr_addi == orig(cached_insn_rs2)
decoded_rd == dbg_insn_rd
decoded_rd == q_insn_rd
decoded_rd == cached_insn_rd
decoded_rd == latched_rd
decoded_rd == orig(decoded_rd)
decoded_rd == orig(dbg_insn_rd)
decoded_rd == orig(q_insn_rd)
decoded_rd == orig(cached_insn_rd)
decoded_rd == orig(latched_rd)
decoded_rs1 == dbg_insn_rs1
decoded_rs1 == q_insn_rs1
decoded_rs1 == cached_insn_rs1
decoded_rs1 == orig(decoded_rs1)
decoded_rs1 == orig(dbg_insn_rs1)
decoded_rs1 == orig(q_insn_rs1)
decoded_rs1 == orig(cached_insn_rs1)
decoded_imm_j == orig(decoded_imm_j)
new_ascii_instr == dbg_ascii_instr
new_ascii_instr == q_ascii_instr
new_ascii_instr == cached_ascii_instr
new_ascii_instr == orig(new_ascii_instr)
new_ascii_instr == orig(dbg_ascii_instr)
new_ascii_instr == orig(q_ascii_instr)
new_ascii_instr == orig(cached_ascii_instr)
alu_out == alu_out_q
alu_out == alu_add_sub
alu_out == cpuregs_wrdata
alu_out == orig(alu_out)
alu_out == orig(alu_add_sub)
alu_shl == orig(alu_shl)
alu_shr == orig(alu_shr)
alu_eq == orig(alu_eq)
alu_ltu == alu_lts
alu_ltu == orig(alu_ltu)
alu_ltu == orig(alu_lts)
cpuregs_rs2 == orig(cpuregs_rs2)
trap == 0
mem_valid == 1
mem_addr one of { 12, 16 }
mem_la_wdata one of { -1, 1 }
mem_la_wdata != 0
mem_la_wstrb == 15
pcpi_insn == -1
reg_pc one of { 8, 12 }
reg_out one of { -1, 13 }
reg_out != 0
dbg_insn_opcode one of { 41219, 1114387 }
irq_mask == 4294967295L
mem_rdata_word one of { 1114387, 2138147 }
instr_lw one of { 0, 1 }
instr_addi one of { 0, 1 }
decoded_rd == 2
decoded_rs1 one of { 1, 2 }
decoded_imm_j one of { 40960, 67584 }
new_ascii_instr one of { 27767, 1633969257 }
cpu_state one of { 1, 64 }
dbg_ascii_state one of { 439788790632L, 465541358957L }
alu_out >= -1
alu_shl >= -1
alu_shr >= -1
alu_eq one of { -1, 0, 1 }
alu_ltu one of { -1, 0 }
cpuregs_rs2 one of { 0, 1020 }
trap < mem_addr
trap <= mem_wdata
trap != mem_la_wdata
trap < count_cycle
trap < count_instr
trap < reg_pc
trap < reg_op1
trap != reg_out
trap != next_insn_opcode
trap < dbg_insn_opcode
trap < mem_rdata_word
trap <= instr_lw
trap <= instr_addi
trap < decoded_rs1
trap < decoded_imm_j
trap < new_ascii_instr
trap < cpu_state
trap < dbg_ascii_state
trap != alu_out
trap != alu_shl
trap >= alu_ltu
trap <= cpuregs_rs2
trap < orig(count_cycle)
trap < orig(cpu_state)
trap < orig(dbg_ascii_state)
mem_valid < mem_addr
mem_valid >= mem_la_wdata
mem_valid < count_cycle
mem_valid < count_instr
mem_valid < reg_pc
mem_valid <= reg_op1
mem_valid != reg_out
mem_valid < dbg_insn_opcode
mem_valid < mem_rdata_word
mem_valid >= instr_lw
mem_valid >= instr_addi
mem_valid <= decoded_rs1
mem_valid < decoded_imm_j
mem_valid < new_ascii_instr
mem_valid <= cpu_state
mem_valid < dbg_ascii_state
mem_valid != alu_out
mem_valid != alu_shl
mem_valid >= alu_eq
mem_valid > alu_ltu
mem_valid != cpuregs_rs2
mem_valid < orig(count_cycle)
mem_valid <= orig(cpu_state)
mem_valid < orig(dbg_ascii_state)
mem_addr > mem_la_wdata
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr < count_cycle
mem_addr > reg_pc
mem_addr != reg_op1
mem_addr > reg_out
mem_addr != next_insn_opcode
mem_addr < dbg_insn_opcode
mem_addr < irq_mask
mem_addr < mem_rdata_word
mem_addr > instr_lw
mem_addr > instr_addi
mem_addr > decoded_rd
mem_addr > decoded_rs1
mem_addr < decoded_imm_j
mem_addr < new_ascii_instr
mem_addr != cpu_state
mem_addr < dbg_ascii_state
mem_addr != alu_out
mem_addr != alu_shl
mem_addr > alu_eq
mem_addr > alu_ltu
mem_addr != cpuregs_rs2
mem_addr < orig(count_cycle)
mem_addr > orig(cpu_state)
mem_addr < orig(dbg_ascii_state)
mem_wdata % mem_la_wdata == 0
mem_wdata >= mem_la_wdata
mem_wdata > pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata <= reg_op1
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata < mem_rdata_word
mem_wdata >= instr_addi
mem_wdata < decoded_imm_j
mem_wdata < new_ascii_instr
mem_wdata < dbg_ascii_state
mem_wdata != alu_out
mem_wdata != alu_shl
mem_wdata > alu_shr
mem_wdata >= alu_eq
mem_wdata > alu_ltu
mem_wdata < orig(count_cycle)
mem_wdata < orig(dbg_ascii_state)
mem_la_wdata < mem_la_wstrb
mem_la_wdata >= pcpi_insn
count_cycle % mem_la_wdata == 0
mem_la_wdata < count_cycle
count_instr % mem_la_wdata == 0
mem_la_wdata < count_instr
mem_la_wdata < reg_pc
mem_la_wdata <= reg_op1
reg_op1 % mem_la_wdata == 0
mem_la_wdata <= reg_out
mem_la_wdata <= next_insn_opcode
next_insn_opcode % mem_la_wdata == 0
mem_la_wdata < dbg_insn_opcode
mem_la_wdata < irq_mask
mem_la_wdata < mem_rdata_word
mem_la_wdata != instr_lw
mem_la_wdata <= instr_addi
mem_la_wdata < decoded_rd
mem_la_wdata < decoded_rs1
mem_la_wdata < decoded_imm_j
mem_la_wdata < new_ascii_instr
mem_la_wdata < cpu_state
mem_la_wdata < dbg_ascii_state
alu_out % mem_la_wdata == 0
mem_la_wdata <= alu_out
alu_shl % mem_la_wdata == 0
mem_la_wdata <= alu_shl
alu_shr % mem_la_wdata == 0
alu_eq % mem_la_wdata == 0
mem_la_wdata >= alu_eq
mem_la_wdata >= alu_ltu
mem_la_wdata < cpuregs_rs2
mem_la_wdata < orig(count_cycle)
orig(count_cycle) % mem_la_wdata == 0
mem_la_wdata < orig(cpu_state)
mem_la_wdata < orig(dbg_ascii_state)
mem_la_wstrb < count_cycle
mem_la_wstrb > reg_pc
mem_la_wstrb != reg_op1
mem_la_wstrb > reg_out
mem_la_wstrb != next_insn_opcode
mem_la_wstrb < dbg_insn_opcode
mem_la_wstrb < mem_rdata_word
mem_la_wstrb > instr_lw
mem_la_wstrb > instr_addi
mem_la_wstrb > decoded_rs1
mem_la_wstrb < decoded_imm_j
mem_la_wstrb < new_ascii_instr
mem_la_wstrb != cpu_state
mem_la_wstrb < dbg_ascii_state
mem_la_wstrb != alu_shl
mem_la_wstrb > alu_eq
mem_la_wstrb > alu_ltu
mem_la_wstrb != cpuregs_rs2
mem_la_wstrb < orig(count_cycle)
mem_la_wstrb > orig(cpu_state)
mem_la_wstrb < orig(dbg_ascii_state)
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < reg_op1
pcpi_insn <= reg_out
pcpi_insn <= next_insn_opcode
pcpi_insn < dbg_insn_opcode
pcpi_insn < mem_rdata_word
pcpi_insn < instr_lw
pcpi_insn < instr_addi
pcpi_insn < decoded_rs1
pcpi_insn < decoded_imm_j
pcpi_insn < new_ascii_instr
pcpi_insn < cpu_state
pcpi_insn < dbg_ascii_state
pcpi_insn <= alu_out
pcpi_insn <= alu_shl
pcpi_insn <= alu_shr
pcpi_insn <= alu_eq
pcpi_insn <= alu_ltu
pcpi_insn < cpuregs_rs2
pcpi_insn < orig(count_cycle)
pcpi_insn < orig(cpu_state)
pcpi_insn < orig(dbg_ascii_state)
count_cycle > count_instr
count_cycle > reg_pc
count_cycle != reg_op1
count_cycle > reg_out
count_cycle != next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle < irq_mask
count_cycle < mem_rdata_word
count_cycle > instr_lw
count_cycle > instr_addi
count_cycle > decoded_rd
count_cycle > decoded_rs1
count_cycle < decoded_imm_j
count_cycle < new_ascii_instr
count_cycle != cpu_state
count_cycle < dbg_ascii_state
count_cycle > alu_out
count_cycle > alu_shl
count_cycle > alu_shr
count_cycle > alu_eq
count_cycle > alu_ltu
count_cycle != cpuregs_rs2
count_cycle - orig(count_cycle) - 1 == 0
count_cycle > orig(cpu_state)
count_cycle < orig(dbg_ascii_state)
count_instr != reg_op1
count_instr != reg_out
count_instr != next_insn_opcode
count_instr < dbg_insn_opcode
count_instr < irq_mask
count_instr < mem_rdata_word
count_instr > instr_lw
count_instr > instr_addi
count_instr > decoded_rd
count_instr % decoded_rs1 == 0
count_instr > decoded_rs1
count_instr < decoded_imm_j
count_instr < new_ascii_instr
count_instr != cpu_state
count_instr < dbg_ascii_state
count_instr % alu_out == 0
count_instr > alu_out
count_instr > alu_shl
count_instr > alu_shr
count_instr > alu_eq
count_instr > alu_ltu
count_instr != cpuregs_rs2
count_instr < orig(count_cycle)
count_instr >= orig(cpu_state)
count_instr < orig(dbg_ascii_state)
reg_pc != reg_out
reg_pc < dbg_insn_opcode
reg_pc < irq_mask
reg_pc < mem_rdata_word
reg_pc > instr_lw
reg_pc > instr_addi
reg_pc > decoded_rd
reg_pc > decoded_rs1
reg_pc < decoded_imm_j
reg_pc < new_ascii_instr
reg_pc != cpu_state
reg_pc < dbg_ascii_state
reg_pc > alu_eq
reg_pc > alu_ltu
reg_pc != cpuregs_rs2
reg_pc < orig(count_cycle)
reg_pc > orig(cpu_state)
reg_pc < orig(dbg_ascii_state)
reg_op1 < dbg_insn_opcode
reg_op1 < irq_mask
reg_op1 < mem_rdata_word
reg_op1 > instr_lw
reg_op1 >= instr_addi
reg_op1 < decoded_imm_j
reg_op1 < new_ascii_instr
reg_op1 != cpu_state
reg_op1 < dbg_ascii_state
reg_op1 != alu_out
reg_op1 != alu_shl
reg_op1 > alu_shr
reg_op1 >= alu_eq
reg_op1 > alu_ltu
reg_op1 != cpuregs_rs2
reg_op1 != orig(count_cycle)
reg_op1 != orig(cpu_state)
reg_op1 < orig(dbg_ascii_state)
reg_out < dbg_insn_opcode
reg_out < irq_mask
reg_out < mem_rdata_word
reg_out != instr_lw
reg_out != instr_addi
reg_out != decoded_rd
reg_out != decoded_rs1
reg_out < decoded_imm_j
reg_out < new_ascii_instr
reg_out < cpu_state
reg_out < dbg_ascii_state
reg_out >= alu_eq
reg_out >= alu_ltu
reg_out < cpuregs_rs2
reg_out < orig(count_cycle)
reg_out != orig(cpu_state)
reg_out < orig(dbg_ascii_state)
next_insn_opcode <= dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode < mem_rdata_word
next_insn_opcode != instr_lw
next_insn_opcode != decoded_imm_j
next_insn_opcode != new_ascii_instr
next_insn_opcode != cpu_state
next_insn_opcode < dbg_ascii_state
next_insn_opcode >= alu_shr
next_insn_opcode >= alu_eq
next_insn_opcode >= alu_ltu
next_insn_opcode != cpuregs_rs2
next_insn_opcode != orig(count_cycle)
next_insn_opcode != orig(cpu_state)
next_insn_opcode < orig(dbg_ascii_state)
dbg_insn_opcode < irq_mask
dbg_insn_opcode < mem_rdata_word
dbg_insn_opcode > instr_lw
dbg_insn_opcode > instr_addi
dbg_insn_opcode > decoded_rd
dbg_insn_opcode > decoded_rs1
dbg_insn_opcode > decoded_imm_j
dbg_insn_opcode != new_ascii_instr
dbg_insn_opcode > cpu_state
dbg_insn_opcode < dbg_ascii_state
dbg_insn_opcode > alu_out
dbg_insn_opcode > alu_shl
dbg_insn_opcode > alu_shr
dbg_insn_opcode > alu_eq
dbg_insn_opcode > alu_ltu
dbg_insn_opcode > cpuregs_rs2
dbg_insn_opcode > orig(count_cycle)
dbg_insn_opcode > orig(cpu_state)
dbg_insn_opcode < orig(dbg_ascii_state)
irq_mask > mem_rdata_word
irq_mask > instr_lw
irq_mask > instr_addi
irq_mask > decoded_rs1
irq_mask > decoded_imm_j
irq_mask > new_ascii_instr
irq_mask > cpu_state
irq_mask < dbg_ascii_state
irq_mask > alu_out
irq_mask > alu_shl
irq_mask > alu_shr
irq_mask > alu_eq
irq_mask > alu_ltu
irq_mask > cpuregs_rs2
irq_mask > orig(count_cycle)
irq_mask > orig(cpu_state)
irq_mask != orig(dbg_ascii_state)
mem_rdata_word > instr_lw
mem_rdata_word > instr_addi
mem_rdata_word > decoded_rd
mem_rdata_word > decoded_rs1
mem_rdata_word > decoded_imm_j
mem_rdata_word != new_ascii_instr
mem_rdata_word > cpu_state
mem_rdata_word < dbg_ascii_state
mem_rdata_word > alu_out
mem_rdata_word > alu_shl
mem_rdata_word > alu_shr
mem_rdata_word > alu_eq
mem_rdata_word > alu_ltu
mem_rdata_word > cpuregs_rs2
mem_rdata_word > orig(count_cycle)
mem_rdata_word > orig(cpu_state)
mem_rdata_word < orig(dbg_ascii_state)
instr_lw != instr_addi
instr_lw < decoded_rd
instr_lw <= decoded_rs1
instr_lw < decoded_imm_j
instr_lw < new_ascii_instr
instr_lw <= cpu_state
instr_lw < dbg_ascii_state
instr_lw != alu_out
instr_lw % alu_out == 0
instr_lw != alu_shl
instr_lw % alu_shl == 0
instr_lw >= alu_ltu
instr_lw != cpuregs_rs2
instr_lw < orig(count_cycle)
instr_lw <= orig(cpu_state)
instr_lw < orig(dbg_ascii_state)
instr_addi < decoded_rd
instr_addi < decoded_rs1
instr_addi < decoded_imm_j
instr_addi < new_ascii_instr
instr_addi < cpu_state
instr_addi < dbg_ascii_state
instr_addi != alu_out
instr_addi != alu_shl
instr_addi >= alu_eq
instr_addi > alu_ltu
instr_addi <= cpuregs_rs2
instr_addi < orig(count_cycle)
instr_addi < orig(cpu_state)
instr_addi < orig(dbg_ascii_state)
decoded_rd >= decoded_rs1
decoded_rd < decoded_imm_j
decoded_rd < new_ascii_instr
decoded_rd != cpu_state
decoded_rd < dbg_ascii_state
decoded_rd > alu_eq
decoded_rd > alu_ltu
decoded_rd != cpuregs_rs2
decoded_rd < orig(count_cycle)
decoded_rd != orig(cpu_state)
decoded_rd < orig(dbg_ascii_state)
decoded_rs1 < decoded_imm_j
decoded_rs1 < new_ascii_instr
decoded_rs1 <= cpu_state
decoded_rs1 < dbg_ascii_state
alu_shl % decoded_rs1 == 0
decoded_rs1 > alu_eq
decoded_rs1 > alu_ltu
decoded_rs1 != cpuregs_rs2
decoded_rs1 < orig(count_cycle)
orig(count_cycle) % decoded_rs1 == 0
decoded_rs1 <= orig(cpu_state)
decoded_rs1 < orig(dbg_ascii_state)
decoded_imm_j != new_ascii_instr
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j > alu_out
decoded_imm_j > alu_shl
decoded_imm_j > alu_shr
decoded_imm_j > alu_eq
decoded_imm_j > alu_ltu
decoded_imm_j > cpuregs_rs2
decoded_imm_j > orig(count_cycle)
decoded_imm_j > orig(cpu_state)
decoded_imm_j < orig(dbg_ascii_state)
new_ascii_instr > cpu_state
new_ascii_instr < dbg_ascii_state
new_ascii_instr > alu_out
new_ascii_instr > alu_shl
new_ascii_instr > alu_shr
new_ascii_instr > alu_eq
new_ascii_instr > alu_ltu
new_ascii_instr > cpuregs_rs2
new_ascii_instr > orig(count_cycle)
new_ascii_instr > orig(cpu_state)
new_ascii_instr < orig(dbg_ascii_state)
cpu_state < dbg_ascii_state
cpu_state > alu_out
cpu_state != alu_shl
cpu_state > alu_shr
cpu_state > alu_eq
cpu_state > alu_ltu
cpu_state != cpuregs_rs2
cpu_state != orig(count_cycle)
cpu_state >= orig(cpu_state)
cpu_state < orig(dbg_ascii_state)
dbg_ascii_state > alu_out
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
dbg_ascii_state > alu_eq
dbg_ascii_state > alu_ltu
dbg_ascii_state > cpuregs_rs2
dbg_ascii_state > orig(count_cycle)
dbg_ascii_state > orig(cpu_state)
dbg_ascii_state >= orig(dbg_ascii_state)
alu_out <= alu_shl
alu_out >= alu_shr
alu_out >= alu_eq
alu_ltu % alu_out == 0
alu_out >= alu_ltu
alu_out < cpuregs_rs2
alu_out < orig(count_cycle)
alu_out != orig(cpu_state)
alu_out < orig(dbg_ascii_state)
alu_shl >= alu_shr
alu_shl >= alu_eq
alu_ltu % alu_shl == 0
alu_shl >= alu_ltu
alu_shl < cpuregs_rs2
alu_shl < orig(count_cycle)
alu_shl < orig(dbg_ascii_state)
alu_shr >= alu_ltu
alu_shr < cpuregs_rs2
alu_shr < orig(count_cycle)
alu_shr < orig(dbg_ascii_state)
alu_eq >= alu_ltu
alu_eq < cpuregs_rs2
alu_eq < orig(count_cycle)
alu_eq < orig(cpu_state)
alu_eq < orig(dbg_ascii_state)
alu_ltu < cpuregs_rs2
alu_ltu < orig(count_cycle)
alu_ltu < orig(cpu_state)
alu_ltu < orig(dbg_ascii_state)
cpuregs_rs2 != orig(count_cycle)
cpuregs_rs2 != orig(cpu_state)
cpuregs_rs2 < orig(dbg_ascii_state)
7 * mem_addr + 88 * mem_wdata - 4 * count_cycle - 12 == 0
mem_addr + 16 * mem_wdata - 4 * count_instr == 0
7 * mem_addr + 88 * mem_wdata - 4 * orig(count_cycle) - 16 == 0
3 * mem_addr - 8 * count_cycle + 44 * count_instr - 24 == 0
3 * mem_addr + 44 * count_instr - 8 * orig(count_cycle) - 32 == 0
511 * mem_addr + 2 * reg_op1 - 2 * alu_out - 8174 == 0
2041 * mem_addr + 8 * reg_op1 - 4 * alu_shl - 32656 == 0
3 * mem_addr - 8 * alu_out + 4 * alu_shl - 40 == 0
44 * mem_wdata + 7 * mem_la_wdata - 2 * count_cycle + 43 == 0
8 * mem_wdata + mem_la_wdata - 2 * count_instr + 7 == 0
44 * mem_wdata + 7 * mem_la_wdata - 2 * orig(count_cycle) + 41 == 0
6 * mem_wdata + count_cycle - 7 * count_instr + 3 == 0
88 * mem_wdata - 4 * count_cycle + 7 * reg_pc + 16 == 0
44 * mem_wdata - 2 * count_cycle + reg_out + 37 == 0
23609696 * mem_wdata - 1073168 * count_cycle + 7 * dbg_insn_opcode + 19028491 == 0
22522720 * mem_wdata - 1023760 * count_cycle + 7 * mem_rdata_word + 10626971 == 0
22 * mem_wdata - count_cycle - 7 * instr_lw + 25 == 0
22 * mem_wdata - count_cycle + 7 * instr_addi + 18 == 0
22 * mem_wdata - count_cycle + 7 * decoded_rs1 + 11 == 0
585728 * mem_wdata - 26624 * count_cycle + 7 * decoded_imm_j + 192512 == 0
3.594671278E10 * mem_wdata - 1633941490 * count_cycle + 7 * new_ascii_instr + 2.9410752451E10 == 0
198 * mem_wdata - 9 * count_cycle + cpu_state + 161 == 0
5.6655650315E11 * mem_wdata - 2.5752568325E10 * count_cycle - 7 * dbg_ascii_state + 3.722335742549E12 == 0
22 * mem_wdata - count_cycle + 7 * alu_ltu + 25 == 0
22440 * mem_wdata - 1020 * count_cycle + 7 * cpuregs_rs2 + 18360 == 0
22 * mem_wdata - count_cycle + orig(cpu_state) + 17 == 0
1.0204457337052E13 * mem_wdata - 4.63838969866E11 * count_cycle - 7 * orig(dbg_ascii_state) + 1.1607890970287E13 == 0
16 * mem_wdata - 4 * count_instr + reg_pc + 4 == 0
56 * mem_wdata - 14 * count_instr + reg_out + 43 == 0
4292672 * mem_wdata - 1073168 * count_instr + dbg_insn_opcode + 3178285 == 0
4095040 * mem_wdata - 1023760 * count_instr + mem_rdata_word + 1956893 == 0
4 * mem_wdata - count_instr - instr_lw + 4 == 0
4 * mem_wdata - count_instr + instr_addi + 3 == 0
4 * mem_wdata - count_instr + decoded_rs1 + 2 == 0
106496 * mem_wdata - 26624 * count_instr + decoded_imm_j + 38912 == 0
6.53576596E9 * mem_wdata - 1633941490 * count_instr + new_ascii_instr + 4.901796703E9 == 0
252 * mem_wdata - 63 * count_instr + cpu_state + 188 == 0
1.030102733E11 * mem_wdata - 2.5752568325E10 * count_instr - dbg_ascii_state + 5.42799063932E11 == 0
4 * mem_wdata - count_instr + alu_ltu + 4 == 0
4080 * mem_wdata - 1020 * count_instr + cpuregs_rs2 + 3060 == 0
6 * mem_wdata - 7 * count_instr + orig(count_cycle) + 4 == 0
28 * mem_wdata - 7 * count_instr + orig(cpu_state) + 20 == 0
1.855355879464E12 * mem_wdata - 4.63838969866E11 * count_instr - orig(dbg_ascii_state) + 1.857058268555E12 == 0
88 * mem_wdata + 7 * reg_pc - 4 * orig(count_cycle) + 12 == 0
44 * mem_wdata + reg_out - 2 * orig(count_cycle) + 35 == 0
23609696 * mem_wdata + 7 * dbg_insn_opcode - 1073168 * orig(count_cycle) + 17955323 == 0
22522720 * mem_wdata + 7 * mem_rdata_word - 1023760 * orig(count_cycle) + 9603211 == 0
22 * mem_wdata - 7 * instr_lw - orig(count_cycle) + 24 == 0
22 * mem_wdata + 7 * instr_addi - orig(count_cycle) + 17 == 0
22 * mem_wdata + 7 * decoded_rs1 - orig(count_cycle) + 10 == 0
585728 * mem_wdata + 7 * decoded_imm_j - 26624 * orig(count_cycle) + 165888 == 0
3.594671278E10 * mem_wdata + 7 * new_ascii_instr - 1633941490 * orig(count_cycle) + 2.7776810961E10 == 0
198 * mem_wdata + cpu_state - 9 * orig(count_cycle) + 152 == 0
5.6655650315E11 * mem_wdata - 7 * dbg_ascii_state - 2.5752568325E10 * orig(count_cycle) + 3.696583174224E12 == 0
22 * mem_wdata + 7 * alu_ltu - orig(count_cycle) + 24 == 0
22440 * mem_wdata + 7 * cpuregs_rs2 - 1020 * orig(count_cycle) + 17340 == 0
22 * mem_wdata - orig(count_cycle) + orig(cpu_state) + 16 == 0
1.0204457337052E13 * mem_wdata - 4.63838969866E11 * orig(count_cycle) - 7 * orig(dbg_ascii_state) + 1.1144052000421E13 == 0
3 * mem_la_wdata - 4 * count_cycle + 22 * count_instr + 9 == 0
3 * mem_la_wdata + 22 * count_instr - 4 * orig(count_cycle) + 5 == 0
511 * mem_la_wdata + reg_op1 - alu_out - 510 == 0
2041 * mem_la_wdata + 4 * reg_op1 - 2 * alu_shl - 2041 == 0
3 * mem_la_wdata - 4 * alu_out + 2 * alu_shl + 1 == 0
8 * count_cycle - 44 * count_instr - 3 * reg_pc + 12 == 0
28 * count_cycle - 154 * count_instr - 3 * reg_out - 45 == 0
2146336 * count_cycle - 11804848 * count_instr - 3 * dbg_insn_opcode - 3095847 == 0
2047520 * count_cycle - 11261360 * count_instr - 3 * mem_rdata_word + 271881 == 0
2 * count_cycle - 11 * count_instr + 3 * instr_lw - 6 == 0
2 * count_cycle - 11 * count_instr - 3 * instr_addi - 3 == 0
2 * count_cycle - 11 * count_instr - 3 * decoded_rs1 == 0
53248 * count_cycle - 292864 * count_instr - 3 * decoded_imm_j + 43008 == 0
3.26788298E9 * count_cycle - 1.797335639E10 * count_instr - 3 * new_ascii_instr - 4.901741169E9 == 0
42 * count_cycle - 231 * count_instr - cpu_state - 62 == 0
5.150513665E10 * count_cycle - 2.83278251575E11 * count_instr + 3 * dbg_ascii_state - 1.473881781846E12 == 0
2 * count_cycle - 11 * count_instr - 3 * alu_ltu - 6 == 0
680 * count_cycle - 3740 * count_instr - cpuregs_rs2 - 1020 == 0
14 * count_cycle - 77 * count_instr - 3 * orig(cpu_state) - 18 == 0
9.27677939732E11 * count_cycle - 5.102228668526E12 * count_instr + 3 * orig(dbg_ascii_state) - 2.788140986469E12 == 0
44 * count_instr + 3 * reg_pc - 8 * orig(count_cycle) - 20 == 0
154 * count_instr + 3 * reg_out - 28 * orig(count_cycle) + 17 == 0
11804848 * count_instr + 3 * dbg_insn_opcode - 2146336 * orig(count_cycle) + 949511 == 0
11261360 * count_instr + 3 * mem_rdata_word - 2047520 * orig(count_cycle) - 2319401 == 0
11 * count_instr - 3 * instr_lw - 2 * orig(count_cycle) + 4 == 0
11 * count_instr + 3 * instr_addi - 2 * orig(count_cycle) + 1 == 0
11 * count_instr + 3 * decoded_rs1 - 2 * orig(count_cycle) - 2 == 0
292864 * count_instr + 3 * decoded_imm_j - 53248 * orig(count_cycle) - 96256 == 0
1.797335639E10 * count_instr + 3 * new_ascii_instr - 3.26788298E9 * orig(count_cycle) + 1633858189 == 0
231 * count_instr + cpu_state - 42 * orig(count_cycle) + 20 == 0
2.83278251575E11 * count_instr - 3 * dbg_ascii_state - 5.150513665E10 * orig(count_cycle) + 1.422376645196E12 == 0
11 * count_instr + 3 * alu_ltu - 2 * orig(count_cycle) + 4 == 0
3740 * count_instr + cpuregs_rs2 - 680 * orig(count_cycle) + 340 == 0
77 * count_instr - 14 * orig(count_cycle) + 3 * orig(cpu_state) + 4 == 0
5.102228668526E12 * count_instr - 9.27677939732E11 * orig(count_cycle) - 3 * orig(dbg_ascii_state) + 1.860463046737E12 == 0
511 * reg_pc + 2 * reg_op1 - 2 * alu_out - 6130 == 0
2041 * reg_pc + 8 * reg_op1 - 4 * alu_shl - 24492 == 0
3 * reg_pc - 8 * alu_out + 4 * alu_shl - 28 == 0
reg_op1 + 73 * reg_out - alu_out - 948 == 0
28 * reg_op1 + 2041 * reg_out - 14 * alu_shl - 26533 == 0
536584 * reg_op1 + 511 * dbg_insn_opcode - 536584 * alu_out - 568915173 == 0
2146336 * reg_op1 + 2041 * dbg_insn_opcode - 1073168 * alu_shl - 2.274463867E9 == 0
511880 * reg_op1 + 511 * mem_rdata_word - 511880 * alu_out - 1092081237 == 0
2047520 * reg_op1 + 2041 * mem_rdata_word - 1023760 * alu_shl - 4.363958027E9 == 0
reg_op1 - 1022 * instr_lw - alu_out + 1 == 0
2 * reg_op1 - 2041 * instr_lw - alu_shl == 0
reg_op1 + 1022 * instr_addi - alu_out - 1021 == 0
2 * reg_op1 + 2041 * instr_addi - alu_shl - 2041 == 0
reg_op1 + 1022 * decoded_rs1 - alu_out - 2043 == 0
2 * reg_op1 + 2041 * decoded_rs1 - alu_shl - 4082 == 0
13312 * reg_op1 + 511 * decoded_imm_j - 13312 * alu_out - 34522112 == 0
4096 * reg_op1 + 157 * decoded_imm_j - 2048 * alu_shl - 10610688 == 0
816970745 * reg_op1 + 511 * new_ascii_instr - 816970745 * alu_out - 8.34141319582E11 == 0
3.26788298E9 * reg_op1 + 2041 * new_ascii_instr - 1633941490 * alu_shl - 3.334931253537E12 == 0
9 * reg_op1 + 146 * cpu_state - 9 * alu_out - 9335 == 0
126 * reg_op1 + 2041 * cpu_state - 63 * alu_shl - 130624 == 0
2.5752568325E10 * reg_op1 - 1022 * dbg_ascii_state - 2.5752568325E10 * alu_out + 4.49489896594229E14 == 0
5.150513665E10 * reg_op1 - 2041 * dbg_ascii_state - 2.5752568325E10 * alu_shl + 8.97608921679912E14 == 0
3 * reg_op1 + 2041 * alu_out - 1022 * alu_shl - 2041 == 0
reg_op1 - alu_out + 1022 * alu_ltu + 1 == 0
510 * reg_op1 - 510 * alu_out + 511 * cpuregs_rs2 - 520710 == 0
reg_op1 - alu_out + 146 * orig(cpu_state) - 1167 == 0
2.31919484933E11 * reg_op1 - 2.31919484933E11 * alu_out - 511 * orig(dbg_ascii_state) + 1.101840310434E12 == 0
2 * reg_op1 - alu_shl + 2041 * alu_ltu == 0
2040 * reg_op1 - 1020 * alu_shl + 2041 * cpuregs_rs2 - 2081820 == 0
14 * reg_op1 - 7 * alu_shl + 2041 * orig(cpu_state) - 16328 == 0
9.27677939732E11 * reg_op1 - 4.63838969866E11 * alu_shl - 2041 * orig(dbg_ascii_state) + 3.474576134731E12 == 0
3 * reg_out - 28 * alu_out + 14 * alu_shl - 11 == 0
3 * dbg_insn_opcode - 2146336 * alu_out + 1073168 * alu_shl - 1196825 == 0
3 * mem_rdata_word - 2047520 * alu_out + 1023760 * alu_shl - 4366921 == 0
3 * instr_lw + 2 * alu_out - alu_shl - 2 == 0
3 * instr_addi - 2 * alu_out + alu_shl - 1 == 0
3 * decoded_rs1 - 2 * alu_out + alu_shl - 4 == 0
3 * decoded_imm_j - 53248 * alu_out + 26624 * alu_shl - 149504 == 0
3 * new_ascii_instr - 3.26788298E9 * alu_out + 1633941490 * alu_shl - 1634024791 == 0
cpu_state - 42 * alu_out + 21 * alu_shl - 22 == 0
3 * dbg_ascii_state + 5.150513665E10 * alu_out - 2.5752568325E10 * alu_shl - 1.370871508546E12 == 0
2 * alu_out - alu_shl - 3 * alu_ltu - 2 == 0
680 * alu_out - 340 * alu_shl - cpuregs_rs2 + 340 == 0
14 * alu_out - 7 * alu_shl - 3 * orig(cpu_state) + 10 == 0
9.27677939732E11 * alu_out - 4.63838969866E11 * alu_shl + 3 * orig(dbg_ascii_state) - 9.32785107005E11 == 0
Exiting Daikon.
