Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files .(read 1 decls file)
Processing trace data; reading 134 dtrace files:

===========================================================================
..tick():::ENTER
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_wordsize
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lw
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_sw
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoder_trigger_q
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_slli_srli_srai
trap == is_sll_srl_sra
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_lbu_lhu_lw
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_next
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == alu_eq
trap == clear_prefetched_high_word_q
mem_valid == mem_state
mem_valid == mem_do_rinst
mem_valid == last_mem_valid
mem_la_wdata == reg_op2
pcpi_insn == trace_data
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == decoded_rs
reg_out == cpuregs_wrdata
next_insn_opcode == mem_rdata_q
dbg_insn_opcode == q_insn_opcode
mem_do_prefetch == is_alu_reg_imm
mem_do_prefetch == latched_store
mem_do_prefetch == latched_stalu
mem_do_prefetch == cpuregs_write
instr_addi == is_jalr_addi_slti_sltiu_xori_ori_andi
instr_addi == dbg_insn_rd
instr_addi == q_insn_rd
instr_addi == cached_insn_rd
instr_addi == latched_rd
instr_addi == alu_ltu
instr_addi == alu_lts
decoded_imm == cached_insn_imm
decoder_pseudo_trigger == dbg_rs2val_valid
is_lui_auipc_jal_jalr_addi_add_sub == dbg_valid_insn
dbg_ascii_instr == q_ascii_instr
dbg_insn_imm == q_insn_imm
dbg_insn_rs1 == q_insn_rs1
dbg_insn_rs2 == q_insn_rs2
alu_out == alu_out_q
alu_out == alu_add_sub
trap == 0
mem_valid one of { 0, 1 }
mem_instr one of { 0, 1 }
mem_addr one of { 4, 8, 1020 }
mem_wstrb one of { 0, 15 }
mem_la_wdata >= 1
mem_la_wstrb == 15
pcpi_insn == -1
reg_next_pc one of { 4, 8, 20 }
reg_op1 one of { 0, 1020 }
reg_out one of { -1, 1020 }
dbg_insn_opcode one of { 2138147, 1069547667, 4284477551L }
dbg_insn_addr one of { 0, 16, 20 }
irq_mask == 4294967295L
mem_do_prefetch one of { 0, 1 }
instr_jal one of { 0, 1 }
instr_addi one of { 0, 1 }
decoded_rd one of { 0, 1, 2 }
decoded_rs1 one of { 0, 1, 31 }
decoded_rs2 one of { 0, 21, 28 }
decoded_imm one of { 1020, 4294967284L }
decoded_imm_j one of { 1020, 40960, 4294967284L }
decoder_trigger one of { 0, 1 }
decoder_pseudo_trigger one of { 0, 1 }
is_lui_auipc_jal one of { 0, 1 }
is_lb_lh_lw_lbu_lhu one of { 0, 1 }
is_sb_sh_sw one of { 0, 1 }
is_lui_auipc_jal_jalr_addi_add_sub == 1
new_ascii_instr one of { 0, 6971756, 1633969257 }
dbg_ascii_instr one of { 29559, 6971756, 1633969257 }
dbg_insn_imm one of { 0, 1020, 4294967284L }
dbg_insn_rs1 one of { 0, 1, 31 }
dbg_insn_rs2 one of { 2, 21, 28 }
dbg_rs1val one of { -1, 0, 1020 }
dbg_rs2val >= -1
dbg_rs1val_valid one of { 0, 1 }
cached_ascii_instr one of { 6971756, 1633969257 }
cached_insn_rs1 one of { 0, 31 }
cached_insn_rs2 one of { 21, 28 }
cpu_state == 64
dbg_ascii_state == 439788790632L
alu_shl >= 0
alu_shr >= 0
cpuregs_rs1 one of { -1, 0, 1020 }
cpuregs_rs2 one of { -1, 0 }
trap <= mem_valid
trap <= mem_instr
trap < mem_addr
trap != mem_wdata
trap <= mem_wstrb
trap < mem_la_wdata
trap < count_cycle
trap < count_instr
trap <= reg_pc
trap < reg_next_pc
trap <= reg_op1
trap != reg_out
trap <= next_insn_opcode
trap < dbg_insn_opcode
trap <= dbg_insn_addr
trap <= mem_rdata_word
trap <= mem_do_prefetch
trap <= instr_jal
trap <= instr_addi
trap <= decoded_rd
trap <= decoded_rs1
trap <= decoded_rs2
trap < decoded_imm
trap < decoded_imm_j
trap <= decoder_trigger
trap <= decoder_pseudo_trigger
trap <= is_lui_auipc_jal
trap <= is_lb_lh_lw_lbu_lhu
trap <= is_sb_sh_sw
trap <= new_ascii_instr
trap < dbg_ascii_instr
trap <= dbg_insn_imm
trap <= dbg_insn_rs1
trap < dbg_insn_rs2
trap != dbg_rs2val
trap <= dbg_rs1val_valid
trap < cached_ascii_instr
trap <= cached_insn_opcode
trap <= cached_insn_rs1
trap < cached_insn_rs2
trap < alu_out
trap <= alu_shl
trap <= alu_shr
trap >= cpuregs_rs2
mem_valid <= mem_instr
mem_valid < mem_addr
mem_valid <= mem_la_wdata
mem_valid < mem_la_wstrb
mem_valid > pcpi_insn
mem_valid < count_cycle
mem_valid <= count_instr
mem_valid != reg_pc
mem_valid < reg_next_pc
mem_valid != reg_out
mem_valid < dbg_insn_opcode
mem_valid < irq_mask
mem_valid <= mem_rdata_word
mem_valid >= mem_do_prefetch
mem_valid != decoded_rs1
mem_valid <= decoded_rs2
mem_valid < decoded_imm
mem_valid < decoded_imm_j
mem_valid != decoder_trigger
mem_valid <= is_lui_auipc_jal_jalr_addi_add_sub
mem_valid <= new_ascii_instr
mem_valid < dbg_ascii_instr
mem_valid <= dbg_insn_imm
mem_valid < dbg_insn_rs2
mem_valid != dbg_rs2val
mem_valid % dbg_rs2val == 0
mem_valid < cached_ascii_instr
mem_valid < cached_insn_rs2
mem_valid < cpu_state
mem_valid < dbg_ascii_state
mem_valid < alu_out
mem_valid != cpuregs_rs1
mem_valid >= cpuregs_rs2
mem_instr < mem_addr
mem_instr != mem_wstrb
mem_instr <= mem_la_wdata
mem_instr < mem_la_wstrb
mem_instr > pcpi_insn
mem_instr < count_cycle
mem_instr <= count_instr
mem_instr != reg_pc
mem_instr < reg_next_pc
mem_instr != reg_op1
mem_instr != reg_out
mem_instr < dbg_insn_opcode
mem_instr != dbg_insn_addr
mem_instr < irq_mask
mem_instr <= mem_rdata_word
mem_instr >= mem_do_prefetch
mem_instr >= instr_addi
mem_instr != decoded_rs2
mem_instr < decoded_imm
mem_instr < decoded_imm_j
mem_instr != decoder_pseudo_trigger
mem_instr >= is_lb_lh_lw_lbu_lhu
mem_instr >= is_sb_sh_sw
mem_instr <= is_lui_auipc_jal_jalr_addi_add_sub
mem_instr != new_ascii_instr
mem_instr < dbg_ascii_instr
mem_instr <= dbg_insn_imm
mem_instr != dbg_insn_rs1
mem_instr < dbg_insn_rs2
mem_instr != dbg_rs1val
mem_instr != dbg_rs2val
mem_instr % dbg_rs2val == 0
mem_instr < cached_ascii_instr
mem_instr != cached_insn_rs1
mem_instr < cached_insn_rs2
mem_instr < cpu_state
mem_instr < dbg_ascii_state
mem_instr < alu_out
mem_instr != cpuregs_rs1
mem_instr > cpuregs_rs2
mem_addr > mem_wstrb
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr != count_cycle
mem_addr != count_instr
mem_addr >= reg_pc
mem_addr % reg_next_pc == 0
mem_addr >= reg_next_pc
mem_addr != reg_out
mem_addr < dbg_insn_opcode
mem_addr != dbg_insn_addr
mem_addr < irq_mask
mem_addr != mem_rdata_word
mem_addr > mem_do_prefetch
mem_addr > instr_jal
mem_addr > instr_addi
mem_addr > decoded_rd
mem_addr != decoded_rs1
mem_addr != decoded_rs2
mem_addr < decoded_imm
mem_addr < decoded_imm_j
mem_addr > decoder_trigger
mem_addr > decoder_pseudo_trigger
mem_addr > is_lui_auipc_jal
mem_addr > is_lb_lh_lw_lbu_lhu
mem_addr > is_sb_sh_sw
mem_addr > is_lui_auipc_jal_jalr_addi_add_sub
mem_addr != new_ascii_instr
mem_addr < dbg_ascii_instr
mem_addr != dbg_insn_imm
mem_addr != dbg_insn_rs1
mem_addr != dbg_insn_rs2
mem_addr >= dbg_rs1val
mem_addr > dbg_rs2val
mem_addr > dbg_rs1val_valid
mem_addr < cached_ascii_instr
mem_addr != cached_insn_rs1
mem_addr != cached_insn_rs2
mem_addr != cpu_state
mem_addr < dbg_ascii_state
mem_addr < alu_out
mem_addr != cpuregs_rs1
mem_addr > cpuregs_rs2
mem_la_wdata % mem_wdata == 0
mem_wdata <= mem_la_wdata
mem_wdata >= pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata < reg_op1
mem_wdata != next_insn_opcode
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata != mem_rdata_word
mem_do_prefetch % mem_wdata == 0
mem_wdata != mem_do_prefetch
instr_addi % mem_wdata == 0
mem_wdata != instr_addi
mem_wdata < decoded_imm
mem_wdata < decoded_imm_j
is_sb_sh_sw % mem_wdata == 0
mem_wdata != is_sb_sh_sw
mem_wdata != new_ascii_instr
mem_wdata < dbg_ascii_instr
mem_wdata != dbg_insn_imm
mem_wdata != dbg_rs1val
mem_wdata % dbg_rs2val == 0
mem_wdata >= dbg_rs2val
mem_wdata < cached_ascii_instr
mem_wdata != cached_insn_opcode
mem_wdata < cpu_state
mem_wdata < dbg_ascii_state
mem_wdata < alu_out
mem_wdata != alu_shl
mem_wdata != cpuregs_rs1
mem_wstrb <= mem_la_wstrb
mem_wstrb > pcpi_insn
mem_wstrb < count_cycle
mem_wstrb != count_instr
mem_wstrb <= reg_pc
mem_wstrb < reg_next_pc
mem_wstrb <= reg_op1
mem_wstrb != reg_out
mem_wstrb < dbg_insn_opcode
mem_wstrb <= dbg_insn_addr
mem_wstrb < irq_mask
mem_wstrb <= decoded_rs1
mem_wstrb <= decoded_rs2
mem_wstrb < decoded_imm
mem_wstrb < decoded_imm_j
mem_wstrb >= decoder_pseudo_trigger
mem_wstrb != is_lui_auipc_jal_jalr_addi_add_sub
mem_wstrb <= new_ascii_instr
mem_wstrb < dbg_ascii_instr
mem_wstrb != dbg_insn_imm
mem_wstrb != dbg_insn_rs2
mem_wstrb < cached_ascii_instr
mem_wstrb <= cached_insn_opcode
mem_wstrb <= cached_insn_rs1
mem_wstrb < cached_insn_rs2
mem_wstrb < cpu_state
mem_wstrb < dbg_ascii_state
mem_wstrb < alu_out
mem_wstrb >= cpuregs_rs2
mem_la_wdata > pcpi_insn
mem_la_wdata != count_cycle
mem_la_wdata != count_instr
mem_la_wdata != reg_op1
mem_la_wdata % reg_out == 0
mem_la_wdata >= reg_out
mem_la_wdata != next_insn_opcode
mem_la_wdata < dbg_insn_opcode
mem_la_wdata < irq_mask
mem_la_wdata != mem_rdata_word
mem_la_wdata > mem_do_prefetch
mem_la_wdata >= instr_jal
mem_la_wdata > instr_addi
mem_la_wdata <= decoded_imm
mem_la_wdata <= decoded_imm_j
mem_la_wdata >= decoder_trigger
mem_la_wdata >= decoder_pseudo_trigger
mem_la_wdata >= is_lui_auipc_jal
mem_la_wdata >= is_lb_lh_lw_lbu_lhu
mem_la_wdata > is_sb_sh_sw
mem_la_wdata >= is_lui_auipc_jal_jalr_addi_add_sub
mem_la_wdata != new_ascii_instr
mem_la_wdata < dbg_ascii_instr
mem_la_wdata != dbg_rs1val
mem_la_wdata % dbg_rs2val == 0
mem_la_wdata >= dbg_rs2val
mem_la_wdata >= dbg_rs1val_valid
mem_la_wdata < cached_ascii_instr
mem_la_wdata != cached_insn_opcode
mem_la_wdata != cpu_state
mem_la_wdata < dbg_ascii_state
mem_la_wdata <= alu_out
mem_la_wdata != alu_shl
mem_la_wdata > cpuregs_rs2
mem_la_wstrb != count_cycle
mem_la_wstrb != count_instr
mem_la_wstrb != reg_pc
mem_la_wstrb != reg_next_pc
mem_la_wstrb != reg_op1
mem_la_wstrb != reg_out
mem_la_wstrb < dbg_insn_opcode
mem_la_wstrb != dbg_insn_addr
mem_la_wstrb > mem_do_prefetch
mem_la_wstrb > instr_jal
mem_la_wstrb > instr_addi
mem_la_wstrb > decoded_rd
mem_la_wstrb != decoded_rs1
mem_la_wstrb != decoded_rs2
mem_la_wstrb < decoded_imm
mem_la_wstrb < decoded_imm_j
mem_la_wstrb > decoder_trigger
mem_la_wstrb > decoder_pseudo_trigger
mem_la_wstrb > is_lui_auipc_jal
mem_la_wstrb > is_lb_lh_lw_lbu_lhu
mem_la_wstrb > is_sb_sh_sw
mem_la_wstrb != new_ascii_instr
mem_la_wstrb < dbg_ascii_instr
mem_la_wstrb != dbg_insn_imm
mem_la_wstrb != dbg_insn_rs1
mem_la_wstrb != dbg_insn_rs2
mem_la_wstrb != dbg_rs1val
mem_la_wstrb > dbg_rs1val_valid
mem_la_wstrb < cached_ascii_instr
mem_la_wstrb != cached_insn_rs1
mem_la_wstrb < cached_insn_rs2
mem_la_wstrb < alu_out
mem_la_wstrb != alu_shl
mem_la_wstrb != cpuregs_rs1
mem_la_wstrb > cpuregs_rs2
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < reg_next_pc
pcpi_insn < reg_op1
pcpi_insn <= reg_out
pcpi_insn < next_insn_opcode
pcpi_insn < dbg_insn_opcode
pcpi_insn < dbg_insn_addr
pcpi_insn < mem_rdata_word
pcpi_insn < mem_do_prefetch
pcpi_insn < instr_jal
pcpi_insn < instr_addi
pcpi_insn < decoded_rd
pcpi_insn < decoded_rs1
pcpi_insn < decoded_rs2
pcpi_insn < decoded_imm
pcpi_insn < decoded_imm_j
pcpi_insn < decoder_trigger
pcpi_insn < decoder_pseudo_trigger
pcpi_insn < is_lui_auipc_jal
pcpi_insn < is_lb_lh_lw_lbu_lhu
pcpi_insn < is_sb_sh_sw
pcpi_insn < new_ascii_instr
pcpi_insn < dbg_ascii_instr
pcpi_insn < dbg_insn_imm
pcpi_insn < dbg_insn_rs1
pcpi_insn < dbg_insn_rs2
pcpi_insn <= dbg_rs1val
pcpi_insn <= dbg_rs2val
pcpi_insn < dbg_rs1val_valid
pcpi_insn < cached_ascii_instr
pcpi_insn < cached_insn_opcode
pcpi_insn < cached_insn_rs1
pcpi_insn < cached_insn_rs2
pcpi_insn < alu_out
pcpi_insn < alu_shl
pcpi_insn < alu_shr
pcpi_insn <= cpuregs_rs1
pcpi_insn <= cpuregs_rs2
count_cycle > count_instr
count_cycle > reg_pc
count_cycle > reg_next_pc
count_cycle != reg_op1
count_cycle != reg_out
count_cycle != next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle > dbg_insn_addr
count_cycle < irq_mask
count_cycle != mem_rdata_word
count_cycle > mem_do_prefetch
count_cycle > instr_jal
count_cycle > instr_addi
count_cycle > decoded_rd
count_cycle > decoded_rs1
count_cycle != decoded_rs2
count_cycle < decoded_imm
count_cycle < decoded_imm_j
count_cycle > decoder_trigger
count_cycle > decoder_pseudo_trigger
count_cycle > is_lui_auipc_jal
count_cycle > is_lb_lh_lw_lbu_lhu
count_cycle > is_sb_sh_sw
count_cycle > is_lui_auipc_jal_jalr_addi_add_sub
count_cycle != new_ascii_instr
count_cycle < dbg_ascii_instr
count_cycle != dbg_insn_imm
count_cycle > dbg_insn_rs1
count_cycle != dbg_insn_rs2
count_cycle != dbg_rs1val
count_cycle > dbg_rs2val
count_cycle > dbg_rs1val_valid
count_cycle < cached_ascii_instr
count_cycle != cached_insn_opcode
count_cycle > cached_insn_rs1
count_cycle != cached_insn_rs2
count_cycle != cpu_state
count_cycle < dbg_ascii_state
count_cycle < alu_out
count_cycle != alu_shl
count_cycle != alu_shr
count_cycle != cpuregs_rs1
count_cycle > cpuregs_rs2
count_instr != reg_pc
count_instr != reg_next_pc
count_instr != reg_op1
count_instr != reg_out
count_instr != next_insn_opcode
count_instr < dbg_insn_opcode
count_instr != dbg_insn_addr
count_instr < irq_mask
count_instr != mem_rdata_word
count_instr >= mem_do_prefetch
mem_do_prefetch % count_instr == 0
count_instr > instr_jal
count_instr >= instr_addi
instr_addi % count_instr == 0
count_instr >= decoded_rd
count_instr < decoded_imm
count_instr < decoded_imm_j
count_instr >= decoder_trigger
count_instr > decoder_pseudo_trigger
count_instr > is_lui_auipc_jal
count_instr > is_lb_lh_lw_lbu_lhu
count_instr >= is_sb_sh_sw
is_sb_sh_sw % count_instr == 0
count_instr >= is_lui_auipc_jal_jalr_addi_add_sub
count_instr != new_ascii_instr
count_instr < dbg_ascii_instr
count_instr != dbg_insn_imm
count_instr != dbg_insn_rs1
count_instr != dbg_insn_rs2
count_instr != dbg_rs1val
count_instr > dbg_rs2val
count_instr >= dbg_rs1val_valid
count_instr < cached_ascii_instr
count_instr != cached_insn_opcode
count_instr != cached_insn_rs1
count_instr != cpu_state
count_instr < dbg_ascii_state
count_instr < alu_out
count_instr != alu_shl
count_instr != alu_shr
count_instr != cpuregs_rs1
count_instr > cpuregs_rs2
reg_pc <= reg_next_pc
reg_pc != reg_out
reg_pc % reg_out == 0
reg_pc < dbg_insn_opcode
reg_pc < irq_mask
reg_pc != mem_do_prefetch
reg_pc >= instr_jal
reg_pc != instr_addi
reg_pc != decoded_rd
reg_pc != decoded_rs2
reg_pc < decoded_imm
reg_pc < decoded_imm_j
reg_pc >= decoder_trigger
reg_pc >= decoder_pseudo_trigger
reg_pc >= is_lui_auipc_jal
reg_pc >= is_lb_lh_lw_lbu_lhu
reg_pc >= is_sb_sh_sw
reg_pc != is_lui_auipc_jal_jalr_addi_add_sub
reg_pc != new_ascii_instr
reg_pc < dbg_ascii_instr
reg_pc != dbg_insn_imm
reg_pc != dbg_insn_rs2
reg_pc != dbg_rs1val_valid
reg_pc < cached_ascii_instr
reg_pc < cached_insn_rs2
reg_pc < cpu_state
reg_pc < dbg_ascii_state
reg_pc < alu_out
reg_pc > cpuregs_rs2
reg_next_pc != reg_op1
reg_next_pc != reg_out
reg_next_pc < dbg_insn_opcode
reg_next_pc != dbg_insn_addr
reg_next_pc < irq_mask
reg_next_pc > mem_do_prefetch
reg_next_pc > instr_jal
reg_next_pc > instr_addi
reg_next_pc > decoded_rd
reg_next_pc != decoded_rs1
reg_next_pc != decoded_rs2
reg_next_pc < decoded_imm
reg_next_pc < decoded_imm_j
reg_next_pc > decoder_trigger
reg_next_pc > decoder_pseudo_trigger
reg_next_pc > is_lui_auipc_jal
reg_next_pc > is_lb_lh_lw_lbu_lhu
reg_next_pc > is_sb_sh_sw
reg_next_pc > is_lui_auipc_jal_jalr_addi_add_sub
reg_next_pc != new_ascii_instr
reg_next_pc < dbg_ascii_instr
reg_next_pc != dbg_insn_imm
reg_next_pc != dbg_insn_rs1
reg_next_pc != dbg_insn_rs2
reg_next_pc != dbg_rs1val
reg_next_pc > dbg_rs1val_valid
reg_next_pc < cached_ascii_instr
reg_next_pc != cached_insn_rs1
reg_next_pc < cached_insn_rs2
reg_next_pc < cpu_state
reg_next_pc < dbg_ascii_state
reg_next_pc < alu_out
reg_next_pc != alu_shl
reg_next_pc != alu_shr
reg_next_pc != cpuregs_rs1
reg_next_pc > cpuregs_rs2
reg_op1 != reg_out
reg_op1 != next_insn_opcode
reg_op1 < dbg_insn_opcode
reg_op1 >= dbg_insn_addr
reg_op1 < irq_mask
reg_op1 != mem_rdata_word
reg_op1 >= instr_jal
reg_op1 != instr_addi
reg_op1 < decoded_imm
reg_op1 < decoded_imm_j
reg_op1 >= decoder_pseudo_trigger
reg_op1 >= is_lui_auipc_jal
reg_op1 >= is_lb_lh_lw_lbu_lhu
reg_op1 != is_lui_auipc_jal_jalr_addi_add_sub
reg_op1 != new_ascii_instr
reg_op1 < dbg_ascii_instr
reg_op1 != dbg_insn_imm
reg_op1 >= dbg_insn_rs1
reg_op1 != dbg_insn_rs2
reg_op1 >= dbg_rs1val
reg_op1 > dbg_rs2val
reg_op1 != dbg_rs1val_valid
reg_op1 < cached_ascii_instr
reg_op1 != cached_insn_opcode
reg_op1 >= cached_insn_rs1
reg_op1 != cached_insn_rs2
reg_op1 != cpu_state
reg_op1 < dbg_ascii_state
reg_op1 < alu_out
reg_op1 >= alu_shr
reg_op1 >= cpuregs_rs2
reg_out < next_insn_opcode
reg_out < dbg_insn_opcode
dbg_insn_addr % reg_out == 0
reg_out != dbg_insn_addr
reg_out < irq_mask
reg_out < mem_rdata_word
reg_out != mem_do_prefetch
reg_out != instr_jal
reg_out != instr_addi
reg_out != decoded_rd
decoded_rs1 % reg_out == 0
reg_out != decoded_rs1
reg_out != decoded_rs2
reg_out <= decoded_imm
decoded_imm_j % reg_out == 0
reg_out <= decoded_imm_j
reg_out != decoder_trigger
reg_out != decoder_pseudo_trigger
reg_out != is_lui_auipc_jal
reg_out != is_lb_lh_lw_lbu_lhu
reg_out != is_sb_sh_sw
reg_out != is_lui_auipc_jal_jalr_addi_add_sub
reg_out < new_ascii_instr
reg_out < dbg_ascii_instr
dbg_insn_imm % reg_out == 0
reg_out <= dbg_insn_imm
dbg_insn_rs1 % reg_out == 0
reg_out != dbg_insn_rs1
reg_out != dbg_insn_rs2
dbg_rs1val % reg_out == 0
reg_out != dbg_rs1val_valid
reg_out < cached_ascii_instr
reg_out < cached_insn_opcode
reg_out != cached_insn_rs1
reg_out != cached_insn_rs2
reg_out != cpu_state
reg_out < dbg_ascii_state
alu_out % reg_out == 0
reg_out <= alu_out
alu_shl % reg_out == 0
reg_out != alu_shl
alu_shr % reg_out == 0
reg_out != alu_shr
cpuregs_rs1 % reg_out == 0
next_insn_opcode <= dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode >= mem_do_prefetch
next_insn_opcode >= instr_addi
next_insn_opcode >= decoded_rd
next_insn_opcode != decoded_imm
next_insn_opcode != decoded_imm_j
next_insn_opcode >= is_lb_lh_lw_lbu_lhu
next_insn_opcode >= is_sb_sh_sw
next_insn_opcode != new_ascii_instr
next_insn_opcode < dbg_ascii_instr
next_insn_opcode != dbg_rs1val
next_insn_opcode != dbg_rs2val
next_insn_opcode < cached_ascii_instr
next_insn_opcode != cpu_state
next_insn_opcode < dbg_ascii_state
next_insn_opcode != alu_out
next_insn_opcode != alu_shl
next_insn_opcode != alu_shr
next_insn_opcode > cpuregs_rs1
next_insn_opcode > cpuregs_rs2
dbg_insn_opcode > dbg_insn_addr
dbg_insn_opcode < irq_mask
dbg_insn_opcode > mem_rdata_word
dbg_insn_opcode > mem_do_prefetch
dbg_insn_opcode > instr_jal
dbg_insn_opcode > instr_addi
dbg_insn_opcode > decoded_rd
dbg_insn_opcode > decoded_rs1
dbg_insn_opcode > decoded_rs2
dbg_insn_opcode != decoded_imm
dbg_insn_opcode != decoded_imm_j
dbg_insn_opcode > decoder_trigger
dbg_insn_opcode > decoder_pseudo_trigger
dbg_insn_opcode > is_lui_auipc_jal
dbg_insn_opcode > is_lb_lh_lw_lbu_lhu
dbg_insn_opcode > is_sb_sh_sw
dbg_insn_opcode > is_lui_auipc_jal_jalr_addi_add_sub
dbg_insn_opcode != new_ascii_instr
dbg_insn_opcode != dbg_ascii_instr
dbg_insn_opcode != dbg_insn_imm
dbg_insn_opcode > dbg_insn_rs1
dbg_insn_opcode > dbg_insn_rs2
dbg_insn_opcode > dbg_rs1val
dbg_insn_opcode > dbg_rs2val
dbg_insn_opcode > dbg_rs1val_valid
dbg_insn_opcode != cached_ascii_instr
dbg_insn_opcode > cached_insn_rs1
dbg_insn_opcode > cached_insn_rs2
dbg_insn_opcode > cpu_state
dbg_insn_opcode < dbg_ascii_state
dbg_insn_opcode > alu_out
dbg_insn_opcode != alu_shl
dbg_insn_opcode > alu_shr
dbg_insn_opcode > cpuregs_rs1
dbg_insn_opcode > cpuregs_rs2
dbg_insn_addr < irq_mask
dbg_insn_addr >= instr_jal
dbg_insn_addr != instr_addi
dbg_insn_addr < decoded_imm
dbg_insn_addr < decoded_imm_j
dbg_insn_addr >= decoder_pseudo_trigger
dbg_insn_addr >= is_lui_auipc_jal
dbg_insn_addr >= is_lb_lh_lw_lbu_lhu
dbg_insn_addr != is_lui_auipc_jal_jalr_addi_add_sub
dbg_insn_addr != new_ascii_instr
dbg_insn_addr < dbg_ascii_instr
dbg_insn_addr != dbg_insn_imm
dbg_insn_addr != dbg_insn_rs2
dbg_insn_addr != dbg_rs1val_valid
dbg_insn_addr < cached_ascii_instr
dbg_insn_addr <= cached_insn_rs1
dbg_insn_addr < cached_insn_rs2
dbg_insn_addr < cpu_state
dbg_insn_addr < dbg_ascii_state
dbg_insn_addr < alu_out
dbg_insn_addr >= cpuregs_rs2
irq_mask > mem_rdata_word
irq_mask > mem_do_prefetch
irq_mask > instr_jal
irq_mask > instr_addi
irq_mask > decoded_rd
irq_mask > decoded_rs1
irq_mask > decoded_rs2
irq_mask > decoded_imm
irq_mask > decoded_imm_j
irq_mask > decoder_trigger
irq_mask > decoder_pseudo_trigger
irq_mask > is_lui_auipc_jal
irq_mask > is_lb_lh_lw_lbu_lhu
irq_mask > is_sb_sh_sw
irq_mask > new_ascii_instr
irq_mask > dbg_ascii_instr
irq_mask > dbg_insn_imm
irq_mask > dbg_insn_rs1
irq_mask > dbg_insn_rs2
irq_mask > dbg_rs1val
irq_mask > dbg_rs2val
irq_mask > dbg_rs1val_valid
irq_mask > cached_ascii_instr
irq_mask > cached_insn_opcode
irq_mask > cached_insn_rs1
irq_mask > cached_insn_rs2
irq_mask > alu_out
irq_mask > alu_shl
irq_mask > alu_shr
irq_mask > cpuregs_rs1
irq_mask > cpuregs_rs2
mem_rdata_word >= mem_do_prefetch
mem_rdata_word >= instr_addi
mem_rdata_word >= decoded_rd
mem_rdata_word != decoded_imm
mem_rdata_word != decoded_imm_j
mem_rdata_word >= is_lb_lh_lw_lbu_lhu
mem_rdata_word >= is_sb_sh_sw
mem_rdata_word != new_ascii_instr
mem_rdata_word < dbg_ascii_instr
mem_rdata_word != dbg_rs1val
mem_rdata_word != dbg_rs2val
mem_rdata_word < cached_ascii_instr
mem_rdata_word != cached_insn_opcode
mem_rdata_word != cpu_state
mem_rdata_word < dbg_ascii_state
mem_rdata_word != alu_out
mem_rdata_word != alu_shl
mem_rdata_word != alu_shr
mem_rdata_word > cpuregs_rs1
mem_rdata_word > cpuregs_rs2
mem_do_prefetch <= instr_addi
mem_do_prefetch <= decoded_rd
mem_do_prefetch != decoded_rs1
mem_do_prefetch <= decoded_rs2
mem_do_prefetch < decoded_imm
mem_do_prefetch < decoded_imm_j
mem_do_prefetch <= is_lui_auipc_jal_jalr_addi_add_sub
mem_do_prefetch <= new_ascii_instr
mem_do_prefetch < dbg_ascii_instr
mem_do_prefetch <= dbg_insn_imm
mem_do_prefetch < dbg_insn_rs2
mem_do_prefetch != dbg_rs2val
mem_do_prefetch % dbg_rs2val == 0
mem_do_prefetch <= dbg_rs1val_valid
mem_do_prefetch < cached_ascii_instr
mem_do_prefetch <= cached_insn_opcode
mem_do_prefetch < cached_insn_rs2
mem_do_prefetch < cpu_state
mem_do_prefetch < dbg_ascii_state
mem_do_prefetch < alu_out
mem_do_prefetch != cpuregs_rs1
mem_do_prefetch >= cpuregs_rs2
instr_jal <= decoded_rs1
instr_jal <= decoded_rs2
instr_jal < decoded_imm
instr_jal < decoded_imm_j
instr_jal >= decoder_pseudo_trigger
instr_jal <= is_lui_auipc_jal
instr_jal <= is_lui_auipc_jal_jalr_addi_add_sub
instr_jal <= new_ascii_instr
instr_jal < dbg_ascii_instr
instr_jal != dbg_insn_imm
instr_jal <= dbg_insn_rs1
instr_jal < dbg_insn_rs2
instr_jal < cached_ascii_instr
instr_jal <= cached_insn_rs1
instr_jal < cached_insn_rs2
instr_jal < cpu_state
instr_jal < dbg_ascii_state
instr_jal < alu_out
instr_jal >= cpuregs_rs2
instr_addi < decoded_imm
instr_addi < decoded_imm_j
instr_addi != is_lui_auipc_jal
instr_addi >= is_sb_sh_sw
instr_addi <= is_lui_auipc_jal_jalr_addi_add_sub
instr_addi <= new_ascii_instr
instr_addi < dbg_ascii_instr
instr_addi <= dbg_insn_imm
instr_addi != dbg_insn_rs1
instr_addi < dbg_insn_rs2
instr_addi != dbg_rs1val
instr_addi != dbg_rs2val
instr_addi % dbg_rs2val == 0
instr_addi <= dbg_rs1val_valid
instr_addi < cached_ascii_instr
instr_addi <= cached_insn_opcode
instr_addi != cached_insn_rs1
instr_addi < cached_insn_rs2
instr_addi < cpu_state
instr_addi < dbg_ascii_state
instr_addi < alu_out
instr_addi != cpuregs_rs1
instr_addi >= cpuregs_rs2
decoded_rd != decoded_rs1
decoded_rd < decoded_imm
decoded_rd < decoded_imm_j
decoded_rd >= is_lb_lh_lw_lbu_lhu
decoded_rd != new_ascii_instr
decoded_rd < dbg_ascii_instr
decoded_rd <= dbg_insn_imm
decoded_rd < dbg_insn_rs2
decoded_rd != dbg_rs2val
decoded_rd % dbg_rs2val == 0
decoded_rd < cached_ascii_instr
decoded_rd < cached_insn_rs2
decoded_rd < cpu_state
decoded_rd < dbg_ascii_state
decoded_rd < alu_out
decoded_rd != cpuregs_rs1
decoded_rd >= cpuregs_rs2
decoded_rs1 != decoded_rs2
decoded_rs1 < decoded_imm
decoded_rs1 < decoded_imm_j
decoded_rs1 >= decoder_trigger
decoded_rs1 >= decoder_pseudo_trigger
decoded_rs1 >= is_lui_auipc_jal
decoded_rs1 >= is_lb_lh_lw_lbu_lhu
decoded_rs1 >= is_sb_sh_sw
decoded_rs1 != new_ascii_instr
decoded_rs1 < dbg_ascii_instr
decoded_rs1 != dbg_insn_imm
decoded_rs1 != dbg_insn_rs2
decoded_rs1 < cached_ascii_instr
decoded_rs1 != cached_insn_rs2
decoded_rs1 < cpu_state
decoded_rs1 < dbg_ascii_state
decoded_rs1 < alu_out
decoded_rs1 > cpuregs_rs2
decoded_rs2 < decoded_imm
decoded_rs2 < decoded_imm_j
decoded_rs2 != decoder_trigger
decoded_rs2 >= decoder_pseudo_trigger
decoded_rs2 != is_lui_auipc_jal_jalr_addi_add_sub
decoded_rs2 <= new_ascii_instr
decoded_rs2 < dbg_ascii_instr
decoded_rs2 != dbg_insn_imm
decoded_rs2 < cached_ascii_instr
decoded_rs2 % cached_insn_rs2 == 0
decoded_rs2 <= cached_insn_rs2
decoded_rs2 < cpu_state
decoded_rs2 < dbg_ascii_state
decoded_rs2 < alu_out
decoded_rs2 != cpuregs_rs1
decoded_rs2 >= cpuregs_rs2
decoded_imm > decoder_trigger
decoded_imm > decoder_pseudo_trigger
decoded_imm > is_lui_auipc_jal
decoded_imm > is_lb_lh_lw_lbu_lhu
decoded_imm > is_sb_sh_sw
decoded_imm > is_lui_auipc_jal_jalr_addi_add_sub
decoded_imm != new_ascii_instr
decoded_imm != dbg_ascii_instr
dbg_insn_imm % decoded_imm == 0
decoded_imm >= dbg_insn_imm
decoded_imm > dbg_insn_rs1
decoded_imm > dbg_insn_rs2
decoded_imm > dbg_rs1val
decoded_imm > dbg_rs2val
decoded_imm > dbg_rs1val_valid
decoded_imm != cached_ascii_instr
decoded_imm != cached_insn_opcode
decoded_imm > cached_insn_rs1
decoded_imm > cached_insn_rs2
decoded_imm > cpu_state
decoded_imm < dbg_ascii_state
decoded_imm >= alu_out
decoded_imm > alu_shl
decoded_imm > alu_shr
decoded_imm >= cpuregs_rs1
decoded_imm > cpuregs_rs2
decoded_imm_j > decoder_trigger
decoded_imm_j > decoder_pseudo_trigger
decoded_imm_j > is_lui_auipc_jal
decoded_imm_j > is_lb_lh_lw_lbu_lhu
decoded_imm_j > is_sb_sh_sw
decoded_imm_j > is_lui_auipc_jal_jalr_addi_add_sub
decoded_imm_j != new_ascii_instr
decoded_imm_j != dbg_ascii_instr
decoded_imm_j > dbg_insn_rs1
decoded_imm_j > dbg_insn_rs2
decoded_imm_j > dbg_rs1val
decoded_imm_j > dbg_rs2val
decoded_imm_j > dbg_rs1val_valid
decoded_imm_j != cached_ascii_instr
decoded_imm_j != cached_insn_opcode
decoded_imm_j > cached_insn_rs1
decoded_imm_j > cached_insn_rs2
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j >= alu_out
decoded_imm_j != alu_shl
decoded_imm_j > alu_shr
decoded_imm_j > cpuregs_rs1
decoded_imm_j > cpuregs_rs2
decoder_trigger >= decoder_pseudo_trigger
decoder_trigger >= is_lb_lh_lw_lbu_lhu
decoder_trigger >= is_sb_sh_sw
decoder_trigger <= is_lui_auipc_jal_jalr_addi_add_sub
decoder_trigger != new_ascii_instr
decoder_trigger < dbg_ascii_instr
decoder_trigger != dbg_insn_imm
decoder_trigger < dbg_insn_rs2
decoder_trigger < cached_ascii_instr
decoder_trigger < cached_insn_rs2
decoder_trigger < cpu_state
decoder_trigger < dbg_ascii_state
decoder_trigger < alu_out
decoder_trigger > cpuregs_rs2
decoder_pseudo_trigger <= is_lui_auipc_jal
decoder_pseudo_trigger <= is_lui_auipc_jal_jalr_addi_add_sub
decoder_pseudo_trigger <= new_ascii_instr
decoder_pseudo_trigger < dbg_ascii_instr
decoder_pseudo_trigger != dbg_insn_imm
decoder_pseudo_trigger <= dbg_insn_rs1
decoder_pseudo_trigger < dbg_insn_rs2
decoder_pseudo_trigger <= dbg_rs1val_valid
decoder_pseudo_trigger < cached_ascii_instr
decoder_pseudo_trigger <= cached_insn_opcode
decoder_pseudo_trigger <= cached_insn_rs1
decoder_pseudo_trigger < cached_insn_rs2
decoder_pseudo_trigger < cpu_state
decoder_pseudo_trigger < dbg_ascii_state
decoder_pseudo_trigger < alu_out
decoder_pseudo_trigger >= cpuregs_rs2
is_lui_auipc_jal >= is_lb_lh_lw_lbu_lhu
is_lui_auipc_jal <= is_lui_auipc_jal_jalr_addi_add_sub
is_lui_auipc_jal != new_ascii_instr
is_lui_auipc_jal < dbg_ascii_instr
is_lui_auipc_jal != dbg_insn_imm
is_lui_auipc_jal <= dbg_insn_rs1
is_lui_auipc_jal < dbg_insn_rs2
is_lui_auipc_jal < cached_ascii_instr
is_lui_auipc_jal <= cached_insn_rs1
is_lui_auipc_jal < cached_insn_rs2
is_lui_auipc_jal < cpu_state
is_lui_auipc_jal < dbg_ascii_state
is_lui_auipc_jal < alu_out
is_lui_auipc_jal >= cpuregs_rs2
is_lb_lh_lw_lbu_lhu <= is_lui_auipc_jal_jalr_addi_add_sub
is_lb_lh_lw_lbu_lhu != new_ascii_instr
is_lb_lh_lw_lbu_lhu < dbg_ascii_instr
is_lb_lh_lw_lbu_lhu <= dbg_insn_imm
is_lb_lh_lw_lbu_lhu <= dbg_insn_rs1
is_lb_lh_lw_lbu_lhu < dbg_insn_rs2
is_lb_lh_lw_lbu_lhu != dbg_rs2val
is_lb_lh_lw_lbu_lhu % dbg_rs2val == 0
is_lb_lh_lw_lbu_lhu < cached_ascii_instr
is_lb_lh_lw_lbu_lhu <= cached_insn_rs1
is_lb_lh_lw_lbu_lhu < cached_insn_rs2
is_lb_lh_lw_lbu_lhu < cpu_state
is_lb_lh_lw_lbu_lhu < dbg_ascii_state
is_lb_lh_lw_lbu_lhu < alu_out
is_lb_lh_lw_lbu_lhu >= cpuregs_rs2
is_sb_sh_sw <= is_lui_auipc_jal_jalr_addi_add_sub
is_sb_sh_sw <= new_ascii_instr
is_sb_sh_sw < dbg_ascii_instr
is_sb_sh_sw <= dbg_insn_imm
is_sb_sh_sw < dbg_insn_rs2
is_sb_sh_sw != dbg_rs2val
is_sb_sh_sw % dbg_rs2val == 0
is_sb_sh_sw <= dbg_rs1val_valid
is_sb_sh_sw < cached_ascii_instr
is_sb_sh_sw <= cached_insn_opcode
is_sb_sh_sw < cached_insn_rs2
is_sb_sh_sw < cpu_state
is_sb_sh_sw < dbg_ascii_state
is_sb_sh_sw < alu_out
is_sb_sh_sw >= cpuregs_rs2
is_lui_auipc_jal_jalr_addi_add_sub != new_ascii_instr
is_lui_auipc_jal_jalr_addi_add_sub < dbg_ascii_instr
is_lui_auipc_jal_jalr_addi_add_sub != dbg_insn_imm
is_lui_auipc_jal_jalr_addi_add_sub < dbg_insn_rs2
is_lui_auipc_jal_jalr_addi_add_sub != dbg_rs1val
is_lui_auipc_jal_jalr_addi_add_sub >= dbg_rs1val_valid
is_lui_auipc_jal_jalr_addi_add_sub < cached_ascii_instr
is_lui_auipc_jal_jalr_addi_add_sub != cached_insn_rs1
is_lui_auipc_jal_jalr_addi_add_sub < cached_insn_rs2
is_lui_auipc_jal_jalr_addi_add_sub < alu_out
is_lui_auipc_jal_jalr_addi_add_sub != alu_shl
is_lui_auipc_jal_jalr_addi_add_sub != cpuregs_rs1
is_lui_auipc_jal_jalr_addi_add_sub > cpuregs_rs2
new_ascii_instr != dbg_insn_imm
new_ascii_instr != dbg_insn_rs1
new_ascii_instr != dbg_insn_rs2
new_ascii_instr > dbg_rs1val
new_ascii_instr > dbg_rs2val
new_ascii_instr >= dbg_rs1val_valid
new_ascii_instr % cached_ascii_instr == 0
new_ascii_instr <= cached_ascii_instr
new_ascii_instr != cached_insn_rs1
new_ascii_instr != cached_insn_rs2
new_ascii_instr != cpu_state
new_ascii_instr < dbg_ascii_state
new_ascii_instr != alu_out
new_ascii_instr != cpuregs_rs1
new_ascii_instr >= cpuregs_rs2
dbg_ascii_instr != dbg_insn_imm
dbg_ascii_instr > dbg_insn_rs1
dbg_ascii_instr > dbg_insn_rs2
dbg_ascii_instr > dbg_rs1val
dbg_ascii_instr > dbg_rs2val
dbg_ascii_instr > dbg_rs1val_valid
dbg_ascii_instr <= cached_ascii_instr
dbg_ascii_instr != cached_insn_opcode
dbg_ascii_instr > cached_insn_rs1
dbg_ascii_instr > cached_insn_rs2
dbg_ascii_instr > cpu_state
dbg_ascii_instr < dbg_ascii_state
dbg_ascii_instr > alu_out
dbg_ascii_instr != alu_shl
dbg_ascii_instr > alu_shr
dbg_ascii_instr > cpuregs_rs1
dbg_ascii_instr > cpuregs_rs2
dbg_insn_imm != dbg_insn_rs1
dbg_insn_imm != dbg_insn_rs2
dbg_insn_imm != dbg_rs1val
dbg_insn_imm != dbg_rs2val
dbg_insn_imm % dbg_rs2val == 0
dbg_insn_imm != dbg_rs1val_valid
dbg_insn_imm != cached_ascii_instr
dbg_insn_imm != cached_insn_opcode
dbg_insn_imm != cached_insn_rs1
dbg_insn_imm != cached_insn_rs2
dbg_insn_imm != cpu_state
dbg_insn_imm < dbg_ascii_state
dbg_insn_imm >= cpuregs_rs1
dbg_insn_imm > cpuregs_rs2
dbg_insn_rs1 != dbg_insn_rs2
dbg_insn_rs1 < cached_ascii_instr
dbg_insn_rs1 <= cached_insn_rs1
dbg_insn_rs1 != cached_insn_rs2
dbg_insn_rs1 < cpu_state
dbg_insn_rs1 < dbg_ascii_state
dbg_insn_rs1 < alu_out
dbg_insn_rs1 >= cpuregs_rs2
dbg_insn_rs2 != dbg_rs1val
dbg_insn_rs2 > dbg_rs1val_valid
dbg_insn_rs2 < cached_ascii_instr
dbg_insn_rs2 != cached_insn_rs1
dbg_insn_rs2 <= cached_insn_rs2
dbg_insn_rs2 < cpu_state
dbg_insn_rs2 < dbg_ascii_state
dbg_insn_rs2 < alu_out
dbg_insn_rs2 != alu_shl
dbg_insn_rs2 != alu_shr
dbg_insn_rs2 != cpuregs_rs1
dbg_insn_rs2 > cpuregs_rs2
dbg_rs1val >= dbg_rs2val
dbg_rs1val != dbg_rs1val_valid
dbg_rs1val < cached_ascii_instr
dbg_rs1val < cached_insn_opcode
dbg_rs1val != cached_insn_rs2
dbg_rs1val != cpu_state
dbg_rs1val < dbg_ascii_state
dbg_rs1val < alu_out
dbg_rs2val < cached_ascii_instr
dbg_rs2val < cached_insn_opcode
dbg_rs2val < cpu_state
dbg_rs2val < dbg_ascii_state
dbg_rs2val < alu_out
dbg_rs2val != alu_shl
dbg_rs1val_valid < cached_ascii_instr
dbg_rs1val_valid <= cached_insn_opcode
dbg_rs1val_valid != cached_insn_rs1
dbg_rs1val_valid < cached_insn_rs2
dbg_rs1val_valid < cpu_state
dbg_rs1val_valid < dbg_ascii_state
dbg_rs1val_valid < alu_out
dbg_rs1val_valid != cpuregs_rs1
dbg_rs1val_valid >= cpuregs_rs2
cached_ascii_instr != cached_insn_opcode
cached_ascii_instr > cached_insn_rs1
cached_ascii_instr > cached_insn_rs2
cached_ascii_instr > cpu_state
cached_ascii_instr < dbg_ascii_state
cached_ascii_instr > alu_out
cached_ascii_instr != alu_shl
cached_ascii_instr > alu_shr
cached_ascii_instr > cpuregs_rs1
cached_ascii_instr > cpuregs_rs2
cached_insn_opcode != cpu_state
cached_insn_opcode < dbg_ascii_state
cached_insn_opcode != alu_out
cached_insn_opcode != alu_shl
cached_insn_opcode != alu_shr
cached_insn_opcode != cpuregs_rs1
cached_insn_opcode >= cpuregs_rs2
cached_insn_rs1 != cached_insn_rs2
cached_insn_rs1 < cpu_state
cached_insn_rs1 < dbg_ascii_state
cached_insn_rs1 < alu_out
cached_insn_rs1 >= cpuregs_rs2
cached_insn_rs2 < cpu_state
cached_insn_rs2 < dbg_ascii_state
cached_insn_rs2 < alu_out
cached_insn_rs2 != alu_shl
cached_insn_rs2 != alu_shr
cached_insn_rs2 != cpuregs_rs1
cached_insn_rs2 > cpuregs_rs2
cpu_state < alu_out
cpu_state != alu_shl
cpu_state != alu_shr
cpu_state != cpuregs_rs1
cpu_state > cpuregs_rs2
dbg_ascii_state > alu_out
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
dbg_ascii_state > cpuregs_rs1
dbg_ascii_state > cpuregs_rs2
alu_out != alu_shl
alu_out > alu_shr
alu_out >= cpuregs_rs1
alu_out > cpuregs_rs2
alu_shl >= alu_shr
alu_shl >= cpuregs_rs2
alu_shr >= cpuregs_rs2
cpuregs_rs1 >= cpuregs_rs2
1.099520149208E12 * mem_instr + 1069547667 * mem_addr + 4 * cached_insn_opcode - 1.108076530544E12 == 0
1040399 * mem_instr - mem_la_wdata + 1019 * dbg_rs1val - 1039379 == 0
2.9972482208E10 * mem_instr + 1069547667 * reg_next_pc + 4 * cached_insn_opcode - 3.8528863544E10 == 0
1.45672236734E12 * mem_instr + 356515889 * reg_op1 + 340 * cached_insn_opcode - 1.82036857412E12 == 0
8.1411360352E10 * mem_instr + 1069547667 * dbg_insn_addr + 20 * cached_insn_opcode - 1.02802313692E11 == 0
4.284477551E9 * mem_instr - 1069547667 * instr_addi + cached_insn_opcode - 4.284477551E9 == 0
4.284477551E9 * mem_instr + 1069547667 * is_lui_auipc_jal + cached_insn_opcode - 5.354025218E9 == 0
6.9782592791728046E18 * mem_instr - 1069547667 * dbg_ascii_instr + 1626997501 * cached_insn_opcode - 6.9708026538081116E18 == 0
1.00732374071E11 * mem_instr + 1069547667 * dbg_insn_rs1 + 31 * cached_insn_opcode - 1.33888351748E11 == 0
5.031274853E10 * mem_instr - 1069547667 * dbg_insn_rs2 + 7 * cached_insn_opcode - 2.7852247523E10 == 0
1.087723690456E12 * mem_instr + 1069547667 * dbg_rs1val - cached_insn_opcode - 1.086654142789E12 == 0
3.214929884E9 * mem_instr - 1069547667 * dbg_rs1val_valid + cached_insn_opcode - 3.214929884E9 == 0
6.9708342685676001E18 * mem_instr - 1069547667 * cached_ascii_instr + 1626997501 * cached_insn_opcode - 6.9633776432029071E18 == 0
1.32818804081E11 * mem_instr + 31 * cached_insn_opcode + 1069547667 * cached_insn_rs1 - 1.65974781758E11 == 0
2.9991342857E10 * mem_instr + 7 * cached_insn_opcode - 1069547667 * cached_insn_rs2 - 7.53084185E9 == 0
1.6043215005E10 * mem_addr - 1.099520149208E12 * mem_wstrb + 60 * cached_insn_opcode - 1.2834572004E11 == 0
3.746560276E9 * mem_addr - 1.37440018651E11 * reg_next_pc - 500 * cached_insn_opcode + 1.069547667E12 == 0
1.092541775505E12 * mem_addr - 2.74880037302E11 * reg_op1 - 258060 * cached_insn_opcode + 2.71637303844E14 == 0
1.0176420044E10 * mem_addr - 1.37440018651E11 * dbg_insn_addr - 2532 * cached_insn_opcode + 2.667389012668E12 == 0
4.284477551E9 * mem_addr + 1.099520149208E12 * instr_addi - 1012 * cached_insn_opcode - 3.4275820408E10 == 0
1069547667 * mem_addr - 1.099520149208E12 * decoder_pseudo_trigger + 4 * cached_insn_opcode - 8.556381336E9 == 0
4.284477551E9 * mem_addr - 1.099520149208E12 * is_lui_auipc_jal - 1012 * cached_insn_opcode + 1.0652443288E12 == 0
1.00732374071E11 * mem_addr - 1.099520149208E12 * dbg_insn_rs1 - 31492 * cached_insn_opcode + 3.327926563288E13 == 0
2.5156374265E10 * mem_addr + 5.49760074604E11 * dbg_insn_rs2 - 3504 * cached_insn_opcode - 1.1746212560804E13 == 0
1.0458881639E10 * mem_addr - 1.0572309127E10 * dbg_rs1val + 49 * cached_insn_opcode - 9.4243362239E10 == 0
803732471 * mem_addr + 2.74880037302E11 * dbg_rs1val_valid - 254 * cached_insn_opcode - 6.429859768E9 == 0
1.32818804081E11 * mem_addr - 31372 * cached_insn_opcode - 1.099520149208E12 * cached_insn_rs1 + 3.30225741928E13 == 0
2.9991342857E10 * mem_addr - 7084 * cached_insn_opcode + 1.099520149208E12 * cached_insn_rs2 - 2.3329853876224E13 == 0
1020 * mem_wdata - 1020 * mem_la_wdata - 1021 * reg_op1 + 1041420 == 0
mem_wdata - mem_la_wdata + 1021 * instr_addi == 0
4.294966264E9 * mem_wdata - 4.294966264E9 * mem_la_wdata - 1021 * decoded_imm + 4.385161596964E12 == 0
mem_wdata - mem_la_wdata - 1021 * is_lui_auipc_jal + 1021 == 0
1626997501 * mem_wdata - 1626997501 * mem_la_wdata + 1021 * cached_ascii_instr - 7.118162876E9 == 0
31 * mem_wdata - 31 * mem_la_wdata - 1021 * cached_insn_rs1 + 31651 == 0
7 * mem_wdata - 7 * mem_la_wdata + 1021 * cached_insn_rs2 - 21441 == 0
1020 * mem_wdata + mem_la_wdata - 1021 * alu_out + 1041420 == 0
1020 * mem_wdata - reg_op1 - 1020 * alu_out + 1041420 == 0
mem_wdata + instr_addi - alu_out + 1020 == 0
4.294966264E9 * mem_wdata - decoded_imm - 4.294966264E9 * alu_out + 4.385160556564E12 == 0
mem_wdata - is_lui_auipc_jal - alu_out + 1021 == 0
1633969257 * mem_wdata + new_ascii_instr - 1633969257 * alu_out + 1.66664864214E12 == 0
1633939698 * mem_wdata + dbg_ascii_instr - 1633939698 * alu_out + 1.666618462401E12 == 0
1626997501 * mem_wdata + cached_ascii_instr - 1626997501 * alu_out + 1.659530479264E12 == 0
31 * mem_wdata - cached_insn_rs1 - 31 * alu_out + 31651 == 0
7 * mem_wdata + cached_insn_rs2 - 7 * alu_out + 7119 == 0
2.9972482208E10 * mem_wstrb - 1.6043215005E10 * reg_next_pc - 60 * cached_insn_opcode + 1.2834572004E11 == 0
2.91344473468E11 * mem_wstrb - 1069547667 * reg_op1 - 1020 * cached_insn_opcode + 1.09093862034E12 == 0
8.1411360352E10 * mem_wstrb - 1.6043215005E10 * dbg_insn_addr - 300 * cached_insn_opcode + 3.208643001E11 == 0
4.284477551E9 * mem_wstrb - 1.6043215005E10 * is_lui_auipc_jal - 15 * cached_insn_opcode + 1.6043215005E10 == 0
1.39565185583456102E18 * mem_wstrb + 3.208643001E9 * dbg_ascii_instr - 4.880992503E9 * cached_insn_opcode - 2.2369876094079756E16 == 0
1.00732374071E11 * mem_wstrb - 1.6043215005E10 * dbg_insn_rs1 - 465 * cached_insn_opcode + 4.97339665155E11 == 0
1.0062549706E10 * mem_wstrb + 3.208643001E9 * dbg_insn_rs2 - 21 * cached_insn_opcode - 6.7381503021E10 == 0
1.087723690456E12 * mem_wstrb - 1.6043215005E10 * dbg_rs1val + 15 * cached_insn_opcode - 1.6043215005E10 == 0
6.9708342685676001E18 * mem_wstrb + 1.6043215005E10 * cached_ascii_instr - 2.4404962515E10 * cached_insn_opcode - 1.11849380470398784E17 == 0
1.32818804081E11 * mem_wstrb - 465 * cached_insn_opcode - 1.6043215005E10 * cached_insn_rs1 + 4.97339665155E11 == 0
2.9991342857E10 * mem_wstrb - 105 * cached_insn_opcode + 1.6043215005E10 * cached_insn_rs2 - 3.36907515105E11 == 0
mem_la_wdata + reg_op1 - alu_out == 0
mem_la_wdata - 1020 * instr_addi - alu_out + 1020 == 0
1073741566 * mem_la_wdata + 255 * decoded_imm - 1073741566 * alu_out - 260100 == 0
mem_la_wdata + 1020 * is_lui_auipc_jal - alu_out == 0
1020 * mem_la_wdata - 1019 * dbg_insn_imm - 4.376571662396E12 * dbg_rs1val_valid + 4.376571661376E12 == 0
1626997501 * mem_la_wdata - 1020 * cached_ascii_instr - 1626997501 * alu_out + 1.66664864214E12 == 0
31 * mem_la_wdata + 1020 * cached_insn_rs1 - 31 * alu_out == 0
7 * mem_la_wdata - 1020 * cached_insn_rs2 - 7 * alu_out + 28560 == 0
4.282339404E9 * count_instr - dbg_insn_opcode - 1.7129357616E10 * alu_out + 1.7467664567063E13 == 0
4.294967284E9 * count_instr - dbg_insn_imm - 1.7179869136E10 * alu_out + 1.7519171551436E13 == 0
count_instr + dbg_rs1val_valid - 4 * alu_out + 4078 == 0
1.092541775505E12 * reg_next_pc - 7.493120552E9 * reg_op1 - 3060 * cached_insn_opcode - 1.097351241E12 == 0
2.544105011E9 * reg_next_pc - 936640069 * dbg_insn_addr - 8 * cached_insn_opcode - 1620038708 == 0
292789 * reg_next_pc + 8 * mem_rdata_word + 167564 * dbg_insn_rs2 - 6190908 == 0
4.284477551E9 * reg_next_pc + 2.9972482208E10 * instr_addi - 12 * cached_insn_opcode - 3.4275820408E10 == 0
1069547667 * reg_next_pc - 2.9972482208E10 * decoder_pseudo_trigger + 4 * cached_insn_opcode - 8.556381336E9 == 0
4.284477551E9 * reg_next_pc - 2.9972482208E10 * is_lui_auipc_jal - 12 * cached_insn_opcode - 4.3033382E9 == 0
1.00732374071E11 * reg_next_pc - 2.9972482208E10 * dbg_insn_rs1 - 492 * cached_insn_opcode + 1.2328795588E11 == 0
2.5156374265E10 * reg_next_pc + 1.4986241104E10 * dbg_insn_rs2 - 4 * cached_insn_opcode - 5.15962057304E11 == 0
1.35965461307E11 * reg_next_pc - 3.746560276E9 * dbg_rs1val + 512 * cached_insn_opcode - 1.091470250732E12 == 0
803732471 * reg_next_pc + 7.493120552E9 * dbg_rs1val_valid - 4 * cached_insn_opcode - 6.429859768E9 == 0
1.32818804081E11 * reg_next_pc - 372 * cached_insn_opcode - 2.9972482208E10 * cached_insn_rs1 - 1.334034842E11 == 0
2.9991342857E10 * reg_next_pc - 84 * cached_insn_opcode + 2.9972482208E10 * cached_insn_rs2 - 8.69352869224E11 == 0
356515889 * reg_op1 + 340 * next_insn_opcode + 3.6363226848E11 * is_sb_sh_sw - 3.6364620678E11 == 0
2.0352840088E10 * reg_op1 - 1.092541775505E12 * dbg_insn_addr - 1020 * cached_insn_opcode + 1.09093862034E12 == 0
2.2354921681949E13 * reg_op1 - 2.36034698E9 * mem_rdata_word + 14014460 * dbg_ascii_instr - 2.280243436901112E16 == 0
356515889 * reg_op1 - 1.45672236734E12 * decoder_pseudo_trigger + 340 * cached_insn_opcode - 3.6364620678E11 == 0
1.00732374071E11 * reg_op1 - 4.37016710202E12 * dbg_insn_rs1 - 30600 * cached_insn_opcode + 3.27281586102E13 == 0
5.031274853E9 * reg_op1 + 4.37016710202E11 * dbg_insn_rs2 + 1938 * cached_insn_opcode - 1.4309251264302E13 == 0
2.71930922614E11 * reg_op1 - 1.092541775505E12 * dbg_rs1val + 260355 * cached_insn_opcode - 2.78462082841785E14 == 0
803732471 * reg_op1 + 1.092541775505E12 * dbg_rs1val_valid - 255 * cached_insn_opcode - 8.1980712042E11 == 0
next_insn_opcode - 3.2085159165E10 * instr_jal + 1069506672 * decoded_rs1 - 1069547667 == 0
9985 * next_insn_opcode - 1.14836308940727334E18 * instr_jal + 267376668 * decoded_imm_j - 1.0952157656355E13 == 0
85 * next_insn_opcode + 9.1000677251E10 * instr_jal + 89125556 * cpuregs_rs1 - 9.0911551695E10 == 0
287 * next_insn_opcode + 7.486929324E9 * decoded_rs1 - 1.0695053055E10 * decoded_rs2 - 7.498694889E9 == 0
1431242708 * next_insn_opcode + 1.53115078587636454E18 * decoded_rs1 - 1.0695053055E10 * decoded_imm_j - 1.53077139029804621E18 == 0
31621 * next_insn_opcode + 1.092008127012E12 * decoded_rs1 + 3.2085159165E10 * cpuregs_rs1 - 3.3820166778207E13 == 0
31 * next_insn_opcode + 1069547667 * decoded_rs1 + 3.2085159165E10 * cpuregs_rs2 - 1070818512 == 0
1792 * next_insn_opcode - 2.73002031753E11 * decoded_rs2 - 5.615196993E9 * cpuregs_rs1 + 5.72742746982E12 == 0
4.294966264E9 * next_insn_opcode + 1069547667 * decoded_imm + 4.5934950753629133E18 * is_sb_sh_sw - 4.5936722384435267E18 == 0
next_insn_opcode + 1069547667 * is_lui_auipc_jal + 1069506672 * is_sb_sh_sw - 1069547667 == 0
31 * next_insn_opcode + 3.3154706832E10 * is_sb_sh_sw + 1069547667 * cached_insn_rs1 - 3.3155977677E10 == 0
7 * next_insn_opcode + 7.486546704E9 * is_sb_sh_sw - 1069547667 * cached_insn_rs2 + 2.2460501007E10 == 0
340 * next_insn_opcode - 356515889 * dbg_insn_imm - 1.53122407948117555E18 * dbg_rs1val_valid + 1.53122407948117555E18 == 0
next_insn_opcode - 1069547667 * cpuregs_rs1 + 1.092008127012E12 * cpuregs_rs2 + 1.090938579345E12 == 0
1069547667 * dbg_insn_opcode - 9.1941287971866634E18 * decoder_pseudo_trigger + 3.214929884E9 * cached_insn_opcode - 4.5824529689859236E18 == 0
4.284477551E9 * dbg_insn_opcode - 9.1941287971866634E18 * is_lui_auipc_jal + 4.282339404E9 * cached_insn_opcode - 9.1626190878362941E18 == 0
288533 * dbg_insn_addr - 28 * mem_rdata_word + 823484 * cached_insn_rs2 - 21909692 == 0
4.284477551E9 * dbg_insn_addr + 8.1411360352E10 * instr_addi + 4 * cached_insn_opcode - 8.568955102E10 == 0
1069547667 * dbg_insn_addr - 8.1411360352E10 * decoder_pseudo_trigger + 20 * cached_insn_opcode - 2.139095334E10 == 0
4.284477551E9 * dbg_insn_addr - 8.1411360352E10 * is_lui_auipc_jal + 4 * cached_insn_opcode - 4.278190668E9 == 0
1.4390339153E10 * dbg_insn_addr - 1.1630194336E10 * dbg_insn_rs1 - 68 * cached_insn_opcode + 7.2729241356E10 == 0
2.5156374265E10 * dbg_insn_addr + 4.0705680176E10 * dbg_insn_rs2 + 204 * cached_insn_opcode - 1.357946768996E12 == 0
4.688464183E9 * dbg_insn_addr - 350911036 * dbg_rs1val + 88 * cached_insn_opcode - 9.4120194696E10 == 0
803732471 * dbg_insn_addr + 2.0352840088E10 * dbg_rs1val_valid - 4 * cached_insn_opcode - 1.607464942E10 == 0
1.32818804081E11 * dbg_insn_addr + 124 * cached_insn_opcode - 8.1411360352E10 * cached_insn_rs1 - 1.32623910708E11 == 0
4.284477551E9 * dbg_insn_addr + 4 * cached_insn_opcode + 1.1630194336E10 * cached_insn_rs2 - 3.29923632076E11 == 0
6942197 * mem_rdata_word - 6.7064765045847E13 * is_lui_auipc_jal - 41219 * dbg_ascii_instr + 6.7065983438268E13 == 0
215208107 * mem_rdata_word - 1277789 * dbg_ascii_instr - 6.7064765045847E13 * cached_insn_rs1 + 2.079045486586308E15 == 0
48595379 * mem_rdata_word - 288533 * dbg_ascii_instr + 6.7064765045847E13 * cached_insn_rs2 - 1.40835153721584E15 == 0
68 * mem_rdata_word - 2733 * dbg_insn_imm - 1.173814278428E13 * dbg_rs1val_valid + 1.173814278428E13 == 0
mem_rdata_word + 40995 * dbg_insn_rs1 + 1271069 * dbg_rs1val_valid - 1312064 == 0
6.9782592791728046E18 * instr_addi - 4.284477551E9 * dbg_ascii_instr - 6942197 * cached_insn_opcode + 2.9870332073049556E16 == 0
1.00732374071E11 * instr_addi + 4.284477551E9 * dbg_insn_rs1 + 30 * cached_insn_opcode - 1.32818804081E11 == 0
5.031274853E10 * instr_addi - 4.284477551E9 * dbg_insn_rs2 - 19 * cached_insn_opcode + 8.9974028571E10 == 0
1.087723690456E12 * instr_addi + 4.284477551E9 * dbg_rs1val - 1021 * cached_insn_opcode + 4.284477551E9 == 0
4.284477551E9 * decoder_pseudo_trigger - 1069547667 * is_lui_auipc_jal - cached_insn_opcode + 1069547667 == 0
6.9782592791728046E18 * decoder_pseudo_trigger + 1069547667 * dbg_ascii_instr - 1626997501 * cached_insn_opcode - 7.456625364693252E15 == 0
1.00732374071E11 * decoder_pseudo_trigger - 1069547667 * dbg_insn_rs1 - 31 * cached_insn_opcode + 3.3155977677E10 == 0
5.031274853E10 * decoder_pseudo_trigger + 1069547667 * dbg_insn_rs2 - 7 * cached_insn_opcode - 2.2460501007E10 == 0
1.087723690456E12 * decoder_pseudo_trigger - 1069547667 * dbg_rs1val + cached_insn_opcode - 1069547667 == 0
6.9708342685676001E18 * decoder_pseudo_trigger + 1069547667 * cached_ascii_instr - 1626997501 * cached_insn_opcode - 7.456625364693252E15 == 0
1.32818804081E11 * decoder_pseudo_trigger - 31 * cached_insn_opcode - 1069547667 * cached_insn_rs1 + 3.3155977677E10 == 0
2.9991342857E10 * decoder_pseudo_trigger - 7 * cached_insn_opcode + 1069547667 * cached_insn_rs2 - 2.2460501007E10 == 0
6.9782592791728046E18 * is_lui_auipc_jal + 4.284477551E9 * dbg_ascii_instr + 6942197 * cached_insn_opcode - 7.0081296112458537E18 == 0
1.00732374071E11 * is_lui_auipc_jal - 4.284477551E9 * dbg_insn_rs1 - 30 * cached_insn_opcode + 3.208643001E10 == 0
5.031274853E10 * is_lui_auipc_jal + 4.284477551E9 * dbg_insn_rs2 + 19 * cached_insn_opcode - 1.40286777101E11 == 0
1.087723690456E12 * is_lui_auipc_jal - 4.284477551E9 * dbg_rs1val + 1021 * cached_insn_opcode - 1.092008168007E12 == 0
3.214929884E9 * is_lui_auipc_jal + 4.284477551E9 * dbg_rs1val_valid - cached_insn_opcode - 3.214929884E9 == 0
1607464942 * dbg_ascii_instr - 3.4891296395864023E18 * dbg_rs1val_valid + 816969849 * cached_insn_opcode - 1.1206853354178152E16 == 0
5.031274853E10 * dbg_insn_rs1 + 1.00732374071E11 * dbg_insn_rs2 + 799 * cached_insn_opcode - 3.675075059921E12 == 0
1.087723690456E12 * dbg_insn_rs1 - 1.00732374071E11 * dbg_rs1val + 31621 * cached_insn_opcode - 3.3820166778207E13 == 0
3.214929884E9 * dbg_insn_rs1 + 1.00732374071E11 * dbg_rs1val_valid - cached_insn_opcode - 9.9662826404E10 == 0
1.32818804081E11 * dbg_insn_rs1 + 930 * cached_insn_opcode - 1.00732374071E11 * cached_insn_rs1 - 9.9467933031E11 == 0
4.284477551E9 * dbg_insn_rs1 + 30 * cached_insn_opcode + 1.4390339153E10 * cached_insn_rs2 - 4.35015926294E11 == 0
5.43861845228E11 * dbg_insn_rs2 + 2.5156374265E10 * dbg_rs1val - 3583 * cached_insn_opcode - 1.1395942375523E13 == 0
1607464942 * dbg_insn_rs2 - 2.5156374265E10 * dbg_rs1val_valid + 13 * cached_insn_opcode - 3.3756763782E10 == 0
1.32818804081E11 * dbg_insn_rs2 + 589 * cached_insn_opcode + 5.031274853E10 * cached_insn_rs1 - 4.348890090131E12 == 0
2.9991342857E10 * dbg_insn_rs2 + 133 * cached_insn_opcode - 5.031274853E10 * cached_insn_rs2 + 4.26749519133E11 == 0
803732471 * dbg_rs1val + 2.71930922614E11 * dbg_rs1val_valid - 255 * cached_insn_opcode + 803732471 == 0
1.32818804081E11 * dbg_rs1val - 31651 * cached_insn_opcode - 1.087723690456E12 * cached_insn_rs1 + 3.3852253208217E13 == 0
2.9991342857E10 * dbg_rs1val - 7147 * cached_insn_opcode + 1.087723690456E12 * cached_insn_rs2 - 2.2812206156719E13 == 0
6.9708342685676001E18 * dbg_rs1val_valid - 3.214929884E9 * cached_ascii_instr - 1626997501 * cached_insn_opcode + 2.2413706708356304E16 == 0
1.32818804081E11 * dbg_rs1val_valid - 31 * cached_insn_opcode + 3.214929884E9 * cached_insn_rs1 - 9.9662826404E10 == 0
2.9991342857E10 * dbg_rs1val_valid - 7 * cached_insn_opcode - 3.214929884E9 * cached_insn_rs2 + 6.7513527564E10 == 0
===========================================================================
..tick():::EXIT
trap == mem_valid
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_state
trap == mem_wordsize
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == last_mem_valid
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoder_pseudo_trigger
trap == compressed_instr
trap == is_slli_srli_srai
trap == is_sll_srl_sra
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_lbu_lhu_lw
trap == is_alu_reg_imm
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_rs2val_valid
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_store
trap == latched_stalu
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == alu_eq
trap == clear_prefetched_high_word_q
trap == orig(trap)
trap == orig(pcpi_valid)
trap == orig(eoi)
trap == orig(trace_valid)
trap == orig(irq_delay)
trap == orig(irq_active)
trap == orig(timer)
trap == orig(pcpi_int_wr)
trap == orig(pcpi_int_wait)
trap == orig(pcpi_int_ready)
trap == orig(mem_wordsize)
trap == orig(mem_do_rdata)
trap == orig(mem_do_wdata)
trap == orig(mem_la_secondword)
trap == orig(mem_la_firstword_reg)
trap == orig(prefetched_high_word)
trap == orig(clear_prefetched_high_word)
trap == orig(instr_lui)
trap == orig(instr_auipc)
trap == orig(instr_jalr)
trap == orig(instr_beq)
trap == orig(instr_bne)
trap == orig(instr_blt)
trap == orig(instr_bge)
trap == orig(instr_bltu)
trap == orig(instr_bgeu)
trap == orig(instr_lb)
trap == orig(instr_lh)
trap == orig(instr_lw)
trap == orig(instr_lbu)
trap == orig(instr_lhu)
trap == orig(instr_sb)
trap == orig(instr_sh)
trap == orig(instr_sw)
trap == orig(instr_slti)
trap == orig(instr_sltiu)
trap == orig(instr_xori)
trap == orig(instr_ori)
trap == orig(instr_andi)
trap == orig(instr_slli)
trap == orig(instr_srli)
trap == orig(instr_srai)
trap == orig(instr_add)
trap == orig(instr_sub)
trap == orig(instr_sll)
trap == orig(instr_slt)
trap == orig(instr_sltu)
trap == orig(instr_xor)
trap == orig(instr_srl)
trap == orig(instr_sra)
trap == orig(instr_or)
trap == orig(instr_and)
trap == orig(instr_rdcycle)
trap == orig(instr_rdcycleh)
trap == orig(instr_rdinstr)
trap == orig(instr_rdinstrh)
trap == orig(instr_ecall_ebreak)
trap == orig(instr_getq)
trap == orig(instr_setq)
trap == orig(instr_retirq)
trap == orig(instr_maskirq)
trap == orig(instr_waitirq)
trap == orig(instr_timer)
trap == orig(decoder_trigger_q)
trap == orig(decoder_pseudo_trigger_q)
trap == orig(compressed_instr)
trap == orig(is_slli_srli_srai)
trap == orig(is_sll_srl_sra)
trap == orig(is_slti_blt_slt)
trap == orig(is_sltiu_bltu_sltu)
trap == orig(is_beq_bne_blt_bge_bltu_bgeu)
trap == orig(is_lbu_lhu_lw)
trap == orig(is_alu_reg_reg)
trap == orig(is_compare)
trap == orig(dbg_next)
trap == orig(irq_state)
trap == orig(set_mem_do_rinst)
trap == orig(set_mem_do_rdata)
trap == orig(set_mem_do_wdata)
trap == orig(latched_branch)
trap == orig(latched_compr)
trap == orig(latched_trace)
trap == orig(latched_is_lu)
trap == orig(latched_is_lh)
trap == orig(latched_is_lb)
trap == orig(pcpi_timeout)
trap == orig(do_waitirq)
trap == orig(alu_wait)
trap == orig(alu_wait_2)
trap == orig(alu_eq)
trap == orig(clear_prefetched_high_word_q)
mem_instr == orig(mem_instr)
mem_addr == orig(mem_addr)
mem_wdata == orig(mem_wdata)
mem_wstrb == orig(mem_wstrb)
mem_la_wdata == reg_op2
mem_la_wdata == orig(mem_la_wdata)
mem_la_wdata == orig(reg_op2)
mem_la_wstrb == orig(mem_la_wstrb)
pcpi_insn == trace_data
pcpi_insn == reg_out
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == dbg_rs2val
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == decoded_rs
pcpi_insn == orig(pcpi_insn)
pcpi_insn == orig(trace_data)
pcpi_insn == orig(reg_sh)
pcpi_insn == orig(irq_pending)
pcpi_insn == orig(pcpi_int_rd)
pcpi_insn == orig(mem_16bit_buffer)
pcpi_insn == orig(current_pc)
pcpi_insn == orig(pcpi_timeout_counter)
pcpi_insn == orig(next_irq_pending)
pcpi_insn == orig(alu_out_0)
pcpi_insn == orig(alu_out_0_q)
pcpi_insn == orig(decoded_rs)
reg_pc == orig(reg_next_pc)
reg_op1 == orig(reg_op1)
next_insn_opcode == mem_rdata_word
next_insn_opcode == mem_rdata_q
next_insn_opcode == orig(mem_rdata_word)
irq_mask == orig(irq_mask)
mem_do_rinst == instr_jal
mem_do_rinst == decoder_pseudo_trigger_q
mem_do_rinst == latched_branch
mem_do_rinst == cpuregs_write
mem_do_rinst == orig(decoder_pseudo_trigger)
mem_do_rinst == orig(dbg_rs2val_valid)
instr_lw == orig(is_lb_lh_lw_lbu_lhu)
instr_sw == orig(is_sb_sh_sw)
instr_addi == is_jalr_addi_slti_sltiu_xori_ori_andi
instr_addi == dbg_rs1val_valid
instr_addi == orig(mem_do_prefetch)
instr_addi == orig(is_alu_reg_imm)
instr_addi == orig(latched_store)
instr_addi == orig(latched_stalu)
instr_addi == orig(cpuregs_write)
decoded_imm == dbg_insn_imm
decoder_trigger == orig(mem_valid)
decoder_trigger == orig(mem_state)
decoder_trigger == orig(mem_do_rinst)
decoder_trigger == orig(last_mem_valid)
decoder_trigger_q == dbg_next
decoder_trigger_q == orig(decoder_trigger)
is_lui_auipc_jal == orig(instr_jal)
is_sb_sh_sw == q_insn_rd
is_sb_sh_sw == cached_insn_rd
is_sb_sh_sw == alu_ltu
is_sb_sh_sw == alu_lts
is_sb_sh_sw == orig(instr_addi)
is_sb_sh_sw == orig(is_jalr_addi_slti_sltiu_xori_ori_andi)
is_sb_sh_sw == orig(dbg_insn_rd)
is_sb_sh_sw == orig(q_insn_rd)
is_sb_sh_sw == orig(cached_insn_rd)
is_sb_sh_sw == orig(latched_rd)
is_sb_sh_sw == orig(alu_ltu)
is_sb_sh_sw == orig(alu_lts)
dbg_insn_rs1 == orig(decoded_rs1)
dbg_insn_rs2 == orig(decoded_rs2)
dbg_insn_rd == latched_rd
dbg_insn_rd == orig(decoded_rd)
q_ascii_instr == orig(dbg_ascii_instr)
q_ascii_instr == orig(q_ascii_instr)
q_insn_imm == orig(dbg_insn_imm)
q_insn_imm == orig(q_insn_imm)
q_insn_opcode == orig(dbg_insn_opcode)
q_insn_opcode == orig(q_insn_opcode)
q_insn_rs1 == orig(dbg_insn_rs1)
q_insn_rs1 == orig(q_insn_rs1)
q_insn_rs2 == orig(dbg_insn_rs2)
q_insn_rs2 == orig(q_insn_rs2)
dbg_valid_insn == orig(is_lui_auipc_jal_jalr_addi_add_sub)
dbg_valid_insn == orig(dbg_valid_insn)
cached_ascii_instr == orig(cached_ascii_instr)
cached_insn_imm == orig(decoded_imm)
cached_insn_imm == orig(cached_insn_imm)
cached_insn_opcode == orig(cached_insn_opcode)
cached_insn_rs1 == orig(cached_insn_rs1)
cached_insn_rs2 == orig(cached_insn_rs2)
alu_out_q == alu_add_sub
alu_out_q == orig(alu_out)
alu_out_q == orig(alu_out_q)
alu_out_q == orig(alu_add_sub)
alu_shl == orig(alu_shl)
alu_shr == orig(alu_shr)
trap == 0
mem_instr one of { 0, 1 }
mem_addr one of { 4, 8, 1020 }
mem_wstrb one of { 0, 15 }
mem_la_wdata >= 1
mem_la_wstrb == 15
pcpi_insn == -1
reg_pc one of { 4, 8, 20 }
reg_next_pc one of { 4, 8, 12 }
reg_op1 one of { 0, 1020 }
irq_mask == 4294967295L
mem_do_prefetch one of { 0, 1 }
mem_do_rinst one of { 0, 1 }
instr_lw one of { 0, 1 }
instr_sw one of { 0, 1 }
instr_addi one of { 0, 1 }
decoded_rd one of { 0, 2 }
decoded_rs1 one of { 1, 31 }
decoded_rs2 one of { 0, 21 }
decoded_imm one of { 0, 1020, 4294967284L }
decoded_imm_j one of { 40960, 4294967284L }
decoder_trigger one of { 0, 1 }
decoder_trigger_q one of { 0, 1 }
is_lui_auipc_jal one of { 0, 1 }
is_lb_lh_lw_lbu_lhu one of { 0, 1 }
is_sb_sh_sw one of { 0, 1 }
is_lui_auipc_jal_jalr_addi_add_sub one of { 0, 1 }
new_ascii_instr >= 0
dbg_insn_rs1 one of { 0, 1, 31 }
dbg_insn_rs2 one of { 0, 21, 28 }
dbg_insn_rd one of { 0, 1, 2 }
dbg_rs1val one of { -1, 0 }
q_ascii_instr one of { 29559, 6971756, 1633969257 }
q_insn_imm one of { 0, 1020, 4294967284L }
q_insn_opcode one of { 2138147, 1069547667, 4284477551L }
q_insn_rs1 one of { 0, 1, 31 }
q_insn_rs2 one of { 2, 21, 28 }
dbg_valid_insn == 1
cached_ascii_instr one of { 6971756, 1633969257 }
cached_insn_imm one of { 1020, 4294967284L }
cached_insn_rs1 one of { 0, 31 }
cached_insn_rs2 one of { 21, 28 }
cpu_state one of { 32, 64 }
dbg_ascii_state one of { 439788790632L, 119178353865521L }
alu_out >= -1
alu_shl >= 0
alu_shr >= 0
cpuregs_wrdata one of { -1, 24 }
cpuregs_wrdata != 0
cpuregs_rs1 one of { -1, 1020 }
cpuregs_rs2 one of { -1, 0 }
trap <= mem_instr
trap < mem_addr
trap != mem_wdata
trap <= mem_wstrb
trap < mem_la_wdata
trap < count_cycle
trap < count_instr
trap < reg_pc
trap < reg_next_pc
trap <= reg_op1
trap <= next_insn_opcode
trap < dbg_insn_opcode
trap <= dbg_insn_addr
trap <= mem_do_prefetch
trap <= mem_do_rinst
trap <= instr_lw
trap <= instr_sw
trap <= instr_addi
trap <= decoded_rd
trap < decoded_rs1
trap <= decoded_rs2
trap <= decoded_imm
trap < decoded_imm_j
trap <= decoder_trigger
trap <= decoder_trigger_q
trap <= is_lui_auipc_jal
trap <= is_lb_lh_lw_lbu_lhu
trap <= is_sb_sh_sw
trap <= is_lui_auipc_jal_jalr_addi_add_sub
trap <= new_ascii_instr
trap < dbg_ascii_instr
trap <= dbg_insn_rs1
trap <= dbg_insn_rs2
trap <= dbg_insn_rd
trap >= dbg_rs1val
trap < q_ascii_instr
trap <= q_insn_imm
trap < q_insn_opcode
trap <= q_insn_rs1
trap < q_insn_rs2
trap < cached_ascii_instr
trap < cached_insn_imm
trap <= cached_insn_opcode
trap <= cached_insn_rs1
trap < cached_insn_rs2
trap < cpu_state
trap < dbg_ascii_state
trap != alu_out
trap < alu_out_q
trap <= alu_shl
trap <= alu_shr
trap != cpuregs_wrdata
trap != cpuregs_rs1
trap >= cpuregs_rs2
trap < orig(count_cycle)
trap < orig(count_instr)
trap <= orig(reg_pc)
trap != orig(reg_out)
trap <= orig(next_insn_opcode)
trap <= orig(dbg_insn_addr)
trap < orig(decoded_imm_j)
trap <= orig(is_lui_auipc_jal)
trap <= orig(new_ascii_instr)
trap != orig(dbg_rs2val)
trap <= orig(dbg_rs1val_valid)
trap >= orig(cpuregs_rs2)
mem_instr < mem_addr
mem_instr != mem_wstrb
mem_instr <= mem_la_wdata
mem_instr < mem_la_wstrb
mem_instr > pcpi_insn
mem_instr < count_cycle
mem_instr <= count_instr
mem_instr < reg_pc
mem_instr < reg_next_pc
mem_instr != reg_op1
mem_instr <= next_insn_opcode
mem_instr < dbg_insn_opcode
mem_instr != dbg_insn_addr
mem_instr < irq_mask
mem_instr >= mem_do_prefetch
mem_instr != mem_do_rinst
mem_instr >= instr_lw
mem_instr >= instr_sw
mem_instr >= instr_addi
mem_instr <= decoded_rs1
mem_instr != decoded_rs2
mem_instr != decoded_imm
mem_instr < decoded_imm_j
mem_instr >= decoder_trigger
mem_instr >= is_lb_lh_lw_lbu_lhu
mem_instr >= is_sb_sh_sw
mem_instr != new_ascii_instr
mem_instr < dbg_ascii_instr
mem_instr != dbg_insn_rs2
mem_instr > dbg_rs1val
mem_instr < q_ascii_instr
mem_instr <= q_insn_imm
mem_instr < q_insn_opcode
mem_instr != q_insn_rs1
mem_instr < q_insn_rs2
mem_instr <= dbg_valid_insn
mem_instr < cached_ascii_instr
mem_instr < cached_insn_imm
mem_instr != cached_insn_rs1
mem_instr < cached_insn_rs2
mem_instr < cpu_state
mem_instr < dbg_ascii_state
mem_instr != alu_out
mem_instr < alu_out_q
mem_instr != cpuregs_wrdata
mem_instr != cpuregs_rs1
mem_instr > cpuregs_rs2
mem_instr < orig(count_cycle)
mem_instr <= orig(count_instr)
mem_instr != orig(reg_pc)
mem_instr != orig(reg_out)
mem_instr != orig(dbg_insn_addr)
mem_instr < orig(decoded_imm_j)
mem_instr != orig(new_ascii_instr)
mem_instr != orig(dbg_rs1val)
mem_instr != orig(dbg_rs2val)
mem_instr % orig(dbg_rs2val) == 0
mem_instr < orig(cpu_state)
mem_instr < orig(dbg_ascii_state)
mem_instr != orig(cpuregs_rs1)
mem_instr > orig(cpuregs_rs2)
mem_addr > mem_wstrb
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr != count_cycle
mem_addr != count_instr
mem_addr % reg_pc == 0
mem_addr >= reg_pc
mem_addr != next_insn_opcode
mem_addr < dbg_insn_opcode
mem_addr < irq_mask
mem_addr > mem_do_prefetch
mem_addr > mem_do_rinst
mem_addr > instr_lw
mem_addr > instr_sw
mem_addr > instr_addi
mem_addr > decoded_rd
mem_addr > decoded_rs1
mem_addr > decoded_rs2
mem_addr != decoded_imm
mem_addr < decoded_imm_j
mem_addr > decoder_trigger
mem_addr > decoder_trigger_q
mem_addr > is_lui_auipc_jal
mem_addr > is_lb_lh_lw_lbu_lhu
mem_addr > is_sb_sh_sw
mem_addr > is_lui_auipc_jal_jalr_addi_add_sub
mem_addr != new_ascii_instr
mem_addr < dbg_ascii_instr
mem_addr != dbg_insn_rs1
mem_addr != dbg_insn_rs2
mem_addr > dbg_insn_rd
mem_addr > dbg_rs1val
mem_addr < q_ascii_instr
mem_addr != q_insn_imm
mem_addr < q_insn_opcode
mem_addr != q_insn_rs1
mem_addr != q_insn_rs2
mem_addr > dbg_valid_insn
mem_addr < cached_ascii_instr
mem_addr < cached_insn_imm
mem_addr != cached_insn_rs1
mem_addr != cached_insn_rs2
mem_addr != cpu_state
mem_addr < dbg_ascii_state
mem_addr != alu_out
mem_addr < alu_out_q
mem_addr > cpuregs_wrdata
mem_addr != cpuregs_rs1
mem_addr > cpuregs_rs2
mem_addr != orig(count_cycle)
mem_addr != orig(count_instr)
mem_addr >= orig(reg_pc)
mem_addr != orig(reg_out)
mem_addr != orig(dbg_insn_addr)
mem_addr < orig(decoded_imm_j)
mem_addr > orig(is_lui_auipc_jal)
mem_addr != orig(new_ascii_instr)
mem_addr >= orig(dbg_rs1val)
mem_addr > orig(dbg_rs2val)
mem_addr > orig(dbg_rs1val_valid)
mem_addr != orig(cpu_state)
mem_addr < orig(dbg_ascii_state)
mem_addr != orig(cpuregs_rs1)
mem_addr > orig(cpuregs_rs2)
mem_la_wdata % mem_wdata == 0
mem_wdata <= mem_la_wdata
mem_wdata >= pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata < reg_op1
mem_wdata != next_insn_opcode
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
instr_sw % mem_wdata == 0
mem_wdata != instr_sw
instr_addi % mem_wdata == 0
mem_wdata != instr_addi
mem_wdata != decoded_imm
mem_wdata < decoded_imm_j
is_sb_sh_sw % mem_wdata == 0
mem_wdata != is_sb_sh_sw
mem_wdata != new_ascii_instr
mem_wdata < dbg_ascii_instr
mem_wdata < q_ascii_instr
mem_wdata != q_insn_imm
mem_wdata < q_insn_opcode
mem_wdata < cached_ascii_instr
mem_wdata < cached_insn_imm
mem_wdata != cached_insn_opcode
mem_wdata < dbg_ascii_state
mem_wdata < alu_out_q
mem_wdata != alu_shl
mem_wdata != cpuregs_rs1
mem_wdata != cpuregs_rs2
mem_wdata < orig(count_cycle)
mem_wdata < orig(count_instr)
mem_wdata != orig(next_insn_opcode)
mem_wdata < orig(decoded_imm_j)
mem_wdata != orig(new_ascii_instr)
mem_wdata != orig(dbg_rs1val)
mem_wdata % orig(dbg_rs2val) == 0
mem_wdata >= orig(dbg_rs2val)
mem_wdata < orig(cpu_state)
mem_wdata < orig(dbg_ascii_state)
mem_wdata != orig(cpuregs_rs1)
mem_wstrb <= mem_la_wstrb
mem_wstrb > pcpi_insn
mem_wstrb < count_cycle
mem_wstrb != count_instr
mem_wstrb < reg_pc
mem_wstrb != reg_next_pc
mem_wstrb <= reg_op1
mem_wstrb < dbg_insn_opcode
mem_wstrb <= dbg_insn_addr
mem_wstrb < irq_mask
mem_wstrb >= mem_do_rinst
mem_wstrb < decoded_rs1
mem_wstrb <= decoded_rs2
mem_wstrb <= decoded_imm
mem_wstrb < decoded_imm_j
mem_wstrb <= new_ascii_instr
mem_wstrb < dbg_ascii_instr
mem_wstrb <= dbg_insn_rs1
mem_wstrb <= dbg_insn_rs2
mem_wstrb >= dbg_rs1val
mem_wstrb < q_ascii_instr
mem_wstrb != q_insn_imm
mem_wstrb < q_insn_opcode
mem_wstrb != q_insn_rs2
mem_wstrb != dbg_valid_insn
mem_wstrb < cached_ascii_instr
mem_wstrb < cached_insn_imm
mem_wstrb <= cached_insn_opcode
mem_wstrb <= cached_insn_rs1
mem_wstrb < cached_insn_rs2
mem_wstrb < cpu_state
mem_wstrb < dbg_ascii_state
mem_wstrb != alu_out
mem_wstrb < alu_out_q
mem_wstrb != cpuregs_wrdata
mem_wstrb != cpuregs_rs1
mem_wstrb >= cpuregs_rs2
mem_wstrb < orig(count_cycle)
mem_wstrb != orig(count_instr)
mem_wstrb <= orig(reg_pc)
mem_wstrb != orig(reg_out)
mem_wstrb <= orig(dbg_insn_addr)
mem_wstrb < orig(decoded_imm_j)
mem_wstrb <= orig(new_ascii_instr)
mem_wstrb < orig(cpu_state)
mem_wstrb < orig(dbg_ascii_state)
mem_wstrb >= orig(cpuregs_rs2)
mem_la_wdata > pcpi_insn
mem_la_wdata != count_cycle
mem_la_wdata != count_instr
mem_la_wdata != reg_op1
mem_la_wdata != next_insn_opcode
mem_la_wdata < dbg_insn_opcode
mem_la_wdata < irq_mask
mem_la_wdata >= mem_do_prefetch
mem_la_wdata >= mem_do_rinst
mem_la_wdata >= instr_lw
mem_la_wdata > instr_sw
mem_la_wdata > instr_addi
mem_la_wdata < decoded_imm_j
mem_la_wdata >= decoder_trigger
mem_la_wdata >= decoder_trigger_q
mem_la_wdata >= is_lui_auipc_jal
mem_la_wdata >= is_lb_lh_lw_lbu_lhu
mem_la_wdata > is_sb_sh_sw
mem_la_wdata >= is_lui_auipc_jal_jalr_addi_add_sub
mem_la_wdata != new_ascii_instr
mem_la_wdata < dbg_ascii_instr
mem_la_wdata > dbg_rs1val
mem_la_wdata < q_ascii_instr
mem_la_wdata < q_insn_opcode
mem_la_wdata >= dbg_valid_insn
mem_la_wdata < cached_ascii_instr
mem_la_wdata <= cached_insn_imm
mem_la_wdata != cached_insn_opcode
mem_la_wdata < dbg_ascii_state
mem_la_wdata <= alu_out_q
mem_la_wdata != alu_shl
mem_la_wdata > cpuregs_rs2
mem_la_wdata != orig(count_cycle)
mem_la_wdata != orig(count_instr)
mem_la_wdata % orig(reg_out) == 0
mem_la_wdata >= orig(reg_out)
mem_la_wdata != orig(next_insn_opcode)
mem_la_wdata <= orig(decoded_imm_j)
mem_la_wdata >= orig(is_lui_auipc_jal)
mem_la_wdata != orig(new_ascii_instr)
mem_la_wdata != orig(dbg_rs1val)
mem_la_wdata % orig(dbg_rs2val) == 0
mem_la_wdata >= orig(dbg_rs2val)
mem_la_wdata >= orig(dbg_rs1val_valid)
mem_la_wdata != orig(cpu_state)
mem_la_wdata < orig(dbg_ascii_state)
mem_la_wdata > orig(cpuregs_rs2)
mem_la_wstrb != count_cycle
mem_la_wstrb != reg_pc
mem_la_wstrb > reg_next_pc
mem_la_wstrb != reg_op1
mem_la_wstrb < dbg_insn_opcode
mem_la_wstrb != dbg_insn_addr
mem_la_wstrb > mem_do_prefetch
mem_la_wstrb > mem_do_rinst
mem_la_wstrb > instr_lw
mem_la_wstrb > instr_sw
mem_la_wstrb > instr_addi
mem_la_wstrb > decoded_rd
mem_la_wstrb != decoded_rs1
mem_la_wstrb != decoded_rs2
mem_la_wstrb != decoded_imm
mem_la_wstrb < decoded_imm_j
mem_la_wstrb > decoder_trigger
mem_la_wstrb > decoder_trigger_q
mem_la_wstrb > is_lui_auipc_jal
mem_la_wstrb > is_lb_lh_lw_lbu_lhu
mem_la_wstrb > is_sb_sh_sw
mem_la_wstrb > is_lui_auipc_jal_jalr_addi_add_sub
mem_la_wstrb != new_ascii_instr
mem_la_wstrb < dbg_ascii_instr
mem_la_wstrb != dbg_insn_rs1
mem_la_wstrb != dbg_insn_rs2
mem_la_wstrb > dbg_insn_rd
mem_la_wstrb > dbg_rs1val
mem_la_wstrb < q_ascii_instr
mem_la_wstrb != q_insn_imm
mem_la_wstrb < q_insn_opcode
mem_la_wstrb != q_insn_rs1
mem_la_wstrb != q_insn_rs2
mem_la_wstrb < cached_ascii_instr
mem_la_wstrb < cached_insn_imm
mem_la_wstrb != cached_insn_rs1
mem_la_wstrb < cached_insn_rs2
mem_la_wstrb < cpu_state
mem_la_wstrb < dbg_ascii_state
mem_la_wstrb != alu_out
mem_la_wstrb < alu_out_q
mem_la_wstrb != alu_shl
mem_la_wstrb != cpuregs_wrdata
mem_la_wstrb != cpuregs_rs1
mem_la_wstrb > cpuregs_rs2
mem_la_wstrb != orig(count_cycle)
mem_la_wstrb != orig(count_instr)
mem_la_wstrb != orig(reg_pc)
mem_la_wstrb != orig(reg_out)
mem_la_wstrb != orig(dbg_insn_addr)
mem_la_wstrb < orig(decoded_imm_j)
mem_la_wstrb > orig(is_lui_auipc_jal)
mem_la_wstrb != orig(new_ascii_instr)
mem_la_wstrb != orig(dbg_rs1val)
mem_la_wstrb > orig(dbg_rs1val_valid)
mem_la_wstrb != orig(cpuregs_rs1)
mem_la_wstrb > orig(cpuregs_rs2)
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < reg_next_pc
pcpi_insn < reg_op1
pcpi_insn < next_insn_opcode
pcpi_insn < dbg_insn_opcode
pcpi_insn < dbg_insn_addr
pcpi_insn < mem_do_prefetch
pcpi_insn < mem_do_rinst
pcpi_insn < instr_lw
pcpi_insn < instr_sw
pcpi_insn < instr_addi
pcpi_insn < decoded_rd
pcpi_insn < decoded_rs1
pcpi_insn < decoded_rs2
pcpi_insn < decoded_imm
pcpi_insn < decoded_imm_j
pcpi_insn < decoder_trigger
pcpi_insn < decoder_trigger_q
pcpi_insn < is_lui_auipc_jal
pcpi_insn < is_lb_lh_lw_lbu_lhu
pcpi_insn < is_sb_sh_sw
pcpi_insn < is_lui_auipc_jal_jalr_addi_add_sub
pcpi_insn < new_ascii_instr
pcpi_insn < dbg_ascii_instr
pcpi_insn < dbg_insn_rs1
pcpi_insn < dbg_insn_rs2
pcpi_insn < dbg_insn_rd
pcpi_insn <= dbg_rs1val
pcpi_insn < q_ascii_instr
pcpi_insn < q_insn_imm
pcpi_insn < q_insn_opcode
pcpi_insn < q_insn_rs1
pcpi_insn < q_insn_rs2
pcpi_insn < cached_ascii_instr
pcpi_insn < cached_insn_imm
pcpi_insn < cached_insn_opcode
pcpi_insn < cached_insn_rs1
pcpi_insn < cached_insn_rs2
pcpi_insn < cpu_state
pcpi_insn < dbg_ascii_state
pcpi_insn <= alu_out
pcpi_insn < alu_out_q
pcpi_insn < alu_shl
pcpi_insn < alu_shr
pcpi_insn <= cpuregs_wrdata
pcpi_insn <= cpuregs_rs1
pcpi_insn <= cpuregs_rs2
pcpi_insn < orig(count_cycle)
pcpi_insn < orig(count_instr)
pcpi_insn < orig(reg_pc)
pcpi_insn <= orig(reg_out)
pcpi_insn < orig(next_insn_opcode)
pcpi_insn < orig(dbg_insn_addr)
pcpi_insn < orig(decoded_imm_j)
pcpi_insn < orig(is_lui_auipc_jal)
pcpi_insn < orig(new_ascii_instr)
pcpi_insn <= orig(dbg_rs1val)
pcpi_insn <= orig(dbg_rs2val)
pcpi_insn < orig(dbg_rs1val_valid)
pcpi_insn <= orig(cpuregs_rs1)
pcpi_insn <= orig(cpuregs_rs2)
count_cycle > count_instr
count_cycle > reg_pc
count_cycle > reg_next_pc
count_cycle != reg_op1
count_cycle != next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle > dbg_insn_addr
count_cycle < irq_mask
count_cycle > mem_do_prefetch
count_cycle > mem_do_rinst
count_cycle > instr_lw
count_cycle > instr_sw
count_cycle > instr_addi
count_cycle > decoded_rd
count_cycle > decoded_rs1
count_cycle > decoded_rs2
count_cycle != decoded_imm
count_cycle < decoded_imm_j
count_cycle > decoder_trigger
count_cycle > decoder_trigger_q
count_cycle > is_lui_auipc_jal
count_cycle > is_lb_lh_lw_lbu_lhu
count_cycle > is_sb_sh_sw
count_cycle > is_lui_auipc_jal_jalr_addi_add_sub
count_cycle != new_ascii_instr
count_cycle < dbg_ascii_instr
count_cycle > dbg_insn_rs1
count_cycle != dbg_insn_rs2
count_cycle > dbg_insn_rd
count_cycle > dbg_rs1val
count_cycle < q_ascii_instr
count_cycle != q_insn_imm
count_cycle < q_insn_opcode
count_cycle > q_insn_rs1
count_cycle != q_insn_rs2
count_cycle > dbg_valid_insn
count_cycle < cached_ascii_instr
count_cycle < cached_insn_imm
count_cycle != cached_insn_opcode
count_cycle > cached_insn_rs1
count_cycle != cached_insn_rs2
count_cycle != cpu_state
count_cycle < dbg_ascii_state
count_cycle != alu_out
count_cycle < alu_out_q
count_cycle != alu_shl
count_cycle != alu_shr
count_cycle > cpuregs_wrdata
count_cycle != cpuregs_rs1
count_cycle > cpuregs_rs2
count_cycle - orig(count_cycle) - 1 == 0
count_cycle > orig(count_instr)
count_cycle > orig(reg_pc)
count_cycle != orig(reg_out)
count_cycle != orig(next_insn_opcode)
count_cycle > orig(dbg_insn_addr)
count_cycle < orig(decoded_imm_j)
count_cycle > orig(is_lui_auipc_jal)
count_cycle != orig(new_ascii_instr)
count_cycle != orig(dbg_rs1val)
count_cycle > orig(dbg_rs2val)
count_cycle > orig(dbg_rs1val_valid)
count_cycle != orig(cpu_state)
count_cycle < orig(dbg_ascii_state)
count_cycle != orig(cpuregs_rs1)
count_cycle > orig(cpuregs_rs2)
count_instr != reg_pc
count_instr != reg_next_pc
count_instr != reg_op1
count_instr != next_insn_opcode
count_instr < dbg_insn_opcode
count_instr != dbg_insn_addr
count_instr < irq_mask
count_instr > mem_do_prefetch
count_instr > mem_do_rinst
count_instr > instr_lw
count_instr > instr_sw
count_instr >= instr_addi
instr_addi % count_instr == 0
count_instr > decoded_rd
count_instr != decoded_rs2
count_instr != decoded_imm
count_instr < decoded_imm_j
count_instr >= decoder_trigger
count_instr > decoder_trigger_q
count_instr > is_lui_auipc_jal
count_instr > is_lb_lh_lw_lbu_lhu
count_instr >= is_sb_sh_sw
count_instr >= is_lui_auipc_jal_jalr_addi_add_sub
count_instr != new_ascii_instr
count_instr < dbg_ascii_instr
count_instr != dbg_insn_rs1
count_instr != dbg_insn_rs2
count_instr >= dbg_insn_rd
count_instr > dbg_rs1val
count_instr < q_ascii_instr
count_instr != q_insn_imm
count_instr < q_insn_opcode
count_instr != q_insn_rs2
count_instr >= dbg_valid_insn
count_instr < cached_ascii_instr
count_instr < cached_insn_imm
count_instr != cached_insn_opcode
count_instr != cached_insn_rs2
count_instr != cpu_state
count_instr < dbg_ascii_state
count_instr != alu_out
count_instr < alu_out_q
count_instr != alu_shl
count_instr != alu_shr
count_instr != cpuregs_wrdata
count_instr != cpuregs_rs1
count_instr > cpuregs_rs2
count_instr < orig(count_cycle)
count_instr >= orig(count_instr)
count_instr != orig(reg_pc)
count_instr != orig(reg_out)
count_instr != orig(next_insn_opcode)
count_instr != orig(dbg_insn_addr)
count_instr < orig(decoded_imm_j)
count_instr > orig(is_lui_auipc_jal)
count_instr != orig(new_ascii_instr)
count_instr != orig(dbg_rs1val)
count_instr > orig(dbg_rs2val)
count_instr >= orig(dbg_rs1val_valid)
count_instr != orig(cpu_state)
count_instr < orig(dbg_ascii_state)
count_instr != orig(cpuregs_rs1)
count_instr > orig(cpuregs_rs2)
reg_pc != reg_op1
reg_pc < dbg_insn_opcode
reg_pc < irq_mask
reg_pc > mem_do_prefetch
reg_pc > mem_do_rinst
reg_pc > instr_lw
reg_pc > instr_sw
reg_pc > instr_addi
reg_pc > decoded_rd
reg_pc != decoded_rs1
reg_pc != decoded_rs2
reg_pc != decoded_imm
reg_pc < decoded_imm_j
reg_pc > decoder_trigger
reg_pc > decoder_trigger_q
reg_pc > is_lui_auipc_jal
reg_pc > is_lb_lh_lw_lbu_lhu
reg_pc > is_sb_sh_sw
reg_pc > is_lui_auipc_jal_jalr_addi_add_sub
reg_pc != new_ascii_instr
reg_pc < dbg_ascii_instr
reg_pc != dbg_insn_rs1
reg_pc != dbg_insn_rs2
reg_pc > dbg_insn_rd
reg_pc > dbg_rs1val
reg_pc < q_ascii_instr
reg_pc != q_insn_imm
reg_pc < q_insn_opcode
reg_pc != q_insn_rs1
reg_pc != q_insn_rs2
reg_pc > dbg_valid_insn
reg_pc < cached_ascii_instr
reg_pc < cached_insn_imm
reg_pc != cached_insn_rs1
reg_pc < cached_insn_rs2
reg_pc < cpu_state
reg_pc < dbg_ascii_state
reg_pc != alu_out
reg_pc < alu_out_q
reg_pc != alu_shl
reg_pc != alu_shr
reg_pc != cpuregs_wrdata
reg_pc != cpuregs_rs1
reg_pc > cpuregs_rs2
reg_pc < orig(count_cycle)
reg_pc != orig(count_instr)
reg_pc >= orig(reg_pc)
reg_pc != orig(reg_out)
reg_pc != orig(dbg_insn_addr)
reg_pc < orig(decoded_imm_j)
reg_pc > orig(is_lui_auipc_jal)
reg_pc != orig(new_ascii_instr)
reg_pc != orig(dbg_rs1val)
reg_pc > orig(dbg_rs1val_valid)
reg_pc < orig(cpu_state)
reg_pc < orig(dbg_ascii_state)
reg_pc != orig(cpuregs_rs1)
reg_pc > orig(cpuregs_rs2)
reg_next_pc != reg_op1
reg_next_pc < dbg_insn_opcode
reg_next_pc != dbg_insn_addr
reg_next_pc < irq_mask
reg_next_pc > mem_do_prefetch
reg_next_pc > mem_do_rinst
reg_next_pc > instr_lw
reg_next_pc > instr_sw
reg_next_pc > instr_addi
reg_next_pc > decoded_rd
reg_next_pc != decoded_rs1
reg_next_pc != decoded_rs2
reg_next_pc != decoded_imm
reg_next_pc < decoded_imm_j
reg_next_pc > decoder_trigger
reg_next_pc > decoder_trigger_q
reg_next_pc > is_lui_auipc_jal
reg_next_pc > is_lb_lh_lw_lbu_lhu
reg_next_pc > is_sb_sh_sw
reg_next_pc > is_lui_auipc_jal_jalr_addi_add_sub
reg_next_pc != new_ascii_instr
reg_next_pc < dbg_ascii_instr
reg_next_pc != dbg_insn_rs1
reg_next_pc != dbg_insn_rs2
reg_next_pc > dbg_insn_rd
reg_next_pc > dbg_rs1val
reg_next_pc < q_ascii_instr
reg_next_pc != q_insn_imm
reg_next_pc < q_insn_opcode
reg_next_pc != q_insn_rs1
reg_next_pc != q_insn_rs2
reg_next_pc > dbg_valid_insn
reg_next_pc < cached_ascii_instr
reg_next_pc < cached_insn_imm
reg_next_pc != cached_insn_rs1
reg_next_pc < cached_insn_rs2
reg_next_pc < cpu_state
reg_next_pc < dbg_ascii_state
reg_next_pc != alu_out
reg_next_pc < alu_out_q
reg_next_pc != alu_shl
reg_next_pc != alu_shr
reg_next_pc != cpuregs_wrdata
reg_next_pc != cpuregs_rs1
reg_next_pc > cpuregs_rs2
reg_next_pc <= orig(count_cycle)
reg_next_pc != orig(count_instr)
reg_next_pc != orig(reg_out)
reg_next_pc != orig(dbg_insn_addr)
reg_next_pc < orig(decoded_imm_j)
reg_next_pc > orig(is_lui_auipc_jal)
reg_next_pc != orig(new_ascii_instr)
reg_next_pc != orig(dbg_rs1val)
reg_next_pc > orig(dbg_rs1val_valid)
reg_next_pc < orig(cpu_state)
reg_next_pc < orig(dbg_ascii_state)
reg_next_pc != orig(cpuregs_rs1)
reg_next_pc > orig(cpuregs_rs2)
reg_op1 != next_insn_opcode
reg_op1 < dbg_insn_opcode
reg_op1 < irq_mask
reg_op1 >= mem_do_rinst
reg_op1 >= instr_lw
reg_op1 >= decoded_rd
reg_op1 != decoded_rs1
reg_op1 >= decoded_rs2
reg_op1 < decoded_imm_j
reg_op1 >= is_lui_auipc_jal
reg_op1 >= is_lb_lh_lw_lbu_lhu
reg_op1 != is_sb_sh_sw
reg_op1 != new_ascii_instr
reg_op1 < dbg_ascii_instr
reg_op1 >= dbg_rs1val
reg_op1 < q_ascii_instr
reg_op1 != q_insn_imm
reg_op1 < q_insn_opcode
reg_op1 >= q_insn_rs1
reg_op1 != q_insn_rs2
reg_op1 != dbg_valid_insn
reg_op1 < cached_ascii_instr
reg_op1 < cached_insn_imm
reg_op1 != cached_insn_opcode
reg_op1 >= cached_insn_rs1
reg_op1 != cached_insn_rs2
reg_op1 != cpu_state
reg_op1 < dbg_ascii_state
reg_op1 != alu_out
reg_op1 < alu_out_q
reg_op1 >= alu_shr
reg_op1 > cpuregs_wrdata
reg_op1 >= cpuregs_rs2
reg_op1 != orig(count_cycle)
reg_op1 != orig(count_instr)
reg_op1 != orig(reg_out)
reg_op1 != orig(next_insn_opcode)
reg_op1 >= orig(dbg_insn_addr)
reg_op1 < orig(decoded_imm_j)
reg_op1 >= orig(is_lui_auipc_jal)
reg_op1 != orig(new_ascii_instr)
reg_op1 >= orig(dbg_rs1val)
reg_op1 > orig(dbg_rs2val)
reg_op1 != orig(dbg_rs1val_valid)
reg_op1 != orig(cpu_state)
reg_op1 < orig(dbg_ascii_state)
reg_op1 >= orig(cpuregs_rs2)
next_insn_opcode <= dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode >= mem_do_prefetch
next_insn_opcode >= instr_lw
next_insn_opcode >= instr_sw
next_insn_opcode >= instr_addi
next_insn_opcode >= decoded_rd
next_insn_opcode != decoded_imm
next_insn_opcode != decoded_imm_j
next_insn_opcode >= decoder_trigger
next_insn_opcode >= is_lb_lh_lw_lbu_lhu
next_insn_opcode >= is_sb_sh_sw
next_insn_opcode != new_ascii_instr
next_insn_opcode != dbg_ascii_instr
next_insn_opcode >= dbg_insn_rd
next_insn_opcode > dbg_rs1val
next_insn_opcode < q_ascii_instr
next_insn_opcode < q_insn_opcode
next_insn_opcode < cached_ascii_instr
next_insn_opcode != cached_insn_imm
next_insn_opcode != cached_insn_opcode
next_insn_opcode != cpu_state
next_insn_opcode < dbg_ascii_state
next_insn_opcode != alu_out
next_insn_opcode != alu_out_q
next_insn_opcode != alu_shl
next_insn_opcode != alu_shr
next_insn_opcode > cpuregs_rs1
next_insn_opcode > cpuregs_rs2
next_insn_opcode != orig(count_cycle)
next_insn_opcode != orig(count_instr)
next_insn_opcode > orig(reg_out)
next_insn_opcode != orig(decoded_imm_j)
next_insn_opcode != orig(new_ascii_instr)
next_insn_opcode != orig(dbg_rs1val)
next_insn_opcode != orig(dbg_rs2val)
next_insn_opcode != orig(cpu_state)
next_insn_opcode < orig(dbg_ascii_state)
next_insn_opcode > orig(cpuregs_rs1)
next_insn_opcode > orig(cpuregs_rs2)
dbg_insn_opcode > dbg_insn_addr
dbg_insn_opcode < irq_mask
dbg_insn_opcode > mem_do_prefetch
dbg_insn_opcode > mem_do_rinst
dbg_insn_opcode > instr_lw
dbg_insn_opcode > instr_sw
dbg_insn_opcode > instr_addi
dbg_insn_opcode > decoded_rd
dbg_insn_opcode > decoded_rs1
dbg_insn_opcode > decoded_rs2
dbg_insn_opcode != decoded_imm
dbg_insn_opcode != decoded_imm_j
dbg_insn_opcode > decoder_trigger
dbg_insn_opcode > decoder_trigger_q
dbg_insn_opcode > is_lui_auipc_jal
dbg_insn_opcode > is_lb_lh_lw_lbu_lhu
dbg_insn_opcode > is_sb_sh_sw
dbg_insn_opcode > is_lui_auipc_jal_jalr_addi_add_sub
dbg_insn_opcode != new_ascii_instr
dbg_insn_opcode != dbg_ascii_instr
dbg_insn_opcode > dbg_insn_rs1
dbg_insn_opcode > dbg_insn_rs2
dbg_insn_opcode > dbg_insn_rd
dbg_insn_opcode > dbg_rs1val
dbg_insn_opcode != q_ascii_instr
dbg_insn_opcode != q_insn_imm
dbg_insn_opcode > q_insn_rs1
dbg_insn_opcode > q_insn_rs2
dbg_insn_opcode > dbg_valid_insn
dbg_insn_opcode != cached_ascii_instr
dbg_insn_opcode != cached_insn_imm
dbg_insn_opcode > cached_insn_rs1
dbg_insn_opcode > cached_insn_rs2
dbg_insn_opcode > cpu_state
dbg_insn_opcode < dbg_ascii_state
dbg_insn_opcode > alu_out
dbg_insn_opcode > alu_out_q
dbg_insn_opcode != alu_shl
dbg_insn_opcode > alu_shr
dbg_insn_opcode > cpuregs_wrdata
dbg_insn_opcode > cpuregs_rs1
dbg_insn_opcode > cpuregs_rs2
dbg_insn_opcode > orig(count_cycle)
dbg_insn_opcode > orig(count_instr)
dbg_insn_opcode > orig(reg_pc)
dbg_insn_opcode > orig(reg_out)
dbg_insn_opcode >= orig(next_insn_opcode)
dbg_insn_opcode > orig(dbg_insn_addr)
dbg_insn_opcode != orig(decoded_imm_j)
dbg_insn_opcode > orig(is_lui_auipc_jal)
dbg_insn_opcode != orig(new_ascii_instr)
dbg_insn_opcode > orig(dbg_rs1val)
dbg_insn_opcode > orig(dbg_rs2val)
dbg_insn_opcode > orig(dbg_rs1val_valid)
dbg_insn_opcode > orig(cpu_state)
dbg_insn_opcode < orig(dbg_ascii_state)
dbg_insn_opcode > orig(cpuregs_rs1)
dbg_insn_opcode > orig(cpuregs_rs2)
dbg_insn_addr < irq_mask
dbg_insn_addr >= mem_do_prefetch
dbg_insn_addr >= mem_do_rinst
dbg_insn_addr >= instr_lw
dbg_insn_addr >= instr_sw
dbg_insn_addr != instr_addi
dbg_insn_addr >= decoded_rd
dbg_insn_addr != decoded_rs1
dbg_insn_addr != decoded_imm
dbg_insn_addr < decoded_imm_j
dbg_insn_addr != decoder_trigger
dbg_insn_addr >= decoder_trigger_q
dbg_insn_addr >= is_lui_auipc_jal
dbg_insn_addr >= is_lb_lh_lw_lbu_lhu
dbg_insn_addr != is_sb_sh_sw
dbg_insn_addr != is_lui_auipc_jal_jalr_addi_add_sub
dbg_insn_addr != new_ascii_instr
dbg_insn_addr < dbg_ascii_instr
dbg_insn_addr != dbg_insn_rs2
dbg_insn_addr != dbg_insn_rd
dbg_insn_addr >= dbg_rs1val
dbg_insn_addr < q_ascii_instr
dbg_insn_addr != q_insn_imm
dbg_insn_addr < q_insn_opcode
dbg_insn_addr != q_insn_rs2
dbg_insn_addr != dbg_valid_insn
dbg_insn_addr < cached_ascii_instr
dbg_insn_addr < cached_insn_imm
dbg_insn_addr < cached_insn_rs2
dbg_insn_addr < cpu_state
dbg_insn_addr < dbg_ascii_state
dbg_insn_addr != alu_out
dbg_insn_addr < alu_out_q
dbg_insn_addr != cpuregs_wrdata
dbg_insn_addr != cpuregs_rs1
dbg_insn_addr >= cpuregs_rs2
dbg_insn_addr < orig(count_cycle)
dbg_insn_addr != orig(count_instr)
dbg_insn_addr >= orig(reg_pc)
dbg_insn_addr != orig(reg_out)
dbg_insn_addr % orig(reg_out) == 0
dbg_insn_addr < orig(decoded_imm_j)
dbg_insn_addr >= orig(is_lui_auipc_jal)
dbg_insn_addr != orig(new_ascii_instr)
dbg_insn_addr != orig(dbg_rs1val_valid)
dbg_insn_addr < orig(cpu_state)
dbg_insn_addr < orig(dbg_ascii_state)
dbg_insn_addr > orig(cpuregs_rs2)
irq_mask > mem_do_prefetch
irq_mask > mem_do_rinst
irq_mask > instr_lw
irq_mask > instr_sw
irq_mask > instr_addi
irq_mask > decoded_rd
irq_mask > decoded_rs1
irq_mask > decoded_rs2
irq_mask > decoded_imm
irq_mask > decoded_imm_j
irq_mask > decoder_trigger
irq_mask > decoder_trigger_q
irq_mask > is_lui_auipc_jal
irq_mask > is_lb_lh_lw_lbu_lhu
irq_mask > is_sb_sh_sw
irq_mask > is_lui_auipc_jal_jalr_addi_add_sub
irq_mask > new_ascii_instr
irq_mask > dbg_ascii_instr
irq_mask > dbg_insn_rs1
irq_mask > dbg_insn_rs2
irq_mask > dbg_insn_rd
irq_mask > dbg_rs1val
irq_mask > q_ascii_instr
irq_mask > q_insn_imm
irq_mask > q_insn_opcode
irq_mask > q_insn_rs1
irq_mask > q_insn_rs2
irq_mask > cached_ascii_instr
irq_mask > cached_insn_imm
irq_mask > cached_insn_opcode
irq_mask > cached_insn_rs1
irq_mask > cached_insn_rs2
irq_mask > cpu_state
irq_mask < dbg_ascii_state
irq_mask > alu_out
irq_mask > alu_out_q
irq_mask > alu_shl
irq_mask > alu_shr
irq_mask > cpuregs_wrdata
irq_mask > cpuregs_rs1
irq_mask > cpuregs_rs2
irq_mask > orig(count_cycle)
irq_mask > orig(count_instr)
irq_mask > orig(reg_pc)
irq_mask > orig(reg_out)
irq_mask > orig(next_insn_opcode)
irq_mask > orig(dbg_insn_addr)
irq_mask > orig(decoded_imm_j)
irq_mask > orig(is_lui_auipc_jal)
irq_mask > orig(new_ascii_instr)
irq_mask > orig(dbg_rs1val)
irq_mask > orig(dbg_rs2val)
irq_mask > orig(dbg_rs1val_valid)
irq_mask > orig(cpuregs_rs1)
irq_mask > orig(cpuregs_rs2)
mem_do_prefetch >= instr_lw
mem_do_prefetch >= instr_sw
mem_do_prefetch <= decoded_rs1
mem_do_prefetch != decoded_imm
mem_do_prefetch < decoded_imm_j
mem_do_prefetch <= decoder_trigger_q
mem_do_prefetch != is_lui_auipc_jal_jalr_addi_add_sub
mem_do_prefetch <= new_ascii_instr
mem_do_prefetch < dbg_ascii_instr
mem_do_prefetch <= dbg_insn_rs1
mem_do_prefetch != dbg_insn_rs2
mem_do_prefetch >= dbg_rs1val
mem_do_prefetch < q_ascii_instr
mem_do_prefetch <= q_insn_imm
mem_do_prefetch < q_insn_opcode
mem_do_prefetch < q_insn_rs2
mem_do_prefetch <= dbg_valid_insn
mem_do_prefetch < cached_ascii_instr
mem_do_prefetch < cached_insn_imm
mem_do_prefetch < cached_insn_rs2
mem_do_prefetch < cpu_state
mem_do_prefetch < dbg_ascii_state
mem_do_prefetch != alu_out
mem_do_prefetch % alu_out == 0
mem_do_prefetch < alu_out_q
mem_do_prefetch != cpuregs_wrdata
mem_do_prefetch != cpuregs_rs1
mem_do_prefetch >= cpuregs_rs2
mem_do_prefetch < orig(count_cycle)
mem_do_prefetch <= orig(count_instr)
mem_do_prefetch <= orig(reg_pc)
mem_do_prefetch != orig(reg_out)
mem_do_prefetch <= orig(next_insn_opcode)
mem_do_prefetch < orig(decoded_imm_j)
mem_do_prefetch != orig(new_ascii_instr)
mem_do_prefetch != orig(dbg_rs2val)
mem_do_prefetch % orig(dbg_rs2val) == 0
mem_do_prefetch < orig(cpu_state)
mem_do_prefetch < orig(dbg_ascii_state)
mem_do_prefetch > orig(cpuregs_rs2)
mem_do_rinst < decoded_rs1
mem_do_rinst <= decoded_rs2
mem_do_rinst <= decoded_imm
mem_do_rinst < decoded_imm_j
mem_do_rinst <= decoder_trigger_q
mem_do_rinst <= is_lui_auipc_jal
mem_do_rinst <= is_lui_auipc_jal_jalr_addi_add_sub
mem_do_rinst <= new_ascii_instr
mem_do_rinst < dbg_ascii_instr
mem_do_rinst <= dbg_insn_rs1
mem_do_rinst <= dbg_insn_rs2
mem_do_rinst >= dbg_rs1val
mem_do_rinst < q_ascii_instr
mem_do_rinst != q_insn_imm
mem_do_rinst < q_insn_opcode
mem_do_rinst <= q_insn_rs1
mem_do_rinst < q_insn_rs2
mem_do_rinst <= dbg_valid_insn
mem_do_rinst < cached_ascii_instr
mem_do_rinst < cached_insn_imm
mem_do_rinst <= cached_insn_opcode
mem_do_rinst <= cached_insn_rs1
mem_do_rinst < cached_insn_rs2
mem_do_rinst < cpu_state
mem_do_rinst < dbg_ascii_state
mem_do_rinst != alu_out
mem_do_rinst < alu_out_q
mem_do_rinst != cpuregs_wrdata
mem_do_rinst != cpuregs_rs1
mem_do_rinst >= cpuregs_rs2
mem_do_rinst < orig(count_cycle)
mem_do_rinst < orig(count_instr)
mem_do_rinst <= orig(reg_pc)
mem_do_rinst != orig(reg_out)
mem_do_rinst <= orig(dbg_insn_addr)
mem_do_rinst < orig(decoded_imm_j)
mem_do_rinst <= orig(is_lui_auipc_jal)
mem_do_rinst <= orig(new_ascii_instr)
mem_do_rinst <= orig(dbg_rs1val_valid)
mem_do_rinst < orig(cpu_state)
mem_do_rinst < orig(dbg_ascii_state)
mem_do_rinst >= orig(cpuregs_rs2)
instr_lw <= decoded_rd
instr_lw <= decoded_rs1
instr_lw < decoded_imm_j
instr_lw <= decoder_trigger_q
instr_lw <= is_lb_lh_lw_lbu_lhu
instr_lw <= new_ascii_instr
instr_lw < dbg_ascii_instr
instr_lw <= dbg_insn_rs1
instr_lw <= dbg_insn_rd
instr_lw >= dbg_rs1val
instr_lw < q_ascii_instr
instr_lw <= q_insn_imm
instr_lw < q_insn_opcode
instr_lw <= q_insn_rs1
instr_lw < q_insn_rs2
instr_lw <= dbg_valid_insn
instr_lw < cached_ascii_instr
instr_lw < cached_insn_imm
instr_lw <= cached_insn_rs1
instr_lw < cached_insn_rs2
instr_lw < cpu_state
instr_lw < dbg_ascii_state
instr_lw != alu_out
instr_lw % alu_out == 0
instr_lw < alu_out_q
instr_lw != cpuregs_wrdata
instr_lw != cpuregs_rs1
instr_lw >= cpuregs_rs2
instr_lw < orig(count_cycle)
instr_lw < orig(count_instr)
instr_lw <= orig(reg_pc)
instr_lw != orig(reg_out)
instr_lw <= orig(next_insn_opcode)
instr_lw <= orig(dbg_insn_addr)
instr_lw < orig(decoded_imm_j)
instr_lw <= orig(is_lui_auipc_jal)
instr_lw != orig(new_ascii_instr)
instr_lw != orig(dbg_rs2val)
instr_lw % orig(dbg_rs2val) == 0
instr_lw < orig(cpu_state)
instr_lw < orig(dbg_ascii_state)
instr_lw >= orig(cpuregs_rs2)
instr_sw <= decoded_rs1
instr_sw < decoded_imm_j
instr_sw <= decoder_trigger_q
instr_sw <= is_sb_sh_sw
instr_sw <= new_ascii_instr
instr_sw < dbg_ascii_instr
instr_sw <= dbg_insn_rs1
instr_sw >= dbg_rs1val
instr_sw < q_ascii_instr
instr_sw <= q_insn_imm
instr_sw < q_insn_opcode
instr_sw < q_insn_rs2
instr_sw <= dbg_valid_insn
instr_sw < cached_ascii_instr
instr_sw < cached_insn_imm
instr_sw <= cached_insn_opcode
instr_sw < cached_insn_rs2
instr_sw < cpu_state
instr_sw < dbg_ascii_state
instr_sw != alu_out
instr_sw % alu_out == 0
instr_sw < alu_out_q
instr_sw != cpuregs_wrdata
instr_sw != cpuregs_rs1
instr_sw >= cpuregs_rs2
instr_sw < orig(count_cycle)
instr_sw % orig(count_instr) == 0
instr_sw <= orig(count_instr)
instr_sw <= orig(reg_pc)
instr_sw != orig(reg_out)
instr_sw <= orig(next_insn_opcode)
instr_sw < orig(decoded_imm_j)
instr_sw <= orig(new_ascii_instr)
instr_sw != orig(dbg_rs2val)
instr_sw % orig(dbg_rs2val) == 0
instr_sw <= orig(dbg_rs1val_valid)
instr_sw < orig(cpu_state)
instr_sw < orig(dbg_ascii_state)
instr_sw >= orig(cpuregs_rs2)
instr_addi <= decoded_rs1
instr_addi <= decoded_imm
instr_addi < decoded_imm_j
instr_addi <= decoder_trigger
instr_addi <= is_sb_sh_sw
instr_addi <= is_lui_auipc_jal_jalr_addi_add_sub
instr_addi <= new_ascii_instr
instr_addi < dbg_ascii_instr
instr_addi != dbg_insn_rs1
instr_addi <= dbg_insn_rs2
instr_addi <= dbg_insn_rd
instr_addi > dbg_rs1val
instr_addi < q_ascii_instr
instr_addi <= q_insn_imm
instr_addi < q_insn_opcode
instr_addi < q_insn_rs2
instr_addi <= dbg_valid_insn
instr_addi < cached_ascii_instr
instr_addi < cached_insn_imm
instr_addi <= cached_insn_opcode
instr_addi < cached_insn_rs2
instr_addi < cpu_state
instr_addi < dbg_ascii_state
instr_addi != alu_out
instr_addi < alu_out_q
instr_addi != cpuregs_wrdata
instr_addi != cpuregs_rs1
instr_addi >= cpuregs_rs2
instr_addi < orig(count_cycle)
instr_addi % orig(count_instr) == 0
instr_addi <= orig(count_instr)
instr_addi != orig(reg_pc)
instr_addi != orig(reg_out)
instr_addi <= orig(next_insn_opcode)
instr_addi < orig(decoded_imm_j)
instr_addi <= orig(new_ascii_instr)
instr_addi != orig(dbg_rs2val)
instr_addi % orig(dbg_rs2val) == 0
instr_addi <= orig(dbg_rs1val_valid)
instr_addi < orig(cpu_state)
instr_addi < orig(dbg_ascii_state)
instr_addi != orig(cpuregs_rs1)
instr_addi >= orig(cpuregs_rs2)
decoded_rd != decoded_rs1
decoded_rd < decoded_imm_j
decoded_rd >= is_lb_lh_lw_lbu_lhu
decoded_rd != new_ascii_instr
decoded_rd < dbg_ascii_instr
decoded_rd >= dbg_rs1val
decoded_rd < q_ascii_instr
decoded_rd <= q_insn_imm
decoded_rd < q_insn_opcode
decoded_rd <= q_insn_rs1
decoded_rd < q_insn_rs2
decoded_rd != dbg_valid_insn
decoded_rd < cached_ascii_instr
decoded_rd < cached_insn_imm
decoded_rd <= cached_insn_rs1
decoded_rd < cached_insn_rs2
decoded_rd < cpu_state
decoded_rd < dbg_ascii_state
decoded_rd != alu_out
decoded_rd < alu_out_q
decoded_rd != cpuregs_wrdata
decoded_rd != cpuregs_rs1
decoded_rd >= cpuregs_rs2
decoded_rd < orig(count_cycle)
decoded_rd < orig(count_instr)
decoded_rd <= orig(reg_pc)
decoded_rd != orig(reg_out)
decoded_rd <= orig(dbg_insn_addr)
decoded_rd < orig(decoded_imm_j)
decoded_rd != orig(new_ascii_instr)
decoded_rd != orig(dbg_rs2val)
decoded_rd % orig(dbg_rs2val) == 0
decoded_rd != orig(dbg_rs1val_valid)
decoded_rd < orig(cpu_state)
decoded_rd < orig(dbg_ascii_state)
decoded_rd >= orig(cpuregs_rs2)
decoded_rs1 > decoded_rs2
decoded_rs1 != decoded_imm
decoded_rs1 < decoded_imm_j
decoded_rs1 >= decoder_trigger
decoded_rs1 >= decoder_trigger_q
decoded_rs1 >= is_lui_auipc_jal
decoded_rs1 >= is_lb_lh_lw_lbu_lhu
decoded_rs1 >= is_sb_sh_sw
decoded_rs1 >= is_lui_auipc_jal_jalr_addi_add_sub
decoded_rs1 != new_ascii_instr
decoded_rs1 < dbg_ascii_instr
dbg_insn_rs1 % decoded_rs1 == 0
decoded_rs1 != dbg_insn_rs2
dbg_insn_rd % decoded_rs1 == 0
decoded_rs1 > dbg_rs1val
decoded_rs1 < q_ascii_instr
decoded_rs1 != q_insn_imm
q_insn_imm % decoded_rs1 == 0
decoded_rs1 < q_insn_opcode
decoded_rs1 != q_insn_rs1
decoded_rs1 != q_insn_rs2
decoded_rs1 >= dbg_valid_insn
decoded_rs1 < cached_ascii_instr
decoded_rs1 < cached_insn_imm
decoded_rs1 != cached_insn_rs2
decoded_rs1 < cpu_state
decoded_rs1 < dbg_ascii_state
decoded_rs1 != alu_out
decoded_rs1 < alu_out_q
decoded_rs1 != alu_shl
decoded_rs1 > cpuregs_wrdata
decoded_rs1 != cpuregs_rs1
decoded_rs1 > cpuregs_rs2
decoded_rs1 < orig(count_cycle)
decoded_rs1 != orig(reg_pc)
decoded_rs1 != orig(reg_out)
decoded_rs1 != orig(dbg_insn_addr)
decoded_rs1 < orig(decoded_imm_j)
decoded_rs1 >= orig(is_lui_auipc_jal)
decoded_rs1 != orig(new_ascii_instr)
decoded_rs1 != orig(dbg_rs1val)
decoded_rs1 >= orig(dbg_rs1val_valid)
decoded_rs1 < orig(cpu_state)
decoded_rs1 < orig(dbg_ascii_state)
decoded_rs1 != orig(cpuregs_rs1)
decoded_rs1 > orig(cpuregs_rs2)
decoded_rs2 <= decoded_imm
decoded_rs2 < decoded_imm_j
decoded_rs2 <= new_ascii_instr
decoded_rs2 < dbg_ascii_instr
decoded_rs2 <= dbg_insn_rs1
decoded_rs2 <= dbg_insn_rs2
decoded_rs2 >= dbg_rs1val
decoded_rs2 < q_ascii_instr
decoded_rs2 != q_insn_imm
decoded_rs2 < q_insn_opcode
decoded_rs2 != q_insn_rs2
decoded_rs2 != dbg_valid_insn
decoded_rs2 < cached_ascii_instr
decoded_rs2 < cached_insn_imm
decoded_rs2 <= cached_insn_opcode
decoded_rs2 <= cached_insn_rs1
decoded_rs2 <= cached_insn_rs2
decoded_rs2 < cpu_state
decoded_rs2 < dbg_ascii_state
decoded_rs2 != alu_out
decoded_rs2 < alu_out_q
decoded_rs2 != cpuregs_wrdata
decoded_rs2 != cpuregs_rs1
decoded_rs2 >= cpuregs_rs2
decoded_rs2 < orig(count_cycle)
decoded_rs2 != orig(reg_out)
decoded_rs2 < orig(decoded_imm_j)
decoded_rs2 <= orig(new_ascii_instr)
decoded_rs2 < orig(cpu_state)
decoded_rs2 < orig(dbg_ascii_state)
decoded_rs2 >= orig(cpuregs_rs2)
decoded_imm >= decoder_trigger
decoded_imm != decoder_trigger_q
decoded_imm >= is_lui_auipc_jal
decoded_imm >= is_lui_auipc_jal_jalr_addi_add_sub
decoded_imm != new_ascii_instr
decoded_imm != dbg_ascii_instr
decoded_imm != dbg_insn_rs1
decoded_imm >= dbg_insn_rs2
decoded_imm > dbg_rs1val
decoded_imm != q_ascii_instr
decoded_imm != q_insn_opcode
decoded_imm != q_insn_rs2
decoded_imm != dbg_valid_insn
decoded_imm != cached_ascii_instr
decoded_imm % cached_insn_imm == 0
decoded_imm <= cached_insn_imm
decoded_imm != cached_insn_rs2
decoded_imm != cpu_state
decoded_imm < dbg_ascii_state
decoded_imm >= alu_out
decoded_imm > cpuregs_wrdata
decoded_imm >= cpuregs_rs2
decoded_imm != orig(count_cycle)
decoded_imm != orig(count_instr)
decoded_imm != orig(reg_pc)
decoded_imm % orig(reg_out) == 0
decoded_imm >= orig(reg_out)
decoded_imm != orig(next_insn_opcode)
decoded_imm % orig(decoded_imm_j) == 0
decoded_imm <= orig(decoded_imm_j)
decoded_imm >= orig(dbg_rs1val)
decoded_imm > orig(dbg_rs2val)
decoded_imm != orig(cpu_state)
decoded_imm < orig(dbg_ascii_state)
decoded_imm != orig(cpuregs_rs1)
decoded_imm >= orig(cpuregs_rs2)
decoded_imm_j > decoder_trigger
decoded_imm_j > decoder_trigger_q
decoded_imm_j > is_lui_auipc_jal
decoded_imm_j > is_lb_lh_lw_lbu_lhu
decoded_imm_j > is_sb_sh_sw
decoded_imm_j > is_lui_auipc_jal_jalr_addi_add_sub
decoded_imm_j != new_ascii_instr
decoded_imm_j != dbg_ascii_instr
decoded_imm_j > dbg_insn_rs1
decoded_imm_j > dbg_insn_rs2
decoded_imm_j > dbg_insn_rd
decoded_imm_j > dbg_rs1val
decoded_imm_j != q_ascii_instr
decoded_imm_j != q_insn_imm
decoded_imm_j != q_insn_opcode
decoded_imm_j > q_insn_rs1
decoded_imm_j > q_insn_rs2
decoded_imm_j > dbg_valid_insn
decoded_imm_j != cached_ascii_instr
decoded_imm_j != cached_insn_opcode
decoded_imm_j > cached_insn_rs1
decoded_imm_j > cached_insn_rs2
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j > alu_out
decoded_imm_j > alu_out_q
decoded_imm_j != alu_shl
decoded_imm_j > alu_shr
decoded_imm_j > cpuregs_wrdata
decoded_imm_j > cpuregs_rs1
decoded_imm_j > cpuregs_rs2
decoded_imm_j > orig(count_cycle)
decoded_imm_j > orig(count_instr)
decoded_imm_j > orig(reg_pc)
decoded_imm_j > orig(reg_out)
decoded_imm_j != orig(next_insn_opcode)
decoded_imm_j > orig(dbg_insn_addr)
decoded_imm_j > orig(is_lui_auipc_jal)
decoded_imm_j != orig(new_ascii_instr)
decoded_imm_j > orig(dbg_rs1val)
decoded_imm_j > orig(dbg_rs2val)
decoded_imm_j > orig(dbg_rs1val_valid)
decoded_imm_j > orig(cpu_state)
decoded_imm_j < orig(dbg_ascii_state)
decoded_imm_j > orig(cpuregs_rs1)
decoded_imm_j > orig(cpuregs_rs2)
decoder_trigger != decoder_trigger_q
decoder_trigger <= is_lui_auipc_jal_jalr_addi_add_sub
decoder_trigger != new_ascii_instr
decoder_trigger < dbg_ascii_instr
decoder_trigger != dbg_insn_rs1
decoder_trigger <= dbg_insn_rs2
decoder_trigger > dbg_rs1val
decoder_trigger < q_ascii_instr
decoder_trigger <= q_insn_imm
decoder_trigger < q_insn_opcode
decoder_trigger < q_insn_rs2
decoder_trigger <= dbg_valid_insn
decoder_trigger < cached_ascii_instr
decoder_trigger < cached_insn_imm
decoder_trigger < cached_insn_rs2
decoder_trigger < cpu_state
decoder_trigger < dbg_ascii_state
decoder_trigger != alu_out
decoder_trigger < alu_out_q
decoder_trigger != cpuregs_wrdata
decoder_trigger != cpuregs_rs1
decoder_trigger >= cpuregs_rs2
decoder_trigger < orig(count_cycle)
decoder_trigger <= orig(count_instr)
decoder_trigger != orig(reg_pc)
decoder_trigger != orig(reg_out)
decoder_trigger < orig(decoded_imm_j)
decoder_trigger <= orig(new_ascii_instr)
decoder_trigger != orig(dbg_rs2val)
decoder_trigger % orig(dbg_rs2val) == 0
decoder_trigger < orig(cpu_state)
decoder_trigger < orig(dbg_ascii_state)
decoder_trigger != orig(cpuregs_rs1)
decoder_trigger >= orig(cpuregs_rs2)
decoder_trigger_q <= new_ascii_instr
decoder_trigger_q < dbg_ascii_instr
decoder_trigger_q <= dbg_insn_rs1
decoder_trigger_q != dbg_insn_rs2
decoder_trigger_q >= dbg_rs1val
decoder_trigger_q < q_ascii_instr
decoder_trigger_q != q_insn_imm
decoder_trigger_q < q_insn_opcode
decoder_trigger_q < q_insn_rs2
decoder_trigger_q <= dbg_valid_insn
decoder_trigger_q < cached_ascii_instr
decoder_trigger_q < cached_insn_imm
decoder_trigger_q < cached_insn_rs2
decoder_trigger_q < cpu_state
decoder_trigger_q < dbg_ascii_state
decoder_trigger_q != alu_out
decoder_trigger_q < alu_out_q
decoder_trigger_q != cpuregs_wrdata
decoder_trigger_q != cpuregs_rs1
decoder_trigger_q >= cpuregs_rs2
decoder_trigger_q < orig(count_cycle)
decoder_trigger_q <= orig(count_instr)
decoder_trigger_q <= orig(reg_pc)
decoder_trigger_q != orig(reg_out)
decoder_trigger_q < orig(decoded_imm_j)
decoder_trigger_q != orig(new_ascii_instr)
decoder_trigger_q < orig(cpu_state)
decoder_trigger_q < orig(dbg_ascii_state)
decoder_trigger_q > orig(cpuregs_rs2)
is_lui_auipc_jal <= is_lui_auipc_jal_jalr_addi_add_sub
is_lui_auipc_jal != new_ascii_instr
is_lui_auipc_jal < dbg_ascii_instr
is_lui_auipc_jal <= dbg_insn_rs1
is_lui_auipc_jal <= dbg_insn_rs2
is_lui_auipc_jal >= dbg_rs1val
is_lui_auipc_jal < q_ascii_instr
is_lui_auipc_jal != q_insn_imm
is_lui_auipc_jal < q_insn_opcode
is_lui_auipc_jal <= q_insn_rs1
is_lui_auipc_jal < q_insn_rs2
is_lui_auipc_jal <= dbg_valid_insn
is_lui_auipc_jal < cached_ascii_instr
is_lui_auipc_jal < cached_insn_imm
is_lui_auipc_jal <= cached_insn_rs1
is_lui_auipc_jal < cached_insn_rs2
is_lui_auipc_jal < cpu_state
is_lui_auipc_jal < dbg_ascii_state
is_lui_auipc_jal != alu_out
is_lui_auipc_jal < alu_out_q
is_lui_auipc_jal != cpuregs_wrdata
is_lui_auipc_jal != cpuregs_rs1
is_lui_auipc_jal >= cpuregs_rs2
is_lui_auipc_jal < orig(count_cycle)
is_lui_auipc_jal < orig(count_instr)
is_lui_auipc_jal <= orig(reg_pc)
is_lui_auipc_jal != orig(reg_out)
is_lui_auipc_jal <= orig(dbg_insn_addr)
is_lui_auipc_jal < orig(decoded_imm_j)
is_lui_auipc_jal <= orig(is_lui_auipc_jal)
is_lui_auipc_jal <= orig(new_ascii_instr)
is_lui_auipc_jal < orig(cpu_state)
is_lui_auipc_jal < orig(dbg_ascii_state)
is_lui_auipc_jal >= orig(cpuregs_rs2)
is_lb_lh_lw_lbu_lhu != new_ascii_instr
is_lb_lh_lw_lbu_lhu < dbg_ascii_instr
is_lb_lh_lw_lbu_lhu <= dbg_insn_rs1
is_lb_lh_lw_lbu_lhu >= dbg_rs1val
is_lb_lh_lw_lbu_lhu < q_ascii_instr
is_lb_lh_lw_lbu_lhu <= q_insn_imm
is_lb_lh_lw_lbu_lhu < q_insn_opcode
is_lb_lh_lw_lbu_lhu <= q_insn_rs1
is_lb_lh_lw_lbu_lhu < q_insn_rs2
is_lb_lh_lw_lbu_lhu <= dbg_valid_insn
is_lb_lh_lw_lbu_lhu < cached_ascii_instr
is_lb_lh_lw_lbu_lhu < cached_insn_imm
is_lb_lh_lw_lbu_lhu <= cached_insn_rs1
is_lb_lh_lw_lbu_lhu < cached_insn_rs2
is_lb_lh_lw_lbu_lhu < cpu_state
is_lb_lh_lw_lbu_lhu < dbg_ascii_state
is_lb_lh_lw_lbu_lhu != alu_out
is_lb_lh_lw_lbu_lhu < alu_out_q
is_lb_lh_lw_lbu_lhu != cpuregs_wrdata
is_lb_lh_lw_lbu_lhu != cpuregs_rs1
is_lb_lh_lw_lbu_lhu >= cpuregs_rs2
is_lb_lh_lw_lbu_lhu < orig(count_cycle)
is_lb_lh_lw_lbu_lhu < orig(count_instr)
is_lb_lh_lw_lbu_lhu <= orig(reg_pc)
is_lb_lh_lw_lbu_lhu != orig(reg_out)
is_lb_lh_lw_lbu_lhu <= orig(dbg_insn_addr)
is_lb_lh_lw_lbu_lhu < orig(decoded_imm_j)
is_lb_lh_lw_lbu_lhu <= orig(is_lui_auipc_jal)
is_lb_lh_lw_lbu_lhu != orig(new_ascii_instr)
is_lb_lh_lw_lbu_lhu != orig(dbg_rs2val)
is_lb_lh_lw_lbu_lhu % orig(dbg_rs2val) == 0
is_lb_lh_lw_lbu_lhu != orig(dbg_rs1val_valid)
is_lb_lh_lw_lbu_lhu < orig(cpu_state)
is_lb_lh_lw_lbu_lhu < orig(dbg_ascii_state)
is_lb_lh_lw_lbu_lhu >= orig(cpuregs_rs2)
is_sb_sh_sw <= new_ascii_instr
is_sb_sh_sw < dbg_ascii_instr
is_sb_sh_sw > dbg_rs1val
is_sb_sh_sw < q_ascii_instr
is_sb_sh_sw <= q_insn_imm
is_sb_sh_sw < q_insn_opcode
is_sb_sh_sw != q_insn_rs1
is_sb_sh_sw < q_insn_rs2
is_sb_sh_sw <= dbg_valid_insn
is_sb_sh_sw < cached_ascii_instr
is_sb_sh_sw < cached_insn_imm
is_sb_sh_sw <= cached_insn_opcode
is_sb_sh_sw != cached_insn_rs1
is_sb_sh_sw < cached_insn_rs2
is_sb_sh_sw < cpu_state
is_sb_sh_sw < dbg_ascii_state
is_sb_sh_sw != alu_out
is_sb_sh_sw < alu_out_q
is_sb_sh_sw != cpuregs_wrdata
is_sb_sh_sw != cpuregs_rs1
is_sb_sh_sw >= cpuregs_rs2
is_sb_sh_sw < orig(count_cycle)
is_sb_sh_sw % orig(count_instr) == 0
is_sb_sh_sw <= orig(count_instr)
is_sb_sh_sw != orig(reg_pc)
is_sb_sh_sw != orig(reg_out)
is_sb_sh_sw <= orig(next_insn_opcode)
is_sb_sh_sw != orig(dbg_insn_addr)
is_sb_sh_sw < orig(decoded_imm_j)
is_sb_sh_sw != orig(is_lui_auipc_jal)
is_sb_sh_sw <= orig(new_ascii_instr)
is_sb_sh_sw != orig(dbg_rs1val)
is_sb_sh_sw != orig(dbg_rs2val)
is_sb_sh_sw % orig(dbg_rs2val) == 0
is_sb_sh_sw <= orig(dbg_rs1val_valid)
is_sb_sh_sw < orig(cpu_state)
is_sb_sh_sw < orig(dbg_ascii_state)
is_sb_sh_sw != orig(cpuregs_rs1)
is_sb_sh_sw >= orig(cpuregs_rs2)
is_lui_auipc_jal_jalr_addi_add_sub != new_ascii_instr
is_lui_auipc_jal_jalr_addi_add_sub < dbg_ascii_instr
is_lui_auipc_jal_jalr_addi_add_sub != dbg_insn_rs1
is_lui_auipc_jal_jalr_addi_add_sub <= dbg_insn_rs2
is_lui_auipc_jal_jalr_addi_add_sub > dbg_rs1val
is_lui_auipc_jal_jalr_addi_add_sub < q_ascii_instr
is_lui_auipc_jal_jalr_addi_add_sub != q_insn_imm
is_lui_auipc_jal_jalr_addi_add_sub < q_insn_opcode
is_lui_auipc_jal_jalr_addi_add_sub < q_insn_rs2
is_lui_auipc_jal_jalr_addi_add_sub <= dbg_valid_insn
is_lui_auipc_jal_jalr_addi_add_sub < cached_ascii_instr
is_lui_auipc_jal_jalr_addi_add_sub < cached_insn_imm
is_lui_auipc_jal_jalr_addi_add_sub < cached_insn_rs2
is_lui_auipc_jal_jalr_addi_add_sub < cpu_state
is_lui_auipc_jal_jalr_addi_add_sub < dbg_ascii_state
is_lui_auipc_jal_jalr_addi_add_sub != alu_out
is_lui_auipc_jal_jalr_addi_add_sub < alu_out_q
is_lui_auipc_jal_jalr_addi_add_sub != cpuregs_wrdata
is_lui_auipc_jal_jalr_addi_add_sub != cpuregs_rs1
is_lui_auipc_jal_jalr_addi_add_sub >= cpuregs_rs2
is_lui_auipc_jal_jalr_addi_add_sub < orig(count_cycle)
is_lui_auipc_jal_jalr_addi_add_sub <= orig(count_instr)
is_lui_auipc_jal_jalr_addi_add_sub != orig(reg_pc)
is_lui_auipc_jal_jalr_addi_add_sub != orig(reg_out)
is_lui_auipc_jal_jalr_addi_add_sub < orig(decoded_imm_j)
is_lui_auipc_jal_jalr_addi_add_sub <= orig(new_ascii_instr)
is_lui_auipc_jal_jalr_addi_add_sub < orig(cpu_state)
is_lui_auipc_jal_jalr_addi_add_sub < orig(dbg_ascii_state)
is_lui_auipc_jal_jalr_addi_add_sub != orig(cpuregs_rs1)
is_lui_auipc_jal_jalr_addi_add_sub >= orig(cpuregs_rs2)
new_ascii_instr % dbg_ascii_instr == 0
new_ascii_instr <= dbg_ascii_instr
new_ascii_instr != dbg_insn_rs1
new_ascii_instr != dbg_insn_rs2
new_ascii_instr >= dbg_insn_rd
new_ascii_instr > dbg_rs1val
new_ascii_instr != q_insn_imm
new_ascii_instr != q_insn_opcode
new_ascii_instr != q_insn_rs1
new_ascii_instr != q_insn_rs2
new_ascii_instr != dbg_valid_insn
new_ascii_instr <= cached_ascii_instr
new_ascii_instr != cached_insn_imm
new_ascii_instr != cached_insn_rs1
new_ascii_instr != cached_insn_rs2
new_ascii_instr != cpu_state
new_ascii_instr < dbg_ascii_state
new_ascii_instr != alu_out
new_ascii_instr != alu_out_q
new_ascii_instr > cpuregs_wrdata
new_ascii_instr != cpuregs_rs1
new_ascii_instr >= cpuregs_rs2
new_ascii_instr != orig(count_cycle)
new_ascii_instr != orig(count_instr)
new_ascii_instr != orig(reg_pc)
new_ascii_instr > orig(reg_out)
new_ascii_instr != orig(dbg_insn_addr)
new_ascii_instr != orig(decoded_imm_j)
new_ascii_instr != orig(is_lui_auipc_jal)
new_ascii_instr > orig(dbg_rs1val)
new_ascii_instr > orig(dbg_rs2val)
new_ascii_instr >= orig(dbg_rs1val_valid)
new_ascii_instr != orig(cpu_state)
new_ascii_instr < orig(dbg_ascii_state)
new_ascii_instr > orig(cpuregs_rs1)
new_ascii_instr > orig(cpuregs_rs2)
dbg_ascii_instr > dbg_insn_rs1
dbg_ascii_instr > dbg_insn_rs2
dbg_ascii_instr > dbg_insn_rd
dbg_ascii_instr > dbg_rs1val
dbg_ascii_instr != q_insn_imm
dbg_ascii_instr != q_insn_opcode
dbg_ascii_instr > q_insn_rs1
dbg_ascii_instr > q_insn_rs2
dbg_ascii_instr > dbg_valid_insn
dbg_ascii_instr <= cached_ascii_instr
dbg_ascii_instr != cached_insn_imm
dbg_ascii_instr != cached_insn_opcode
dbg_ascii_instr > cached_insn_rs1
dbg_ascii_instr > cached_insn_rs2
dbg_ascii_instr > cpu_state
dbg_ascii_instr < dbg_ascii_state
dbg_ascii_instr > alu_out
dbg_ascii_instr > alu_out_q
dbg_ascii_instr != alu_shl
dbg_ascii_instr > alu_shr
dbg_ascii_instr > cpuregs_wrdata
dbg_ascii_instr > cpuregs_rs1
dbg_ascii_instr > cpuregs_rs2
dbg_ascii_instr > orig(count_cycle)
dbg_ascii_instr > orig(count_instr)
dbg_ascii_instr > orig(reg_pc)
dbg_ascii_instr > orig(reg_out)
dbg_ascii_instr != orig(next_insn_opcode)
dbg_ascii_instr > orig(dbg_insn_addr)
dbg_ascii_instr != orig(decoded_imm_j)
dbg_ascii_instr > orig(is_lui_auipc_jal)
dbg_ascii_instr > orig(dbg_rs1val)
dbg_ascii_instr > orig(dbg_rs2val)
dbg_ascii_instr > orig(dbg_rs1val_valid)
dbg_ascii_instr > orig(cpu_state)
dbg_ascii_instr < orig(dbg_ascii_state)
dbg_ascii_instr > orig(cpuregs_rs1)
dbg_ascii_instr > orig(cpuregs_rs2)
dbg_insn_rs1 != dbg_insn_rs2
dbg_insn_rs1 != dbg_insn_rd
dbg_insn_rs1 >= dbg_rs1val
dbg_insn_rs1 < q_ascii_instr
dbg_insn_rs1 != q_insn_imm
dbg_insn_rs1 < q_insn_opcode
dbg_insn_rs1 != q_insn_rs2
dbg_insn_rs1 < cached_ascii_instr
dbg_insn_rs1 < cached_insn_imm
dbg_insn_rs1 != cached_insn_rs2
dbg_insn_rs1 < cpu_state
dbg_insn_rs1 < dbg_ascii_state
dbg_insn_rs1 != alu_out
dbg_insn_rs1 < alu_out_q
dbg_insn_rs1 > cpuregs_wrdata
dbg_insn_rs1 != cpuregs_rs1
dbg_insn_rs1 >= cpuregs_rs2
dbg_insn_rs1 < orig(count_cycle)
dbg_insn_rs1 != orig(reg_out)
dbg_insn_rs1 % orig(reg_out) == 0
dbg_insn_rs1 < orig(decoded_imm_j)
dbg_insn_rs1 >= orig(is_lui_auipc_jal)
dbg_insn_rs1 != orig(new_ascii_instr)
dbg_insn_rs1 < orig(cpu_state)
dbg_insn_rs1 < orig(dbg_ascii_state)
dbg_insn_rs1 > orig(cpuregs_rs2)
dbg_insn_rs2 > dbg_rs1val
dbg_insn_rs2 < q_ascii_instr
dbg_insn_rs2 != q_insn_imm
dbg_insn_rs2 < q_insn_opcode
dbg_insn_rs2 != dbg_valid_insn
dbg_insn_rs2 < cached_ascii_instr
dbg_insn_rs2 < cached_insn_imm
dbg_insn_rs2 % cached_insn_rs2 == 0
dbg_insn_rs2 <= cached_insn_rs2
dbg_insn_rs2 < cpu_state
dbg_insn_rs2 < dbg_ascii_state
dbg_insn_rs2 != alu_out
dbg_insn_rs2 < alu_out_q
dbg_insn_rs2 != cpuregs_wrdata
dbg_insn_rs2 != cpuregs_rs1
dbg_insn_rs2 >= cpuregs_rs2
dbg_insn_rs2 != orig(count_cycle)
dbg_insn_rs2 != orig(reg_pc)
dbg_insn_rs2 != orig(reg_out)
dbg_insn_rs2 < orig(decoded_imm_j)
dbg_insn_rs2 <= orig(new_ascii_instr)
dbg_insn_rs2 < orig(cpu_state)
dbg_insn_rs2 < orig(dbg_ascii_state)
dbg_insn_rs2 != orig(cpuregs_rs1)
dbg_insn_rs2 >= orig(cpuregs_rs2)
dbg_insn_rd > dbg_rs1val
dbg_insn_rd < q_ascii_instr
dbg_insn_rd <= q_insn_imm
dbg_insn_rd < q_insn_opcode
dbg_insn_rd < q_insn_rs2
dbg_insn_rd < cached_ascii_instr
dbg_insn_rd < cached_insn_imm
dbg_insn_rd < cached_insn_rs2
dbg_insn_rd < cpu_state
dbg_insn_rd < dbg_ascii_state
dbg_insn_rd != alu_out
dbg_insn_rd < alu_out_q
dbg_insn_rd != cpuregs_wrdata
dbg_insn_rd % cpuregs_wrdata == 0
dbg_insn_rd != cpuregs_rs1
dbg_insn_rd >= cpuregs_rs2
dbg_insn_rd < orig(count_cycle)
dbg_insn_rd <= orig(count_instr)
dbg_insn_rd != orig(reg_pc)
dbg_insn_rd != orig(reg_out)
dbg_insn_rd <= orig(next_insn_opcode)
dbg_insn_rd < orig(decoded_imm_j)
dbg_insn_rd != orig(new_ascii_instr)
dbg_insn_rd != orig(dbg_rs2val)
dbg_insn_rd % orig(dbg_rs2val) == 0
dbg_insn_rd < orig(cpu_state)
dbg_insn_rd < orig(dbg_ascii_state)
dbg_insn_rd != orig(cpuregs_rs1)
dbg_insn_rd >= orig(cpuregs_rs2)
dbg_rs1val < q_ascii_instr
dbg_rs1val < q_insn_imm
dbg_rs1val < q_insn_opcode
dbg_rs1val <= q_insn_rs1
dbg_rs1val < q_insn_rs2
dbg_rs1val < dbg_valid_insn
dbg_rs1val < cached_ascii_instr
dbg_rs1val < cached_insn_imm
dbg_rs1val < cached_insn_opcode
dbg_rs1val <= cached_insn_rs1
dbg_rs1val < cached_insn_rs2
dbg_rs1val < cpu_state
dbg_rs1val < dbg_ascii_state
dbg_rs1val <= alu_out
dbg_rs1val < alu_out_q
dbg_rs1val <= alu_shl
dbg_rs1val <= alu_shr
dbg_rs1val <= cpuregs_rs1
dbg_rs1val <= cpuregs_rs2
dbg_rs1val < orig(count_cycle)
dbg_rs1val < orig(count_instr)
dbg_rs1val <= orig(reg_pc)
dbg_rs1val <= orig(reg_out)
dbg_rs1val < orig(next_insn_opcode)
dbg_rs1val <= orig(dbg_insn_addr)
dbg_rs1val < orig(decoded_imm_j)
dbg_rs1val <= orig(is_lui_auipc_jal)
dbg_rs1val < orig(new_ascii_instr)
dbg_rs1val <= orig(dbg_rs1val)
dbg_rs1val < orig(dbg_rs1val_valid)
dbg_rs1val < orig(cpu_state)
dbg_rs1val < orig(dbg_ascii_state)
dbg_rs1val <= orig(cpuregs_rs1)
q_ascii_instr != q_insn_imm
q_ascii_instr != q_insn_opcode
q_ascii_instr > q_insn_rs1
q_ascii_instr > q_insn_rs2
q_ascii_instr > dbg_valid_insn
q_ascii_instr <= cached_ascii_instr
q_ascii_instr != cached_insn_imm
q_ascii_instr != cached_insn_opcode
q_ascii_instr > cached_insn_rs1
q_ascii_instr > cached_insn_rs2
q_ascii_instr > cpu_state
q_ascii_instr < dbg_ascii_state
q_ascii_instr > alu_out
q_ascii_instr > alu_out_q
q_ascii_instr != alu_shl
q_ascii_instr > alu_shr
q_ascii_instr > cpuregs_wrdata
q_ascii_instr > cpuregs_rs1
q_ascii_instr > cpuregs_rs2
q_ascii_instr > orig(count_cycle)
q_ascii_instr > orig(count_instr)
q_ascii_instr > orig(reg_pc)
q_ascii_instr > orig(reg_out)
q_ascii_instr > orig(next_insn_opcode)
q_ascii_instr > orig(dbg_insn_addr)
q_ascii_instr != orig(decoded_imm_j)
q_ascii_instr > orig(is_lui_auipc_jal)
q_ascii_instr > orig(dbg_rs1val)
q_ascii_instr > orig(dbg_rs2val)
q_ascii_instr > orig(dbg_rs1val_valid)
q_ascii_instr > orig(cpu_state)
q_ascii_instr < orig(dbg_ascii_state)
q_ascii_instr > orig(cpuregs_rs1)
q_ascii_instr > orig(cpuregs_rs2)
q_insn_imm != q_insn_opcode
q_insn_imm != q_insn_rs1
q_insn_imm != q_insn_rs2
q_insn_imm != dbg_valid_insn
q_insn_imm != cached_ascii_instr
q_insn_imm % cached_insn_imm == 0
q_insn_imm <= cached_insn_imm
q_insn_imm != cached_insn_opcode
q_insn_imm != cached_insn_rs1
q_insn_imm != cached_insn_rs2
q_insn_imm != cpu_state
q_insn_imm < dbg_ascii_state
q_insn_imm != cpuregs_wrdata
q_insn_imm % cpuregs_wrdata == 0
q_insn_imm >= cpuregs_rs1
q_insn_imm > cpuregs_rs2
q_insn_imm != orig(count_cycle)
q_insn_imm != orig(count_instr)
q_insn_imm != orig(reg_pc)
q_insn_imm % orig(reg_out) == 0
q_insn_imm >= orig(reg_out)
q_insn_imm != orig(dbg_insn_addr)
q_insn_imm != orig(is_lui_auipc_jal)
q_insn_imm != orig(new_ascii_instr)
q_insn_imm != orig(dbg_rs1val)
q_insn_imm != orig(dbg_rs2val)
q_insn_imm % orig(dbg_rs2val) == 0
q_insn_imm != orig(dbg_rs1val_valid)
q_insn_imm != orig(cpu_state)
q_insn_imm < orig(dbg_ascii_state)
q_insn_imm >= orig(cpuregs_rs1)
q_insn_imm > orig(cpuregs_rs2)
q_insn_opcode > q_insn_rs1
q_insn_opcode > q_insn_rs2
q_insn_opcode > dbg_valid_insn
q_insn_opcode != cached_ascii_instr
q_insn_opcode != cached_insn_imm
q_insn_opcode > cached_insn_rs1
q_insn_opcode > cached_insn_rs2
q_insn_opcode > cpu_state
q_insn_opcode < dbg_ascii_state
q_insn_opcode > alu_out
q_insn_opcode > alu_out_q
q_insn_opcode != alu_shl
q_insn_opcode > alu_shr
q_insn_opcode > cpuregs_wrdata
q_insn_opcode > cpuregs_rs1
q_insn_opcode > cpuregs_rs2
q_insn_opcode > orig(count_cycle)
q_insn_opcode > orig(count_instr)
q_insn_opcode > orig(reg_pc)
q_insn_opcode > orig(reg_out)
q_insn_opcode >= orig(next_insn_opcode)
q_insn_opcode > orig(dbg_insn_addr)
q_insn_opcode != orig(decoded_imm_j)
q_insn_opcode > orig(is_lui_auipc_jal)
q_insn_opcode != orig(new_ascii_instr)
q_insn_opcode > orig(dbg_rs1val)
q_insn_opcode > orig(dbg_rs2val)
q_insn_opcode > orig(dbg_rs1val_valid)
q_insn_opcode > orig(cpu_state)
q_insn_opcode < orig(dbg_ascii_state)
q_insn_opcode > orig(cpuregs_rs1)
q_insn_opcode > orig(cpuregs_rs2)
q_insn_rs1 != q_insn_rs2
q_insn_rs1 < cached_ascii_instr
q_insn_rs1 < cached_insn_imm
q_insn_rs1 <= cached_insn_rs1
q_insn_rs1 != cached_insn_rs2
q_insn_rs1 < cpu_state
q_insn_rs1 < dbg_ascii_state
q_insn_rs1 != alu_out
q_insn_rs1 < alu_out_q
q_insn_rs1 != cpuregs_wrdata
q_insn_rs1 != cpuregs_rs1
q_insn_rs1 >= cpuregs_rs2
q_insn_rs1 < orig(count_cycle)
q_insn_rs1 != orig(count_instr)
q_insn_rs1 != orig(reg_out)
q_insn_rs1 % orig(reg_out) == 0
q_insn_rs1 < orig(decoded_imm_j)
q_insn_rs1 >= orig(is_lui_auipc_jal)
q_insn_rs1 != orig(new_ascii_instr)
q_insn_rs1 < orig(cpu_state)
q_insn_rs1 < orig(dbg_ascii_state)
q_insn_rs1 >= orig(cpuregs_rs2)
q_insn_rs2 > dbg_valid_insn
q_insn_rs2 < cached_ascii_instr
q_insn_rs2 < cached_insn_imm
q_insn_rs2 != cached_insn_rs1
q_insn_rs2 <= cached_insn_rs2
q_insn_rs2 < cpu_state
q_insn_rs2 < dbg_ascii_state
q_insn_rs2 != alu_out
q_insn_rs2 < alu_out_q
q_insn_rs2 != alu_shl
q_insn_rs2 != alu_shr
q_insn_rs2 != cpuregs_wrdata
q_insn_rs2 != cpuregs_rs1
q_insn_rs2 > cpuregs_rs2
q_insn_rs2 != orig(count_cycle)
q_insn_rs2 != orig(count_instr)
q_insn_rs2 != orig(reg_pc)
q_insn_rs2 != orig(reg_out)
q_insn_rs2 != orig(dbg_insn_addr)
q_insn_rs2 < orig(decoded_imm_j)
q_insn_rs2 > orig(is_lui_auipc_jal)
q_insn_rs2 != orig(new_ascii_instr)
q_insn_rs2 != orig(dbg_rs1val)
q_insn_rs2 > orig(dbg_rs1val_valid)
q_insn_rs2 < orig(cpu_state)
q_insn_rs2 < orig(dbg_ascii_state)
q_insn_rs2 != orig(cpuregs_rs1)
q_insn_rs2 > orig(cpuregs_rs2)
dbg_valid_insn < cached_ascii_instr
dbg_valid_insn < cached_insn_imm
dbg_valid_insn != cached_insn_rs1
dbg_valid_insn < cached_insn_rs2
dbg_valid_insn < cpu_state
dbg_valid_insn < dbg_ascii_state
dbg_valid_insn != alu_out
dbg_valid_insn < alu_out_q
dbg_valid_insn != alu_shl
dbg_valid_insn != cpuregs_wrdata
dbg_valid_insn != cpuregs_rs1
dbg_valid_insn > cpuregs_rs2
dbg_valid_insn < orig(count_cycle)
dbg_valid_insn <= orig(count_instr)
dbg_valid_insn != orig(reg_pc)
dbg_valid_insn != orig(reg_out)
dbg_valid_insn != orig(dbg_insn_addr)
dbg_valid_insn < orig(decoded_imm_j)
dbg_valid_insn >= orig(is_lui_auipc_jal)
dbg_valid_insn != orig(new_ascii_instr)
dbg_valid_insn != orig(dbg_rs1val)
dbg_valid_insn >= orig(dbg_rs1val_valid)
dbg_valid_insn != orig(cpuregs_rs1)
dbg_valid_insn > orig(cpuregs_rs2)
cached_ascii_instr != cached_insn_imm
cached_ascii_instr != cached_insn_opcode
cached_ascii_instr > cached_insn_rs1
cached_ascii_instr > cached_insn_rs2
cached_ascii_instr > cpu_state
cached_ascii_instr < dbg_ascii_state
cached_ascii_instr > alu_out
cached_ascii_instr > alu_out_q
cached_ascii_instr != alu_shl
cached_ascii_instr > alu_shr
cached_ascii_instr > cpuregs_wrdata
cached_ascii_instr > cpuregs_rs1
cached_ascii_instr > cpuregs_rs2
cached_ascii_instr > orig(count_cycle)
cached_ascii_instr > orig(count_instr)
cached_ascii_instr > orig(reg_pc)
cached_ascii_instr > orig(reg_out)
cached_ascii_instr > orig(next_insn_opcode)
cached_ascii_instr > orig(dbg_insn_addr)
cached_ascii_instr != orig(decoded_imm_j)
cached_ascii_instr > orig(is_lui_auipc_jal)
cached_ascii_instr >= orig(new_ascii_instr)
orig(new_ascii_instr) % cached_ascii_instr == 0
cached_ascii_instr > orig(dbg_rs1val)
cached_ascii_instr > orig(dbg_rs2val)
cached_ascii_instr > orig(dbg_rs1val_valid)
cached_ascii_instr > orig(cpu_state)
cached_ascii_instr < orig(dbg_ascii_state)
cached_ascii_instr > orig(cpuregs_rs1)
cached_ascii_instr > orig(cpuregs_rs2)
cached_insn_imm != cached_insn_opcode
cached_insn_imm > cached_insn_rs1
cached_insn_imm > cached_insn_rs2
cached_insn_imm > cpu_state
cached_insn_imm < dbg_ascii_state
cached_insn_imm >= alu_out
cached_insn_imm >= alu_out_q
cached_insn_imm > alu_shl
cached_insn_imm > alu_shr
cached_insn_imm > cpuregs_wrdata
cached_insn_imm >= cpuregs_rs1
cached_insn_imm > cpuregs_rs2
cached_insn_imm > orig(count_cycle)
cached_insn_imm > orig(count_instr)
cached_insn_imm > orig(reg_pc)
cached_insn_imm >= orig(reg_out)
cached_insn_imm != orig(next_insn_opcode)
cached_insn_imm > orig(dbg_insn_addr)
cached_insn_imm > orig(is_lui_auipc_jal)
cached_insn_imm != orig(new_ascii_instr)
cached_insn_imm > orig(dbg_rs1val)
cached_insn_imm > orig(dbg_rs2val)
cached_insn_imm > orig(dbg_rs1val_valid)
cached_insn_imm > orig(cpu_state)
cached_insn_imm < orig(dbg_ascii_state)
cached_insn_imm >= orig(cpuregs_rs1)
cached_insn_imm > orig(cpuregs_rs2)
cached_insn_opcode < dbg_ascii_state
cached_insn_opcode != alu_out
cached_insn_opcode != alu_out_q
cached_insn_opcode != alu_shl
cached_insn_opcode != alu_shr
cached_insn_opcode > cpuregs_wrdata
cached_insn_opcode != cpuregs_rs1
cached_insn_opcode >= cpuregs_rs2
cached_insn_opcode != orig(count_cycle)
cached_insn_opcode != orig(count_instr)
cached_insn_opcode > orig(reg_out)
cached_insn_opcode != orig(decoded_imm_j)
cached_insn_opcode > orig(dbg_rs1val)
cached_insn_opcode > orig(dbg_rs2val)
cached_insn_opcode >= orig(dbg_rs1val_valid)
cached_insn_opcode != orig(cpu_state)
cached_insn_opcode < orig(dbg_ascii_state)
cached_insn_opcode != orig(cpuregs_rs1)
cached_insn_opcode >= orig(cpuregs_rs2)
cached_insn_rs1 != cached_insn_rs2
cached_insn_rs1 < cpu_state
cached_insn_rs1 < dbg_ascii_state
cached_insn_rs1 != alu_out
cached_insn_rs1 < alu_out_q
cached_insn_rs1 > cpuregs_wrdata
cached_insn_rs1 != cpuregs_rs1
cached_insn_rs1 >= cpuregs_rs2
cached_insn_rs1 < orig(count_cycle)
cached_insn_rs1 != orig(count_instr)
cached_insn_rs1 != orig(reg_out)
cached_insn_rs1 >= orig(dbg_insn_addr)
cached_insn_rs1 < orig(decoded_imm_j)
cached_insn_rs1 >= orig(is_lui_auipc_jal)
cached_insn_rs1 != orig(new_ascii_instr)
cached_insn_rs1 != orig(dbg_rs1val_valid)
cached_insn_rs1 < orig(cpu_state)
cached_insn_rs1 < orig(dbg_ascii_state)
cached_insn_rs1 >= orig(cpuregs_rs2)
cached_insn_rs2 < cpu_state
cached_insn_rs2 < dbg_ascii_state
cached_insn_rs2 != alu_out
cached_insn_rs2 < alu_out_q
cached_insn_rs2 != alu_shl
cached_insn_rs2 != alu_shr
cached_insn_rs2 != cpuregs_wrdata
cached_insn_rs2 != cpuregs_rs1
cached_insn_rs2 > cpuregs_rs2
cached_insn_rs2 != orig(count_cycle)
cached_insn_rs2 > orig(reg_pc)
cached_insn_rs2 != orig(reg_out)
cached_insn_rs2 > orig(dbg_insn_addr)
cached_insn_rs2 < orig(decoded_imm_j)
cached_insn_rs2 > orig(is_lui_auipc_jal)
cached_insn_rs2 != orig(new_ascii_instr)
cached_insn_rs2 != orig(dbg_rs1val)
cached_insn_rs2 > orig(dbg_rs1val_valid)
cached_insn_rs2 < orig(cpu_state)
cached_insn_rs2 < orig(dbg_ascii_state)
cached_insn_rs2 != orig(cpuregs_rs1)
cached_insn_rs2 > orig(cpuregs_rs2)
cpu_state < dbg_ascii_state
cpu_state != alu_out
cpu_state < alu_out_q
cpu_state != alu_shl
cpu_state != alu_shr
cpu_state > cpuregs_wrdata
cpu_state != cpuregs_rs1
cpu_state > cpuregs_rs2
cpu_state != orig(count_cycle)
cpu_state != orig(count_instr)
cpu_state > orig(reg_pc)
cpu_state != orig(reg_out)
cpu_state != orig(next_insn_opcode)
cpu_state > orig(dbg_insn_addr)
cpu_state < orig(decoded_imm_j)
cpu_state > orig(is_lui_auipc_jal)
cpu_state != orig(new_ascii_instr)
cpu_state != orig(dbg_rs1val)
cpu_state > orig(dbg_rs2val)
cpu_state > orig(dbg_rs1val_valid)
cpu_state <= orig(cpu_state)
cpu_state < orig(dbg_ascii_state)
cpu_state != orig(cpuregs_rs1)
cpu_state > orig(cpuregs_rs2)
dbg_ascii_state > alu_out
dbg_ascii_state > alu_out_q
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
dbg_ascii_state > cpuregs_wrdata
dbg_ascii_state > cpuregs_rs1
dbg_ascii_state > cpuregs_rs2
dbg_ascii_state > orig(count_cycle)
dbg_ascii_state > orig(count_instr)
dbg_ascii_state > orig(reg_pc)
dbg_ascii_state > orig(reg_out)
dbg_ascii_state > orig(next_insn_opcode)
dbg_ascii_state > orig(dbg_insn_addr)
dbg_ascii_state > orig(decoded_imm_j)
dbg_ascii_state > orig(is_lui_auipc_jal)
dbg_ascii_state > orig(new_ascii_instr)
dbg_ascii_state > orig(dbg_rs1val)
dbg_ascii_state > orig(dbg_rs2val)
dbg_ascii_state > orig(dbg_rs1val_valid)
dbg_ascii_state > orig(cpu_state)
dbg_ascii_state >= orig(dbg_ascii_state)
dbg_ascii_state > orig(cpuregs_rs1)
dbg_ascii_state > orig(cpuregs_rs2)
alu_out <= alu_out_q
alu_out_q % alu_out == 0
alu_out != alu_shl
alu_out != alu_shr
alu_out >= cpuregs_wrdata
alu_out != cpuregs_rs2
alu_out != orig(count_cycle)
alu_out != orig(count_instr)
alu_out != orig(reg_pc)
alu_out % orig(reg_out) == 0
alu_out >= orig(reg_out)
alu_out != orig(next_insn_opcode)
alu_out != orig(dbg_insn_addr)
alu_out <= orig(decoded_imm_j)
alu_out != orig(is_lui_auipc_jal)
alu_out < orig(new_ascii_instr)
alu_out >= orig(dbg_rs2val)
alu_out != orig(dbg_rs1val_valid)
alu_out != orig(cpu_state)
alu_out < orig(dbg_ascii_state)
alu_out != orig(cpuregs_rs1)
alu_out != orig(cpuregs_rs2)
alu_out_q != alu_shl
alu_out_q > alu_shr
alu_out_q > cpuregs_wrdata
alu_out_q >= cpuregs_rs1
alu_out_q > cpuregs_rs2
alu_out_q > orig(count_cycle)
alu_out_q > orig(count_instr)
alu_out_q > orig(reg_pc)
alu_out_q % orig(reg_out) == 0
alu_out_q >= orig(reg_out)
alu_out_q != orig(next_insn_opcode)
alu_out_q > orig(dbg_insn_addr)
alu_out_q <= orig(decoded_imm_j)
alu_out_q > orig(is_lui_auipc_jal)
alu_out_q != orig(new_ascii_instr)
alu_out_q > orig(dbg_rs1val)
alu_out_q > orig(dbg_rs2val)
alu_out_q > orig(dbg_rs1val_valid)
alu_out_q > orig(cpu_state)
alu_out_q < orig(dbg_ascii_state)
alu_out_q >= orig(cpuregs_rs1)
alu_out_q > orig(cpuregs_rs2)
alu_shl >= alu_shr
alu_shl != cpuregs_wrdata
alu_shl >= cpuregs_rs2
alu_shl != orig(count_cycle)
alu_shl != orig(count_instr)
alu_shl != orig(reg_out)
alu_shl % orig(reg_out) == 0
alu_shl != orig(next_insn_opcode)
alu_shl != orig(decoded_imm_j)
alu_shl != orig(dbg_rs2val)
alu_shl != orig(cpu_state)
alu_shl < orig(dbg_ascii_state)
alu_shl >= orig(cpuregs_rs2)
alu_shr != cpuregs_wrdata
alu_shr >= cpuregs_rs2
alu_shr != orig(count_cycle)
alu_shr != orig(count_instr)
alu_shr != orig(reg_out)
alu_shr % orig(reg_out) == 0
alu_shr != orig(next_insn_opcode)
alu_shr < orig(decoded_imm_j)
alu_shr != orig(cpu_state)
alu_shr < orig(dbg_ascii_state)
alu_shr >= orig(cpuregs_rs2)
cpuregs_wrdata != cpuregs_rs1
cpuregs_wrdata != cpuregs_rs2
cpuregs_wrdata < orig(count_cycle)
cpuregs_wrdata != orig(count_instr)
cpuregs_wrdata != orig(reg_pc)
cpuregs_wrdata != orig(dbg_insn_addr)
cpuregs_wrdata < orig(decoded_imm_j)
cpuregs_wrdata != orig(is_lui_auipc_jal)
cpuregs_wrdata < orig(new_ascii_instr)
cpuregs_wrdata <= orig(dbg_rs1val)
cpuregs_wrdata != orig(dbg_rs1val_valid)
cpuregs_wrdata < orig(cpu_state)
cpuregs_wrdata < orig(dbg_ascii_state)
cpuregs_rs1 >= cpuregs_rs2
cpuregs_rs1 != orig(count_cycle)
cpuregs_rs1 != orig(count_instr)
cpuregs_rs1 != orig(reg_pc)
cpuregs_rs1 >= orig(reg_out)
cpuregs_rs1 != orig(next_insn_opcode)
cpuregs_rs1 != orig(dbg_insn_addr)
cpuregs_rs1 <= orig(decoded_imm_j)
cpuregs_rs1 != orig(is_lui_auipc_jal)
cpuregs_rs1 != orig(new_ascii_instr)
cpuregs_rs1 != orig(dbg_rs1val)
cpuregs_rs1 != orig(dbg_rs2val)
cpuregs_rs1 != orig(dbg_rs1val_valid)
cpuregs_rs1 != orig(cpu_state)
cpuregs_rs1 < orig(dbg_ascii_state)
cpuregs_rs1 >= orig(cpuregs_rs1)
cpuregs_rs1 >= orig(cpuregs_rs2)
cpuregs_rs2 < orig(count_cycle)
cpuregs_rs2 < orig(count_instr)
cpuregs_rs2 <= orig(reg_pc)
cpuregs_rs2 <= orig(next_insn_opcode)
cpuregs_rs2 <= orig(dbg_insn_addr)
cpuregs_rs2 < orig(decoded_imm_j)
cpuregs_rs2 <= orig(is_lui_auipc_jal)
cpuregs_rs2 <= orig(new_ascii_instr)
cpuregs_rs2 != orig(dbg_rs2val)
cpuregs_rs2 <= orig(dbg_rs1val_valid)
cpuregs_rs2 < orig(cpu_state)
cpuregs_rs2 < orig(dbg_ascii_state)
cpuregs_rs2 >= orig(cpuregs_rs2)
1.099520149208E12 * mem_instr + 1069547667 * mem_addr + 4 * cached_insn_opcode - 1.108076530544E12 == 0
1040399 * mem_instr - mem_la_wdata + 1019 * orig(dbg_rs1val) - 1039379 == 0
2.9972482208E10 * mem_instr + 1069547667 * reg_pc + 4 * cached_insn_opcode - 3.8528863544E10 == 0
1.45672236734E12 * mem_instr + 356515889 * reg_op1 + 340 * cached_insn_opcode - 1.82036857412E12 == 0
6.429859768E9 * mem_instr + 1069547667 * decoded_rd + 2 * cached_insn_opcode - 8.568955102E9 == 0
3.214929884E9 * mem_instr + 1069547667 * is_lb_lh_lw_lbu_lhu + cached_insn_opcode - 4.284477551E9 == 0
4.284477551E9 * mem_instr - 1069547667 * is_sb_sh_sw + cached_insn_opcode - 4.284477551E9 == 0
6.9782592791728046E18 * mem_instr - 1069547667 * q_ascii_instr + 1626997501 * cached_insn_opcode - 6.9708026538081116E18 == 0
1.00732374071E11 * mem_instr + 1069547667 * q_insn_rs1 + 31 * cached_insn_opcode - 1.33888351748E11 == 0
5.031274853E10 * mem_instr - 1069547667 * q_insn_rs2 + 7 * cached_insn_opcode - 2.7852247523E10 == 0
6.9708342685676001E18 * mem_instr - 1069547667 * cached_ascii_instr + 1626997501 * cached_insn_opcode - 6.9633776432029071E18 == 0
1.32818804081E11 * mem_instr + 31 * cached_insn_opcode + 1069547667 * cached_insn_rs1 - 1.65974781758E11 == 0
2.9991342857E10 * mem_instr + 7 * cached_insn_opcode - 1069547667 * cached_insn_rs2 - 7.53084185E9 == 0
8.1411360352E10 * mem_instr + 20 * cached_insn_opcode + 1069547667 * orig(dbg_insn_addr) - 1.02802313692E11 == 0
4.284477551E9 * mem_instr + cached_insn_opcode + 1069547667 * orig(is_lui_auipc_jal) - 5.354025218E9 == 0
1.087723690456E12 * mem_instr - cached_insn_opcode + 1069547667 * orig(dbg_rs1val) - 1.086654142789E12 == 0
3.214929884E9 * mem_instr + cached_insn_opcode - 1069547667 * orig(dbg_rs1val_valid) - 3.214929884E9 == 0
1.6043215005E10 * mem_addr - 1.099520149208E12 * mem_wstrb + 60 * cached_insn_opcode - 1.2834572004E11 == 0
3.746560276E9 * mem_addr - 1.37440018651E11 * reg_pc - 500 * cached_insn_opcode + 1.069547667E12 == 0
1.092541775505E12 * mem_addr - 2.74880037302E11 * reg_op1 - 258060 * cached_insn_opcode + 2.71637303844E14 == 0
1069547667 * mem_addr - 1.099520149208E12 * mem_do_rinst + 4 * cached_insn_opcode - 8.556381336E9 == 0
803732471 * mem_addr - 1.37440018651E11 * decoded_rd - 254 * cached_insn_opcode + 2.68450177534E11 == 0
1.6043215005E10 * mem_addr - 5.49760074604E11 * decoded_rs1 + 60 * cached_insn_opcode + 4.21414354564E11 == 0
2.2460501007E10 * mem_addr - 1.099520149208E12 * decoded_rs2 + 84 * cached_insn_opcode - 1.79684008056E11 == 0
803732471 * mem_addr - 2.74880037302E11 * is_lb_lh_lw_lbu_lhu - 254 * cached_insn_opcode + 2.68450177534E11 == 0
4.284477551E9 * mem_addr + 1.099520149208E12 * is_sb_sh_sw - 1012 * cached_insn_opcode - 3.4275820408E10 == 0
158449 * mem_addr - 23 * new_ascii_instr + 3.7581926707E10 * dbg_rs1val + 3.7580659115E10 == 0
1.00732374071E11 * mem_addr - 1.099520149208E12 * q_insn_rs1 - 31492 * cached_insn_opcode + 3.327926563288E13 == 0
2.5156374265E10 * mem_addr + 5.49760074604E11 * q_insn_rs2 - 3504 * cached_insn_opcode - 1.1746212560804E13 == 0
1.32818804081E11 * mem_addr - 31372 * cached_insn_opcode - 1.099520149208E12 * cached_insn_rs1 + 3.30225741928E13 == 0
2.9991342857E10 * mem_addr - 7084 * cached_insn_opcode + 1.099520149208E12 * cached_insn_rs2 - 2.3329853876224E13 == 0
2.6738691675E10 * mem_addr + 100 * cached_insn_opcode - 1.099520149208E12 * cpuregs_wrdata - 1.313429682608E12 == 0
1.092008168007E12 * mem_addr + 4084 * cached_insn_opcode + 1.099520149208E12 * cpuregs_rs1 - 1.130246617536216E15 == 0
1069547667 * mem_addr + 4 * cached_insn_opcode + 1.099520149208E12 * cpuregs_rs2 - 8.556381336E9 == 0
1.0176420044E10 * mem_addr - 2532 * cached_insn_opcode - 1.37440018651E11 * orig(dbg_insn_addr) + 2.667389012668E12 == 0
4.284477551E9 * mem_addr - 1012 * cached_insn_opcode - 1.099520149208E12 * orig(is_lui_auipc_jal) + 1.0652443288E12 == 0
1.0458881639E10 * mem_addr + 49 * cached_insn_opcode - 1.0572309127E10 * orig(dbg_rs1val) - 9.4243362239E10 == 0
803732471 * mem_addr - 254 * cached_insn_opcode + 2.74880037302E11 * orig(dbg_rs1val_valid) - 6.429859768E9 == 0
1020 * mem_wdata - 1020 * mem_la_wdata - 1021 * reg_op1 + 1041420 == 0
mem_wdata - mem_la_wdata + 1021 * is_sb_sh_sw == 0
1626997501 * mem_wdata - 1626997501 * mem_la_wdata + 1021 * cached_ascii_instr - 7.118162876E9 == 0
4.294966264E9 * mem_wdata - 4.294966264E9 * mem_la_wdata - 1021 * cached_insn_imm + 4.385161596964E12 == 0
31 * mem_wdata - 31 * mem_la_wdata - 1021 * cached_insn_rs1 + 31651 == 0
7 * mem_wdata - 7 * mem_la_wdata + 1021 * cached_insn_rs2 - 21441 == 0
1020 * mem_wdata + mem_la_wdata - 1021 * alu_out_q + 1041420 == 0
mem_wdata - mem_la_wdata - 1021 * orig(is_lui_auipc_jal) + 1021 == 0
1020 * mem_wdata - reg_op1 - 1020 * alu_out_q + 1041420 == 0
mem_wdata + is_sb_sh_sw - alu_out_q + 1020 == 0
mem_wdata + 1069547669 * dbg_rs1val - orig(next_insn_opcode) + 1069547668 == 0
1633939698 * mem_wdata + q_ascii_instr - 1633939698 * alu_out_q + 1.666618462401E12 == 0
1626997501 * mem_wdata + cached_ascii_instr - 1626997501 * alu_out_q + 1.659530479264E12 == 0
4.294966264E9 * mem_wdata - cached_insn_imm - 4.294966264E9 * alu_out_q + 4.385160556564E12 == 0
31 * mem_wdata - cached_insn_rs1 - 31 * alu_out_q + 31651 == 0
7 * mem_wdata + cached_insn_rs2 - 7 * alu_out_q + 7119 == 0
mem_wdata - alu_out_q - orig(is_lui_auipc_jal) + 1021 == 0
1633969257 * mem_wdata - 1633969257 * alu_out_q + orig(new_ascii_instr) + 1.66664864214E12 == 0
2.9972482208E10 * mem_wstrb - 1.6043215005E10 * reg_pc - 60 * cached_insn_opcode + 1.2834572004E11 == 0
2.91344473468E11 * mem_wstrb - 1069547667 * reg_op1 - 1020 * cached_insn_opcode + 1.09093862034E12 == 0
6.429859768E9 * mem_wstrb - 1.6043215005E10 * decoded_rd - 30 * cached_insn_opcode + 3.208643001E10 == 0
3.214929884E9 * mem_wstrb - 1.6043215005E10 * is_lb_lh_lw_lbu_lhu - 15 * cached_insn_opcode + 1.6043215005E10 == 0
6971756 * mem_wstrb - 15 * new_ascii_instr + 2.4509538855E10 * dbg_rs1val + 2.4509538855E10 == 0
1.39565185583456102E18 * mem_wstrb + 3.208643001E9 * q_ascii_instr - 4.880992503E9 * cached_insn_opcode - 2.2369876094079756E16 == 0
1.00732374071E11 * mem_wstrb - 1.6043215005E10 * q_insn_rs1 - 465 * cached_insn_opcode + 4.97339665155E11 == 0
1.0062549706E10 * mem_wstrb + 3.208643001E9 * q_insn_rs2 - 21 * cached_insn_opcode - 6.7381503021E10 == 0
6.9708342685676001E18 * mem_wstrb + 1.6043215005E10 * cached_ascii_instr - 2.4404962515E10 * cached_insn_opcode - 1.11849380470398784E17 == 0
1.32818804081E11 * mem_wstrb - 465 * cached_insn_opcode - 1.6043215005E10 * cached_insn_rs1 + 4.97339665155E11 == 0
2.9991342857E10 * mem_wstrb - 105 * cached_insn_opcode + 1.6043215005E10 * cached_insn_rs2 - 3.36907515105E11 == 0
8.1411360352E10 * mem_wstrb - 300 * cached_insn_opcode - 1.6043215005E10 * orig(dbg_insn_addr) + 3.208643001E11 == 0
4.284477551E9 * mem_wstrb - 15 * cached_insn_opcode - 1.6043215005E10 * orig(is_lui_auipc_jal) + 1.6043215005E10 == 0
1.087723690456E12 * mem_wstrb + 15 * cached_insn_opcode - 1.6043215005E10 * orig(dbg_rs1val) - 1.6043215005E10 == 0
4 * mem_la_wdata - count_instr - 583 * cached_insn_rs2 + 12245 == 0
mem_la_wdata + reg_op1 - alu_out_q == 0
mem_la_wdata - 1020 * is_sb_sh_sw - alu_out_q + 1020 == 0
40995 * mem_la_wdata + 1.089827298768E12 * dbg_rs1val - 1019 * orig(next_insn_opcode) + 1.089827257773E12 == 0
1020 * mem_la_wdata - 1019 * q_insn_imm - 4.376571662396E12 * orig(dbg_rs1val_valid) + 4.376571661376E12 == 0
1626997501 * mem_la_wdata - 1020 * cached_ascii_instr - 1626997501 * alu_out_q + 1.66664864214E12 == 0
1073741566 * mem_la_wdata + 255 * cached_insn_imm - 1073741566 * alu_out_q - 260100 == 0
31 * mem_la_wdata + 1020 * cached_insn_rs1 - 31 * alu_out_q == 0
7 * mem_la_wdata - 1020 * cached_insn_rs2 - 7 * alu_out_q + 28560 == 0
mem_la_wdata - alu_out_q + 1020 * orig(is_lui_auipc_jal) == 0
mem_la_wdata - 1019 * cpuregs_rs1 - 1019 * orig(dbg_rs1val) + 1038360 == 0
4 * count_instr - reg_next_pc - 16 * alu_out_q + 16320 == 0
count_instr + decoder_trigger - orig(count_instr) - 1 == 0
count_instr - decoder_trigger_q - orig(count_instr) == 0
count_instr + 4.278190673E9 * dbg_rs1val - 4 * orig(next_insn_opcode) + 4.278190667E9 == 0
1.092541775505E12 * reg_pc - 7.493120552E9 * reg_op1 - 3060 * cached_insn_opcode - 1.097351241E12 == 0
292789 * reg_pc + 8 * next_insn_opcode + 167564 * q_insn_rs2 - 6190908 == 0
1069547667 * reg_pc - 2.9972482208E10 * mem_do_rinst + 4 * cached_insn_opcode - 8.556381336E9 == 0
803732471 * reg_pc - 3.746560276E9 * decoded_rd - 4 * cached_insn_opcode + 1063260784 == 0
1.6043215005E10 * reg_pc - 1.4986241104E10 * decoded_rs1 + 60 * cached_insn_opcode - 1.13359478936E11 == 0
2.2460501007E10 * reg_pc - 2.9972482208E10 * decoded_rs2 + 84 * cached_insn_opcode - 1.79684008056E11 == 0
803732471 * reg_pc - 7.493120552E9 * is_lb_lh_lw_lbu_lhu - 4 * cached_insn_opcode + 1063260784 == 0
4.284477551E9 * reg_pc + 2.9972482208E10 * is_sb_sh_sw - 12 * cached_insn_opcode - 3.4275820408E10 == 0
1.00732374071E11 * reg_pc - 2.9972482208E10 * q_insn_rs1 - 492 * cached_insn_opcode + 1.2328795588E11 == 0
2.5156374265E10 * reg_pc + 1.4986241104E10 * q_insn_rs2 - 4 * cached_insn_opcode - 5.15962057304E11 == 0
1.32818804081E11 * reg_pc - 372 * cached_insn_opcode - 2.9972482208E10 * cached_insn_rs1 - 1.334034842E11 == 0
2.9991342857E10 * reg_pc - 84 * cached_insn_opcode + 2.9972482208E10 * cached_insn_rs2 - 8.69352869224E11 == 0
2.6738691675E10 * reg_pc + 100 * cached_insn_opcode - 2.9972482208E10 * cpuregs_wrdata - 2.43882015608E11 == 0
1.092008168007E12 * reg_pc + 4084 * cached_insn_opcode + 2.9972482208E10 * cpuregs_rs1 - 3.9307997196216E13 == 0
1069547667 * reg_pc + 4 * cached_insn_opcode + 2.9972482208E10 * cpuregs_rs2 - 8.556381336E9 == 0
2.544105011E9 * reg_pc - 8 * cached_insn_opcode - 936640069 * orig(dbg_insn_addr) - 1620038708 == 0
4.284477551E9 * reg_pc - 12 * cached_insn_opcode - 2.9972482208E10 * orig(is_lui_auipc_jal) - 4.3033382E9 == 0
1.35965461307E11 * reg_pc + 512 * cached_insn_opcode - 3.746560276E9 * orig(dbg_rs1val) - 1.091470250732E12 == 0
803732471 * reg_pc - 4 * cached_insn_opcode + 7.493120552E9 * orig(dbg_rs1val_valid) - 6.429859768E9 == 0
1069547667 * reg_next_pc - 4.278355544E9 * instr_lw + 4 * orig(next_insn_opcode) - 8.556381336E9 == 0
1073741821 * reg_next_pc + 4.294967284E9 * decoder_trigger - q_insn_imm - 8.589934568E9 == 0
1073741821 * reg_next_pc - 4.294967284E9 * decoder_trigger_q - q_insn_imm - 4.294967284E9 == 0
2139054115 * reg_next_pc - 4.278355544E9 * dbg_insn_rd + 12 * orig(next_insn_opcode) - 1.711243292E10 == 0
41219 * reg_next_pc + 4.278355544E9 * dbg_rs1val - 4 * orig(next_insn_opcode) + 4.278025792E9 == 0
2.2354921681949E13 * reg_op1 - 2.36034698E9 * next_insn_opcode + 14014460 * q_ascii_instr - 2.280243436901112E16 == 0
356515889 * reg_op1 - 1.45672236734E12 * mem_do_rinst + 340 * cached_insn_opcode - 3.6364620678E11 == 0
356515889 * reg_op1 + 3.6363226848E11 * instr_sw + 340 * orig(next_insn_opcode) - 3.6364620678E11 == 0
1607464942 * reg_op1 - 1.092541775505E12 * decoded_rd - 510 * cached_insn_opcode + 5.4546931017E11 == 0
1069547667 * reg_op1 - 1.45672236734E11 * decoded_rs1 + 1020 * cached_insn_opcode - 9.45266383606E11 == 0
7.486833669E9 * reg_op1 - 1.45672236734E12 * decoded_rs2 + 7140 * cached_insn_opcode - 7.63657034238E12 == 0
803732471 * reg_op1 - 1.092541775505E12 * is_lb_lh_lw_lbu_lhu - 255 * cached_insn_opcode + 2.72734655085E11 == 0
2733 * reg_op1 - 7.2726453696E10 * dbg_rs1val + 68 * orig(next_insn_opcode) - 7.2729241356E10 == 0
1.00732374071E11 * reg_op1 - 4.37016710202E12 * q_insn_rs1 - 30600 * cached_insn_opcode + 3.27281586102E13 == 0
5.031274853E9 * reg_op1 + 4.37016710202E11 * q_insn_rs2 + 1938 * cached_insn_opcode - 1.4309251264302E13 == 0
1782579445 * reg_op1 + 1700 * cached_insn_opcode - 2.91344473468E11 * cpuregs_wrdata - 2.109575507368E12 == 0
3.64002722669E11 * reg_op1 + 347140 * cached_insn_opcode + 1.45672236734E12 * cpuregs_rs1 - 1.85713959180918E15 == 0
356515889 * reg_op1 + 340 * cached_insn_opcode + 1.45672236734E12 * cpuregs_rs2 - 3.6364620678E11 == 0
2.0352840088E10 * reg_op1 - 1020 * cached_insn_opcode - 1.092541775505E12 * orig(dbg_insn_addr) + 1.09093862034E12 == 0
2.71930922614E11 * reg_op1 + 260355 * cached_insn_opcode - 1.092541775505E12 * orig(dbg_rs1val) - 2.78462082841785E14 == 0
803732471 * reg_op1 - 255 * cached_insn_opcode + 1.092541775505E12 * orig(dbg_rs1val_valid) - 8.1980712042E11 == 0
6971756 * next_insn_opcode + 41219 * new_ascii_instr - 6.7349017130939E13 * dbg_rs1val - 6.7636385941503E13 == 0
215208107 * next_insn_opcode - 1277789 * q_ascii_instr - 6.7064765045847E13 * cached_insn_rs1 + 2.079045486586308E15 == 0
48595379 * next_insn_opcode - 288533 * q_ascii_instr + 6.7064765045847E13 * cached_insn_rs2 - 1.40835153721584E15 == 0
6942197 * next_insn_opcode - 41219 * q_ascii_instr - 6.7064765045847E13 * orig(is_lui_auipc_jal) + 6.7065983438268E13 == 0
68 * next_insn_opcode - 2733 * q_insn_imm - 1.173814278428E13 * orig(dbg_rs1val_valid) + 1.173814278428E13 == 0
next_insn_opcode + 40995 * q_insn_rs1 + 1271069 * orig(dbg_rs1val_valid) - 1312064 == 0
28 * next_insn_opcode - 823484 * cached_insn_rs2 - 288533 * orig(dbg_insn_addr) + 21909692 == 0
1069547667 * dbg_insn_opcode + 4.5822773268287201E18 * mem_do_prefetch + 3.214929884E9 * orig(next_insn_opcode) - 4.5824529689859236E18 == 0
3.2085159165E10 * dbg_insn_opcode - 4.5822773268287201E18 * dbg_insn_rs1 - 3.6369636716E10 * orig(next_insn_opcode) + 4.5824529689859236E18 == 0
40995 * dbg_insn_opcode - 4.5822773268287201E18 * dbg_rs1val + 4.284436556E9 * orig(next_insn_opcode) - 4.5824529689859236E18 == 0
40995 * dbg_insn_addr - 1.7111942772E10 * dbg_rs1val + 16 * orig(next_insn_opcode) - 1.7112762672E10 == 0
4.5934961663015337E18 * mem_do_prefetch + 1069547667 * decoded_imm + 4.294966264E9 * orig(next_insn_opcode) - 4.5936722384435267E18 == 0
1069506672 * mem_do_prefetch + 1069547667 * is_lui_auipc_jal + orig(next_insn_opcode) - 1069547667 == 0
3.2085159165E10 * mem_do_prefetch + 1069547667 * dbg_insn_rs1 + 31 * orig(next_insn_opcode) - 3.3155977677E10 == 0
2.2460787972E10 * mem_do_prefetch + 1069547667 * dbg_insn_rs2 - 7 * orig(next_insn_opcode) - 2.2460501007E10 == 0
40995 * mem_do_prefetch + 1069547667 * dbg_rs1val - orig(next_insn_opcode) + 1069547667 == 0
4.5934523576290934E18 * mem_do_prefetch + 4.294966264E9 * orig(next_insn_opcode) + 1069547667 * orig(decoded_imm_j) - 4.5936722384435267E18 == 0
1.092008127012E12 * mem_do_prefetch + orig(next_insn_opcode) - 1069547667 * orig(cpuregs_rs1) - 1069547667 == 0
6.429859768E9 * mem_do_rinst - 1069547667 * decoded_rd - 2 * cached_insn_opcode + 2139095334 == 0
3.214929884E9 * mem_do_rinst - 1069547667 * is_lb_lh_lw_lbu_lhu - cached_insn_opcode + 1069547667 == 0
6.9782592791728046E18 * mem_do_rinst + 1069547667 * q_ascii_instr - 1626997501 * cached_insn_opcode - 7.456625364693252E15 == 0
9.1941287971866634E18 * mem_do_rinst - 1069547667 * q_insn_opcode - 3.214929884E9 * cached_insn_opcode + 4.5824529689859236E18 == 0
1.00732374071E11 * mem_do_rinst - 1069547667 * q_insn_rs1 - 31 * cached_insn_opcode + 3.3155977677E10 == 0
5.031274853E10 * mem_do_rinst + 1069547667 * q_insn_rs2 - 7 * cached_insn_opcode - 2.2460501007E10 == 0
6.9708342685676001E18 * mem_do_rinst + 1069547667 * cached_ascii_instr - 1626997501 * cached_insn_opcode - 7.456625364693252E15 == 0
1.32818804081E11 * mem_do_rinst - 31 * cached_insn_opcode - 1069547667 * cached_insn_rs1 + 3.3155977677E10 == 0
2.9991342857E10 * mem_do_rinst - 7 * cached_insn_opcode + 1069547667 * cached_insn_rs2 - 2.2460501007E10 == 0
8.1411360352E10 * mem_do_rinst - 20 * cached_insn_opcode - 1069547667 * orig(dbg_insn_addr) + 2.139095334E10 == 0
4.284477551E9 * mem_do_rinst - cached_insn_opcode - 1069547667 * orig(is_lui_auipc_jal) + 1069547667 == 0
1.087723690456E12 * mem_do_rinst + cached_insn_opcode - 1069547667 * orig(dbg_rs1val) - 1069547667 == 0
41219 * instr_lw + 1069547667 * dbg_rs1val - orig(next_insn_opcode) + 1069547667 == 0
40995 * instr_sw + 1069547667 * dbg_rs1val - orig(next_insn_opcode) + 1069547667 == 0
4.5934950753629133E18 * instr_sw + 1069547667 * cached_insn_imm + 4.294966264E9 * orig(next_insn_opcode) - 4.5936722384435267E18 == 0
3.3154706832E10 * instr_sw + 1069547667 * cached_insn_rs1 + 31 * orig(next_insn_opcode) - 3.3155977677E10 == 0
7.486546704E9 * instr_sw - 1069547667 * cached_insn_rs2 + 7 * orig(next_insn_opcode) + 2.2460501007E10 == 0
1069506672 * instr_sw + orig(next_insn_opcode) + 1069547667 * orig(is_lui_auipc_jal) - 1069547667 == 0
1.6043215005E10 * decoded_rd - 3.214929884E9 * decoded_rs1 + 30 * cached_insn_opcode - 2.8871500126E10 == 0
2.2460501007E10 * decoded_rd - 6.429859768E9 * decoded_rs2 + 42 * cached_insn_opcode - 4.4921002014E10 == 0
1.14840710744277158E18 * decoded_rd - 1607464942 * decoded_imm_j + 2147463162 * cached_insn_opcode - 2.29674837312151885E18 == 0
4.284477551E9 * decoded_rd + 6.429859768E9 * is_sb_sh_sw + 2 * cached_insn_opcode - 8.568955102E9 == 0
1.14926609964833293E18 * decoded_rd - 803732471 * q_insn_opcode - 266852380 * cached_insn_opcode + 1.14504152971259264E18 == 0
1.00732374071E11 * decoded_rd - 6.429859768E9 * q_insn_rs1 + 2 * cached_insn_opcode - 2139095334 == 0
2.5156374265E10 * decoded_rd + 3.214929884E9 * q_insn_rs2 + 26 * cached_insn_opcode - 1.17826276094E11 == 0
1.32818804081E11 * decoded_rd + 62 * cached_insn_opcode - 6.429859768E9 * cached_insn_rs1 - 6.6311955354E10 == 0
2.9991342857E10 * decoded_rd + 14 * cached_insn_opcode + 6.429859768E9 * cached_insn_rs2 - 1.95009740842E11 == 0
2.6738691675E10 * decoded_rd + 50 * cached_insn_opcode - 6.429859768E9 * cpuregs_wrdata - 5.9907243118E10 == 0
1.092008168007E12 * decoded_rd + 2042 * cached_insn_opcode + 6.429859768E9 * cpuregs_rs1 - 8.742473299374E12 == 0
1069547667 * decoded_rd + 2 * cached_insn_opcode + 6.429859768E9 * cpuregs_rs2 - 2139095334 == 0
1.0176420044E10 * decoded_rd + 4 * cached_insn_opcode - 803732471 * orig(dbg_insn_addr) - 4.278190668E9 == 0
4.284477551E9 * decoded_rd + 2 * cached_insn_opcode - 6.429859768E9 * orig(is_lui_auipc_jal) - 2139095334 == 0
1.35965461307E11 * decoded_rd + 255 * cached_insn_opcode - 803732471 * orig(dbg_rs1val) - 2.72734655085E11 == 0
decoded_rd + 8 * alu_out_q - 2 * orig(count_instr) - 8158 == 0
1607464942 * decoded_rs1 - 1.6043215005E10 * is_lb_lh_lw_lbu_lhu - 15 * cached_insn_opcode + 1.4435750063E10 == 0
4.284477551E9 * decoded_rs1 + 3.208643001E10 * is_sb_sh_sw - 30 * cached_insn_opcode - 4.284477551E9 == 0
3485878 * decoded_rs1 - 15 * new_ascii_instr + 2.4509538855E10 * dbg_rs1val + 2.4506052977E10 == 0
6.9782592791728051E17 * decoded_rs1 + 3.208643001E9 * q_ascii_instr - 4.880992503E9 * cached_insn_opcode - 7.2019580401136013E17 == 0
1.00732374071E11 * decoded_rs1 - 3.208643001E10 * q_insn_rs1 - 930 * cached_insn_opcode + 8.93946956239E11 == 0
5.031274853E9 * decoded_rs1 + 3.208643001E9 * q_insn_rs2 - 21 * cached_insn_opcode - 7.2412777874E10 == 0
6.9708342685676001E18 * decoded_rs1 + 3.208643001E10 * cached_ascii_instr - 4.880992503E10 * cached_insn_opcode - 7.1945330295083981E18 == 0
1.32818804081E11 * decoded_rs1 - 930 * cached_insn_opcode - 3.208643001E10 * cached_insn_rs1 + 8.61860526229E11 == 0
2.9991342857E10 * decoded_rs1 - 210 * cached_insn_opcode + 3.208643001E10 * cached_insn_rs2 - 7.03806373067E11 == 0
4.0705680176E10 * decoded_rs1 - 300 * cached_insn_opcode - 1.6043215005E10 * orig(dbg_insn_addr) + 2.80158619924E11 == 0
4.284477551E9 * decoded_rs1 - 30 * cached_insn_opcode - 3.208643001E10 * orig(is_lui_auipc_jal) + 2.7801952459E10 == 0
5.43861845228E11 * decoded_rs1 + 15 * cached_insn_opcode - 1.6043215005E10 * orig(dbg_rs1val) - 5.59905060233E11 == 0
1607464942 * decoded_rs1 - 15 * cached_insn_opcode + 1.6043215005E10 * orig(dbg_rs1val_valid) - 1607464942 == 0
3.214929884E9 * decoded_rs2 - 2.2460501007E10 * is_lb_lh_lw_lbu_lhu - 21 * cached_insn_opcode + 2.2460501007E10 == 0
6971756 * decoded_rs2 - 21 * new_ascii_instr + 3.4313354397E10 * dbg_rs1val + 3.4313354397E10 == 0
6.9782592791728046E18 * decoded_rs2 + 2.2460501007E10 * q_ascii_instr - 3.4166947521E10 * cached_insn_opcode - 1.56589132658558304E17 == 0
1.4390339153E10 * decoded_rs2 - 3.208643001E9 * q_insn_rs1 - 93 * cached_insn_opcode + 9.9467933031E10 == 0
5.031274853E10 * decoded_rs2 + 2.2460501007E10 * q_insn_rs2 - 147 * cached_insn_opcode - 4.71670521147E11 == 0
6.9708342685676001E18 * decoded_rs2 + 2.2460501007E10 * cached_ascii_instr - 3.4166947521E10 * cached_insn_opcode - 1.56589132658558304E17 == 0
1.32818804081E11 * decoded_rs2 - 651 * cached_insn_opcode - 2.2460501007E10 * cached_insn_rs1 + 6.96275531217E11 == 0
4.284477551E9 * decoded_rs2 - 21 * cached_insn_opcode + 3.208643001E9 * cached_insn_rs2 - 6.7381503021E10 == 0
1.1630194336E10 * decoded_rs2 - 60 * cached_insn_opcode - 3.208643001E9 * orig(dbg_insn_addr) + 6.417286002E10 == 0
4.284477551E9 * decoded_rs2 - 21 * cached_insn_opcode - 2.2460501007E10 * orig(is_lui_auipc_jal) + 2.2460501007E10 == 0
1.087723690456E12 * decoded_rs2 + 21 * cached_insn_opcode - 2.2460501007E10 * orig(dbg_rs1val) - 2.2460501007E10 == 0
3.2085159165E10 * decoded_imm - 4.5934961663015337E18 * dbg_insn_rs1 - 4.294997884E9 * orig(next_insn_opcode) + 4.5936722397397883E18 == 0
40995 * decoded_imm - 4.5934961663015337E18 * dbg_rs1val + 4.294967284E9 * orig(next_insn_opcode) - 4.5936722384853412E18 == 0
803732471 * decoded_imm_j - 1.14840710744277158E18 * is_lb_lh_lw_lbu_lhu - 1073731581 * cached_insn_opcode + 1.14837418656075942E18 == 0
1742939 * decoded_imm_j - 1073731581 * new_ascii_instr + 1.75444439362400538E18 * dbg_rs1val + 1.75444432223322394E18 == 0
4.284477551E9 * decoded_imm_j - 4.294926324E9 * cached_insn_opcode - 4.5936284297710863E18 * orig(is_lui_auipc_jal) + 4.5934529375705974E18 == 0
2.0917763278E10 * decoded_imm_j + 82594737 * cached_insn_opcode - 8.8339008264828576E16 * orig(dbg_rs1val) - 8.9195799848695456E16 == 0
3.2085159165E10 * is_lui_auipc_jal - 1069506672 * dbg_insn_rs1 - orig(next_insn_opcode) + 1069547667 == 0
40995 * is_lui_auipc_jal - 1069506672 * dbg_rs1val + orig(next_insn_opcode) - 1069547667 == 0
2139095334 * is_lui_auipc_jal - 66844167 * cpu_state + 2 * orig(next_insn_opcode) + 2138931354 == 0
1.14836308940727334E18 * is_lui_auipc_jal - 9985 * orig(next_insn_opcode) - 267376668 * orig(decoded_imm_j) + 1.0952157656355E13 == 0
9.1000677251E10 * is_lui_auipc_jal + 85 * orig(next_insn_opcode) + 89125556 * orig(cpuregs_rs1) - 9.0911551695E10 == 0
4.284477551E9 * is_lb_lh_lw_lbu_lhu + 3.214929884E9 * is_sb_sh_sw + cached_insn_opcode - 4.284477551E9 == 0
3.4891296395864023E18 * is_lb_lh_lw_lbu_lhu + 1607464942 * q_ascii_instr + 816969849 * cached_insn_opcode - 3.5003364929405804E18 == 0
2.29853219929666586E18 * is_lb_lh_lw_lbu_lhu - 803732471 * q_insn_opcode - 266852380 * cached_insn_opcode + 1.14504152971259264E18 == 0
1.00732374071E11 * is_lb_lh_lw_lbu_lhu - 3.214929884E9 * q_insn_rs1 + cached_insn_opcode - 1069547667 == 0
2.5156374265E10 * is_lb_lh_lw_lbu_lhu + 1607464942 * q_insn_rs2 + 13 * cached_insn_opcode - 5.8913138047E10 == 0
6.9708342685676001E18 * is_lb_lh_lw_lbu_lhu + 3.214929884E9 * cached_ascii_instr + 1626997501 * cached_insn_opcode - 6.9932479752759562E18 == 0
1.32818804081E11 * is_lb_lh_lw_lbu_lhu + 31 * cached_insn_opcode - 3.214929884E9 * cached_insn_rs1 - 3.3155977677E10 == 0
2.9991342857E10 * is_lb_lh_lw_lbu_lhu + 7 * cached_insn_opcode + 3.214929884E9 * cached_insn_rs2 - 9.7504870421E10 == 0
2.6738691675E10 * is_lb_lh_lw_lbu_lhu + 25 * cached_insn_opcode - 3.214929884E9 * cpuregs_wrdata - 2.9953621559E10 == 0
1.092008168007E12 * is_lb_lh_lw_lbu_lhu + 1021 * cached_insn_opcode + 3.214929884E9 * cpuregs_rs1 - 4.371236649687E12 == 0
1069547667 * is_lb_lh_lw_lbu_lhu + cached_insn_opcode + 3.214929884E9 * cpuregs_rs2 - 1069547667 == 0
2.0352840088E10 * is_lb_lh_lw_lbu_lhu + 4 * cached_insn_opcode - 803732471 * orig(dbg_insn_addr) - 4.278190668E9 == 0
4.284477551E9 * is_lb_lh_lw_lbu_lhu + cached_insn_opcode - 3.214929884E9 * orig(is_lui_auipc_jal) - 1069547667 == 0
2.71930922614E11 * is_lb_lh_lw_lbu_lhu + 255 * cached_insn_opcode - 803732471 * orig(dbg_rs1val) - 2.72734655085E11 == 0
is_lb_lh_lw_lbu_lhu + 4 * alu_out_q - orig(count_instr) - 4079 == 0
40995 * is_sb_sh_sw + 1069506672 * dbg_rs1val - orig(next_insn_opcode) + 1069506672 == 0
6.9782592791728046E18 * is_sb_sh_sw - 4.284477551E9 * q_ascii_instr - 6942197 * cached_insn_opcode + 2.9870332073049556E16 == 0
1.00732374071E11 * is_sb_sh_sw + 4.284477551E9 * q_insn_rs1 + 30 * cached_insn_opcode - 1.32818804081E11 == 0
5.031274853E10 * is_sb_sh_sw - 4.284477551E9 * q_insn_rs2 - 19 * cached_insn_opcode + 8.9974028571E10 == 0
2.6738691675E10 * is_sb_sh_sw - 25 * cached_insn_opcode + 4.284477551E9 * cpuregs_wrdata + 4.284477551E9 == 0
1.092008168007E12 * is_sb_sh_sw - 1021 * cached_insn_opcode - 4.284477551E9 * cpuregs_rs1 + 4.37016710202E12 == 0
8.1411360352E10 * is_sb_sh_sw + 4 * cached_insn_opcode + 4.284477551E9 * orig(dbg_insn_addr) - 8.568955102E10 == 0
1.087723690456E12 * is_sb_sh_sw - 1021 * cached_insn_opcode + 4.284477551E9 * orig(dbg_rs1val) + 4.284477551E9 == 0
1.66828258363E12 * is_lui_auipc_jal_jalr_addi_add_sub - new_ascii_instr + 1633969257 * orig(cpuregs_rs1) - 1.666648614373E12 == 0
3.2085159165E10 * is_lui_auipc_jal_jalr_addi_add_sub - 1069547667 * dbg_insn_rs1 - 31 * orig(next_insn_opcode) + 1070818512 == 0
40995 * is_lui_auipc_jal_jalr_addi_add_sub - 1069547667 * dbg_rs1val + orig(next_insn_opcode) - 1069588662 == 0
1.092008127012E12 * is_lui_auipc_jal_jalr_addi_add_sub - orig(next_insn_opcode) + 1069547667 * orig(cpuregs_rs1) - 1.090938579345E12 == 0
25 * new_ascii_instr - 4.0849231425E10 * dbg_rs1val - 6971756 * cpuregs_wrdata - 4.0856203181E10 == 0
1021 * new_ascii_instr - 1.668282611397E12 * dbg_rs1val + 6971756 * cpuregs_rs1 - 1.675393802517E12 == 0
1021 * new_ascii_instr - 1.668275639641E12 * dbg_rs1val - 6971756 * orig(dbg_rs1val) - 1.668282611397E12 == 0
16 * new_ascii_instr - 8.34141291815E11 * cpu_state - 2.6143508112E10 * orig(cpuregs_rs1) + 5.3358899168048E13 == 0
new_ascii_instr - 1633969257 * orig(cpuregs_rs1) + 1.66828258363E12 * orig(cpuregs_rs2) + 1.666648614373E12 == 0
41219 * dbg_ascii_instr - 7.493990444617382E15 * dbg_rs1val + 6943989 * orig(next_insn_opcode) - 7.494277813427946E15 == 0
7.486929324E9 * dbg_insn_rs1 - 1.0695053055E10 * dbg_insn_rs2 + 287 * orig(next_insn_opcode) - 7.498694889E9 == 0
2733 * dbg_insn_rs1 - 2139010611 * dbg_rs1val + 2 * orig(next_insn_opcode) - 2139095334 == 0
3.4225525344E10 * dbg_insn_rs1 - 3.2085159165E10 * cpu_state + 992 * orig(next_insn_opcode) + 9.92458900896E11 == 0
1.53115078587636454E18 * dbg_insn_rs1 + 1431242708 * orig(next_insn_opcode) - 1.0695053055E10 * orig(decoded_imm_j) - 1.53077139029804621E18 == 0
1.092008127012E12 * dbg_insn_rs1 + 31621 * orig(next_insn_opcode) + 3.2085159165E10 * orig(cpuregs_rs1) - 3.3820166778207E13 == 0
1069547667 * dbg_insn_rs1 + 31 * orig(next_insn_opcode) + 3.2085159165E10 * orig(cpuregs_rs2) - 1070818512 == 0
13665 * dbg_insn_rs2 - 7.486929324E9 * dbg_rs1val + 7 * orig(next_insn_opcode) - 7.487216289E9 == 0
8.556381336E9 * dbg_insn_rs2 - 5.615196993E9 * cpu_state - 56 * orig(next_insn_opcode) + 1.79688599496E11 == 0
2.73002031753E11 * dbg_insn_rs2 - 1792 * orig(next_insn_opcode) + 5.615196993E9 * orig(cpuregs_rs1) - 5.72742746982E12 == 0
41219 * dbg_insn_rd + 2139054115 * dbg_rs1val - 2 * orig(next_insn_opcode) + 2139054115 == 0
5.8250313621888832E17 * dbg_rs1val + 13665 * q_ascii_instr - 544646566 * orig(next_insn_opcode) + 5.8250313581496461E17 == 0
1.74008468264682675E18 * dbg_rs1val + 40995 * cached_ascii_instr - 1626997501 * orig(next_insn_opcode) + 1.74008439683968947E18 == 0
4.5934950753629133E18 * dbg_rs1val - 40995 * cached_insn_imm - 4.294966264E9 * orig(next_insn_opcode) + 4.5936711475467208E18 == 0
3.3154706832E10 * dbg_rs1val - 40995 * cached_insn_rs1 - 31 * orig(next_insn_opcode) + 3.3155977677E10 == 0
7.486546704E9 * dbg_rs1val + 40995 * cached_insn_rs2 - 7 * orig(next_insn_opcode) + 7.485685809E9 == 0
3.4225525344E10 * dbg_rs1val - 40995 * cpu_state - 32 * orig(next_insn_opcode) + 3.4228149024E10 == 0
1.093077674679E12 * dbg_rs1val - 40995 * alu_out - 1022 * orig(next_insn_opcode) + 1.093119530574E12 == 0
1069547668 * dbg_rs1val + alu_out_q - orig(next_insn_opcode) + 1069546647 == 0
2.72734654575E11 * dbg_rs1val - alu_shr - 255 * orig(next_insn_opcode) + 2.72734655085E11 == 0
5.1038359529212147E17 * dbg_rs1val - 477214036 * orig(next_insn_opcode) - 4555 * orig(decoded_imm_j) + 5.104031588681001E17 == 0
1069506672 * dbg_rs1val - orig(next_insn_opcode) - 40995 * orig(is_lui_auipc_jal) + 1069547667 == 0
1.74754102220438272E18 * dbg_rs1val - 1633969257 * orig(next_insn_opcode) - 224 * orig(new_ascii_instr) + 1.74760837278318694E18 == 0
1.092008127012E12 * dbg_rs1val - 1021 * orig(next_insn_opcode) + 40995 * orig(cpuregs_rs1) + 1.092008168007E12 == 0
1069547667 * dbg_rs1val - orig(next_insn_opcode) + 40995 * orig(cpuregs_rs2) + 1069588662 == 0
1069547667 * q_ascii_instr - 1626997501 * cached_insn_opcode + 2.79130371166912192E17 * cpuregs_wrdata + 2.71673745802218912E17 == 0
1069547667 * q_ascii_instr - 1626997501 * cached_insn_opcode - 6.9782592791728046E18 * cpuregs_rs2 - 7.456625364693252E15 == 0
4.284477551E9 * q_ascii_instr + 6942197 * cached_insn_opcode + 6.9782592791728046E18 * orig(is_lui_auipc_jal) - 7.0081296112458537E18 == 0
1607464942 * q_ascii_instr + 816969849 * cached_insn_opcode - 3.4891296395864023E18 * orig(dbg_rs1val_valid) - 1.1206853354178152E16 == 0
q_insn_imm + 1.7179869136E10 * alu_out_q - 4.294967284E9 * orig(count_instr) - 1.7519171551436E13 == 0
356515889 * q_insn_imm - 340 * orig(next_insn_opcode) + 1.53122407948117555E18 * orig(dbg_rs1val_valid) - 1.53122407948117555E18 == 0
1069547667 * q_insn_opcode + 3.214929884E9 * cached_insn_opcode + 9.1941287971866634E18 * cpuregs_rs2 - 4.5824529689859236E18 == 0
4.284477551E9 * q_insn_opcode + 4.282339404E9 * cached_insn_opcode - 9.1941287971866634E18 * orig(is_lui_auipc_jal) - 9.1626190878362941E18 == 0
q_insn_opcode + 1.7129357616E10 * alu_out_q - 4.282339404E9 * orig(count_instr) - 1.7467664567063E13 == 0
5.031274853E10 * q_insn_rs1 + 1.00732374071E11 * q_insn_rs2 + 799 * cached_insn_opcode - 3.675075059921E12 == 0
1.32818804081E11 * q_insn_rs1 + 930 * cached_insn_opcode - 1.00732374071E11 * cached_insn_rs1 - 9.9467933031E11 == 0
4.284477551E9 * q_insn_rs1 + 30 * cached_insn_opcode + 1.4390339153E10 * cached_insn_rs2 - 4.35015926294E11 == 0
2.6738691675E10 * q_insn_rs1 + 775 * cached_insn_opcode - 1.00732374071E11 * cpuregs_wrdata - 9.29631815996E11 == 0
1.092008168007E12 * q_insn_rs1 + 31651 * cached_insn_opcode + 1.00732374071E11 * cpuregs_rs1 - 1.36599274760637E14 == 0
1069547667 * q_insn_rs1 + 31 * cached_insn_opcode + 1.00732374071E11 * cpuregs_rs2 - 3.3155977677E10 == 0
1.1630194336E10 * q_insn_rs1 + 68 * cached_insn_opcode - 1.4390339153E10 * orig(dbg_insn_addr) - 7.2729241356E10 == 0
4.284477551E9 * q_insn_rs1 + 30 * cached_insn_opcode - 1.00732374071E11 * orig(is_lui_auipc_jal) - 3.208643001E10 == 0
1.087723690456E12 * q_insn_rs1 + 31621 * cached_insn_opcode - 1.00732374071E11 * orig(dbg_rs1val) - 3.3820166778207E13 == 0
3.214929884E9 * q_insn_rs1 - cached_insn_opcode + 1.00732374071E11 * orig(dbg_rs1val_valid) - 9.9662826404E10 == 0
1.32818804081E11 * q_insn_rs2 + 589 * cached_insn_opcode + 5.031274853E10 * cached_insn_rs1 - 4.348890090131E12 == 0
2.9991342857E10 * q_insn_rs2 + 133 * cached_insn_opcode - 5.031274853E10 * cached_insn_rs2 + 4.26749519133E11 == 0
5.347738335E9 * q_insn_rs2 - 35 * cached_insn_opcode + 1.0062549706E10 * cpuregs_wrdata - 1.02239955329E11 == 0
1.092008168007E12 * q_insn_rs2 - 7147 * cached_insn_opcode - 5.031274853E10 * cpuregs_rs1 + 2.8386831972453E13 == 0
1069547667 * q_insn_rs2 - 7 * cached_insn_opcode - 5.031274853E10 * cpuregs_rs2 - 2.2460501007E10 == 0
4.0705680176E10 * q_insn_rs2 + 204 * cached_insn_opcode + 2.5156374265E10 * orig(dbg_insn_addr) - 1.357946768996E12 == 0
4.284477551E9 * q_insn_rs2 + 19 * cached_insn_opcode + 5.031274853E10 * orig(is_lui_auipc_jal) - 1.40286777101E11 == 0
5.43861845228E11 * q_insn_rs2 - 3583 * cached_insn_opcode + 2.5156374265E10 * orig(dbg_rs1val) - 1.1395942375523E13 == 0
1607464942 * q_insn_rs2 + 13 * cached_insn_opcode - 2.5156374265E10 * orig(dbg_rs1val_valid) - 3.3756763782E10 == 0
2.6738691675E10 * cached_ascii_instr - 4.0674937525E10 * cached_insn_opcode + 6.9708342685676001E18 * cpuregs_wrdata + 6.7844186344502692E18 == 0
1069547667 * cached_ascii_instr - 1626997501 * cached_insn_opcode - 6.9708342685676001E18 * cpuregs_rs2 - 7.456625364693252E15 == 0
3.214929884E9 * cached_ascii_instr + 1626997501 * cached_insn_opcode - 6.9708342685676001E18 * orig(dbg_rs1val_valid) - 2.2413706708356304E16 == 0
775 * cached_insn_opcode + 2.6738691675E10 * cached_insn_rs1 - 1.32818804081E11 * cpuregs_wrdata - 9.61718246006E11 == 0
31651 * cached_insn_opcode + 1.092008168007E12 * cached_insn_rs1 + 1.32818804081E11 * cpuregs_rs1 - 1.69327433370837E14 == 0
31 * cached_insn_opcode + 1069547667 * cached_insn_rs1 + 1.32818804081E11 * cpuregs_rs2 - 3.3155977677E10 == 0
124 * cached_insn_opcode - 8.1411360352E10 * cached_insn_rs1 + 1.32818804081E11 * orig(dbg_insn_addr) - 1.32623910708E11 == 0
31651 * cached_insn_opcode + 1.087723690456E12 * cached_insn_rs1 - 1.32818804081E11 * orig(dbg_rs1val) - 3.3852253208217E13 == 0
31 * cached_insn_opcode - 3.214929884E9 * cached_insn_rs1 - 1.32818804081E11 * orig(dbg_rs1val_valid) + 9.9662826404E10 == 0
175 * cached_insn_opcode - 2.6738691675E10 * cached_insn_rs2 - 2.9991342857E10 * cpuregs_wrdata + 5.31521182318E11 == 0
7147 * cached_insn_opcode - 1.092008168007E12 * cached_insn_rs2 + 2.9991342857E10 * cpuregs_rs1 - 7.658998185993E12 == 0
7 * cached_insn_opcode - 1069547667 * cached_insn_rs2 + 2.9991342857E10 * cpuregs_rs2 + 2.2460501007E10 == 0
4 * cached_insn_opcode + 1.1630194336E10 * cached_insn_rs2 + 4.284477551E9 * orig(dbg_insn_addr) - 3.29923632076E11 == 0
7147 * cached_insn_opcode - 1.087723690456E12 * cached_insn_rs2 - 2.9991342857E10 * orig(dbg_rs1val) + 2.2812206156719E13 == 0
7 * cached_insn_opcode + 3.214929884E9 * cached_insn_rs2 - 2.9991342857E10 * orig(dbg_rs1val_valid) - 6.7513527564E10 == 0
500 * cached_insn_opcode - 8.1411360352E10 * cpuregs_wrdata + 2.6738691675E10 * orig(dbg_insn_addr) - 6.16185193852E11 == 0
25 * cached_insn_opcode - 4.284477551E9 * cpuregs_wrdata + 2.6738691675E10 * orig(is_lui_auipc_jal) - 3.1023169226E10 == 0
25 * cached_insn_opcode + 1.087723690456E12 * cpuregs_wrdata - 2.6738691675E10 * orig(dbg_rs1val) + 1.060984998781E12 == 0
25 * cached_insn_opcode - 3.214929884E9 * cpuregs_wrdata - 2.6738691675E10 * orig(dbg_rs1val_valid) - 3.214929884E9 == 0
20420 * cached_insn_opcode + 8.1411360352E10 * cpuregs_rs1 + 1.092008168007E12 * orig(dbg_insn_addr) - 1.0487975091918E14 == 0
1021 * cached_insn_opcode + 4.284477551E9 * cpuregs_rs1 + 1.092008168007E12 * orig(is_lui_auipc_jal) - 5.462175270027E12 == 0
1021 * cached_insn_opcode - 1.087723690456E12 * cpuregs_rs1 - 1.092008168007E12 * orig(dbg_rs1val) + 1.108386156097113E15 == 0
1021 * cached_insn_opcode + 3.214929884E9 * cpuregs_rs1 - 1.092008168007E12 * orig(dbg_rs1val_valid) - 3.27922848168E12 == 0
20 * cached_insn_opcode + 8.1411360352E10 * cpuregs_rs2 + 1069547667 * orig(dbg_insn_addr) - 2.139095334E10 == 0
cached_insn_opcode + 4.284477551E9 * cpuregs_rs2 + 1069547667 * orig(is_lui_auipc_jal) - 1069547667 == 0
cached_insn_opcode - 1.087723690456E12 * cpuregs_rs2 - 1069547667 * orig(dbg_rs1val) - 1069547667 == 0
4 * cached_insn_opcode + 4.284477551E9 * orig(dbg_insn_addr) - 8.1411360352E10 * orig(is_lui_auipc_jal) - 4.278190668E9 == 0
88 * cached_insn_opcode + 4.688464183E9 * orig(dbg_insn_addr) - 350911036 * orig(dbg_rs1val) - 9.4120194696E10 == 0
4 * cached_insn_opcode - 803732471 * orig(dbg_insn_addr) - 2.0352840088E10 * orig(dbg_rs1val_valid) + 1.607464942E10 == 0
1021 * cached_insn_opcode + 1.087723690456E12 * orig(is_lui_auipc_jal) - 4.284477551E9 * orig(dbg_rs1val) - 1.092008168007E12 == 0
cached_insn_opcode - 3.214929884E9 * orig(is_lui_auipc_jal) - 4.284477551E9 * orig(dbg_rs1val_valid) + 3.214929884E9 == 0
255 * cached_insn_opcode - 803732471 * orig(dbg_rs1val) - 2.71930922614E11 * orig(dbg_rs1val_valid) - 803732471 == 0
2.73002031753E11 * cpu_state - 8 * orig(next_insn_opcode) + 8.556381336E9 * orig(cpuregs_rs1) - 1.7463573650856E13 == 0
4 * alu_out_q - orig(count_instr) - orig(dbg_rs1val_valid) - 4078 == 0
Exiting Daikon.
