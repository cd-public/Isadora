Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files .(read 1 decls file)
Processing trace data; reading 46 dtrace files:

===========================================================================
..tick():::ENTER
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_wordsize
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jal
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lw
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_addi
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoded_rd
trap == decoded_imm
trap == decoder_trigger
trap == decoder_trigger_q
trap == decoder_pseudo_trigger
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_lui_auipc_jal
trap == is_lb_lh_lw_lbu_lhu
trap == is_slli_srli_srai
trap == is_jalr_addi_slti_sltiu_xori_ori_andi
trap == is_sll_srl_sra
trap == is_lui_auipc_jal_jalr_addi_add_sub
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_lbu_lhu_lw
trap == is_alu_reg_imm
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_insn_imm
trap == dbg_insn_rd
trap == q_insn_imm
trap == q_insn_rd
trap == dbg_next
trap == cached_insn_imm
trap == cached_insn_rd
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_store
trap == latched_stalu
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == latched_rd
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == alu_eq
trap == alu_ltu
trap == alu_lts
trap == clear_prefetched_high_word_q
trap == cpuregs_write
mem_valid == mem_instr
mem_valid == mem_state
mem_valid == mem_do_prefetch
mem_valid == mem_do_rinst
mem_valid == last_mem_valid
mem_valid == instr_sw
mem_valid == decoded_rs1
mem_valid == is_sb_sh_sw
mem_valid == dbg_insn_rs1
mem_valid == dbg_rs1val_valid
mem_valid == dbg_rs2val_valid
mem_valid == q_insn_rs1
mem_valid == dbg_valid_insn
mem_valid == cached_insn_rs1
mem_addr == reg_next_pc
mem_la_wdata == reg_op2
mem_la_wdata == dbg_rs2val
mem_la_wdata == cpuregs_rs2
pcpi_insn == trace_data
pcpi_insn == reg_out
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out
pcpi_insn == alu_out_q
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == cpuregs_wrdata
pcpi_insn == decoded_rs
reg_pc == dbg_insn_addr
reg_op1 == dbg_rs1val
reg_op1 == cpuregs_rs1
next_insn_opcode == dbg_insn_opcode
next_insn_opcode == mem_rdata_q
next_insn_opcode == q_insn_opcode
next_insn_opcode == cached_insn_opcode
decoded_rs2 == dbg_insn_rs2
decoded_rs2 == q_insn_rs2
decoded_rs2 == cached_insn_rs2
new_ascii_instr == dbg_ascii_instr
new_ascii_instr == q_ascii_instr
new_ascii_instr == cached_ascii_instr
trap == 0
mem_valid == 1
mem_addr one of { 8, 20 }
mem_la_wstrb == 15
pcpi_insn == -1
reg_pc one of { 4, 16 }
reg_op1 == 1020
next_insn_opcode one of { 40995, 2138147 }
irq_mask == 4294967295L
mem_rdata_word one of { 41219, 4284477551L }
decoded_rs2 one of { 0, 2 }
decoded_imm_j one of { 40960, 40962 }
new_ascii_instr == 29559
cpu_state == 2
dbg_ascii_state == 495874565485L
alu_shr >= 0
trap < mem_addr
trap <= mem_la_wdata
trap < count_cycle
trap < count_instr
trap < reg_pc
trap < next_insn_opcode
trap < mem_rdata_word
trap <= decoded_rs2
trap < decoded_imm_j
trap < alu_add_sub
trap <= alu_shl
trap <= alu_shr
mem_valid < mem_addr
mem_valid < count_cycle
mem_valid < count_instr
mem_valid < reg_pc
mem_valid < next_insn_opcode
mem_valid < mem_rdata_word
mem_valid != decoded_rs2
mem_valid < decoded_imm_j
mem_valid < alu_add_sub
mem_valid != alu_shl
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr < count_cycle
mem_addr != count_instr
mem_addr > reg_pc
mem_addr < reg_op1
mem_addr < next_insn_opcode
mem_addr < irq_mask
mem_addr < mem_rdata_word
mem_addr > decoded_rs2
mem_addr < decoded_imm_j
mem_addr < new_ascii_instr
mem_addr > cpu_state
mem_addr < dbg_ascii_state
mem_addr < alu_add_sub
mem_addr != alu_shl
mem_addr != alu_shr
mem_wdata - mem_la_wdata + 1 == 0
mem_wdata >= pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata < reg_op1
mem_wdata < next_insn_opcode
mem_wdata < irq_mask
mem_wdata < mem_rdata_word
mem_wdata < decoded_imm_j
mem_wdata < new_ascii_instr
mem_wdata < dbg_ascii_state
mem_wdata - alu_add_sub + 1021 == 0
mem_wdata != alu_shl
mem_wdata != alu_shr
mem_la_wdata > pcpi_insn
mem_la_wdata < count_cycle
mem_la_wdata < count_instr
mem_la_wdata < reg_op1
mem_la_wdata < next_insn_opcode
mem_la_wdata < irq_mask
mem_la_wdata < mem_rdata_word
mem_la_wdata < decoded_imm_j
mem_la_wdata < new_ascii_instr
mem_la_wdata < dbg_ascii_state
mem_la_wdata - alu_add_sub + 1020 == 0
mem_la_wdata != alu_shl
mem_la_wstrb != count_cycle
mem_la_wstrb != count_instr
mem_la_wstrb != reg_pc
mem_la_wstrb < next_insn_opcode
mem_la_wstrb < mem_rdata_word
mem_la_wstrb > decoded_rs2
mem_la_wstrb < decoded_imm_j
mem_la_wstrb < alu_add_sub
mem_la_wstrb != alu_shl
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < next_insn_opcode
pcpi_insn < mem_rdata_word
pcpi_insn < decoded_rs2
pcpi_insn < decoded_imm_j
pcpi_insn < alu_add_sub
pcpi_insn < alu_shl
pcpi_insn < alu_shr
count_cycle > count_instr
count_cycle > reg_pc
count_cycle < reg_op1
count_cycle < next_insn_opcode
count_cycle < irq_mask
count_cycle < mem_rdata_word
count_cycle > decoded_rs2
count_cycle < decoded_imm_j
count_cycle < new_ascii_instr
count_cycle > cpu_state
count_cycle < dbg_ascii_state
count_cycle < alu_add_sub
count_cycle != alu_shl
count_cycle != alu_shr
count_instr != reg_pc
count_instr < reg_op1
count_instr < next_insn_opcode
count_instr < irq_mask
count_instr < mem_rdata_word
count_instr > decoded_rs2
count_instr < decoded_imm_j
count_instr < new_ascii_instr
count_instr >= cpu_state
count_instr < dbg_ascii_state
count_instr < alu_add_sub
count_instr != alu_shl
count_instr != alu_shr
reg_pc < reg_op1
reg_pc < next_insn_opcode
reg_pc < irq_mask
reg_pc < mem_rdata_word
reg_pc > decoded_rs2
reg_pc < decoded_imm_j
reg_pc < new_ascii_instr
reg_pc > cpu_state
reg_pc < dbg_ascii_state
reg_pc < alu_add_sub
reg_pc != alu_shl
reg_pc != alu_shr
reg_op1 < next_insn_opcode
reg_op1 < mem_rdata_word
reg_op1 > decoded_rs2
reg_op1 < decoded_imm_j
reg_op1 <= alu_add_sub
reg_op1 >= alu_shr
next_insn_opcode < irq_mask
next_insn_opcode < mem_rdata_word
next_insn_opcode > decoded_rs2
next_insn_opcode > decoded_imm_j
next_insn_opcode > new_ascii_instr
next_insn_opcode > cpu_state
next_insn_opcode < dbg_ascii_state
next_insn_opcode > alu_add_sub
next_insn_opcode != alu_shl
next_insn_opcode > alu_shr
irq_mask > mem_rdata_word
irq_mask > decoded_rs2
irq_mask > decoded_imm_j
irq_mask > alu_add_sub
irq_mask > alu_shl
irq_mask > alu_shr
mem_rdata_word > decoded_rs2
mem_rdata_word > decoded_imm_j
mem_rdata_word > new_ascii_instr
mem_rdata_word > cpu_state
mem_rdata_word < dbg_ascii_state
mem_rdata_word > alu_add_sub
mem_rdata_word > alu_shl
mem_rdata_word > alu_shr
decoded_rs2 < decoded_imm_j
decoded_rs2 < new_ascii_instr
decoded_rs2 <= cpu_state
decoded_rs2 < dbg_ascii_state
decoded_rs2 < alu_add_sub
decoded_rs2 != alu_shl
decoded_rs2 != alu_shr
decoded_imm_j > new_ascii_instr
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j > alu_add_sub
decoded_imm_j != alu_shl
decoded_imm_j > alu_shr
new_ascii_instr > alu_add_sub
new_ascii_instr != alu_shl
new_ascii_instr > alu_shr
cpu_state < alu_add_sub
alu_shl % cpu_state == 0
cpu_state != alu_shl
cpu_state != alu_shr
dbg_ascii_state > alu_add_sub
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
alu_add_sub >= alu_shr
alu_shl >= alu_shr
mem_addr - 66 * mem_wdata + 3 * count_cycle - 107 == 0
mem_addr - 48 * mem_wdata + 12 * count_instr - 80 == 0
mem_addr - 66 * mem_la_wdata + 3 * count_cycle - 41 == 0
mem_addr - 48 * mem_la_wdata + 12 * count_instr - 32 == 0
mem_addr - 8 * count_cycle + 44 * count_instr - 8 == 0
mem_addr + 3 * count_cycle - 66 * alu_add_sub + 67279 == 0
mem_addr + 12 * count_instr - 48 * alu_add_sub + 48928 == 0
6 * mem_wdata - count_cycle + 4 * count_instr + 9 == 0
66 * mem_wdata - 3 * count_cycle - reg_pc + 103 == 0
11534336 * mem_wdata - 524288 * count_cycle - next_insn_opcode + 17342499 == 0
2.3564399826E10 * mem_wdata - 1071109083 * count_cycle - mem_rdata_word + 3.5346640958E10 == 0
22 * mem_wdata - count_cycle - 2 * decoded_rs2 + 33 == 0
22 * mem_wdata - count_cycle - 2 * decoded_imm_j + 81953 == 0
48 * mem_wdata - 12 * count_instr - reg_pc + 76 == 0
8388608 * mem_wdata - 2097152 * count_instr - next_insn_opcode + 12623907 == 0
1.7137745328E10 * mem_wdata - 4.284436332E9 * count_instr - mem_rdata_word + 2.5706659211E10 == 0
8 * mem_wdata - 2 * count_instr - decoded_rs2 + 12 == 0
8 * mem_wdata - 2 * count_instr - decoded_imm_j + 40972 == 0
6 * mem_la_wdata - count_cycle + 4 * count_instr + 3 == 0
66 * mem_la_wdata - 3 * count_cycle - reg_pc + 37 == 0
11534336 * mem_la_wdata - 524288 * count_cycle - next_insn_opcode + 5808163 == 0
2.3564399826E10 * mem_la_wdata - 1071109083 * count_cycle - mem_rdata_word + 1.1782241132E10 == 0
22 * mem_la_wdata - count_cycle - 2 * decoded_rs2 + 11 == 0
22 * mem_la_wdata - count_cycle - 2 * decoded_imm_j + 81931 == 0
48 * mem_la_wdata - 12 * count_instr - reg_pc + 28 == 0
8388608 * mem_la_wdata - 2097152 * count_instr - next_insn_opcode + 4235299 == 0
1.7137745328E10 * mem_la_wdata - 4.284436332E9 * count_instr - mem_rdata_word + 8.568913883E9 == 0
8 * mem_la_wdata - 2 * count_instr - decoded_rs2 + 4 == 0
8 * mem_la_wdata - 2 * count_instr - decoded_imm_j + 40964 == 0
8 * count_cycle - 44 * count_instr - reg_pc + 4 == 0
4194304 * count_cycle - 23068672 * count_instr - 3 * next_insn_opcode + 122985 == 0
2.856290888E9 * count_cycle - 1.5709599884E10 * count_instr - mem_rdata_word + 41219 == 0
4 * count_cycle - 22 * count_instr - 3 * decoded_rs2 == 0
4 * count_cycle - 22 * count_instr - 3 * decoded_imm_j + 122880 == 0
count_cycle - 4 * count_instr - 6 * alu_add_sub + 6117 == 0
3 * count_cycle + reg_pc - 66 * alu_add_sub + 67283 == 0
524288 * count_cycle + next_insn_opcode - 11534336 * alu_add_sub + 1.1759214557E10 == 0
1071109083 * count_cycle + mem_rdata_word - 2.3564399826E10 * alu_add_sub + 2.4023905581388E13 == 0
count_cycle + 2 * decoded_rs2 - 22 * alu_add_sub + 22429 == 0
count_cycle + 2 * decoded_imm_j - 22 * alu_add_sub - 59491 == 0
12 * count_instr + reg_pc - 48 * alu_add_sub + 48932 == 0
2097152 * count_instr + next_insn_opcode - 8388608 * alu_add_sub + 8.552144861E9 == 0
4.284436332E9 * count_instr + mem_rdata_word - 1.7137745328E10 * alu_add_sub + 1.7471931320677E13 == 0
2 * count_instr + decoded_rs2 - 8 * alu_add_sub + 8156 == 0
2 * count_instr + decoded_imm_j - 8 * alu_add_sub - 32804 == 0
===========================================================================
..tick():::EXIT
trap == mem_valid
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_state
trap == mem_wordsize
trap == mem_do_prefetch
trap == mem_do_rinst
trap == mem_do_rdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == last_mem_valid
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lw
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_addi
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoded_imm
trap == decoder_trigger_q
trap == decoder_pseudo_trigger
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_lui_auipc_jal
trap == is_slli_srli_srai
trap == is_jalr_addi_slti_sltiu_xori_ori_andi
trap == is_sb_sh_sw
trap == is_sll_srl_sra
trap == is_lui_auipc_jal_jalr_addi_add_sub
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_lbu_lhu_lw
trap == is_alu_reg_imm
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_insn_imm
trap == dbg_insn_rd
trap == q_insn_imm
trap == q_insn_rd
trap == dbg_next
trap == cached_insn_imm
trap == cached_insn_rd
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == latched_store
trap == latched_stalu
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == latched_rd
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == alu_eq
trap == alu_ltu
trap == alu_lts
trap == clear_prefetched_high_word_q
trap == cpuregs_write
trap == orig(trap)
trap == orig(mem_wstrb)
trap == orig(pcpi_valid)
trap == orig(eoi)
trap == orig(trace_valid)
trap == orig(irq_delay)
trap == orig(irq_active)
trap == orig(timer)
trap == orig(pcpi_int_wr)
trap == orig(pcpi_int_wait)
trap == orig(pcpi_int_ready)
trap == orig(mem_wordsize)
trap == orig(mem_do_rdata)
trap == orig(mem_do_wdata)
trap == orig(mem_la_secondword)
trap == orig(mem_la_firstword_reg)
trap == orig(prefetched_high_word)
trap == orig(clear_prefetched_high_word)
trap == orig(instr_lui)
trap == orig(instr_auipc)
trap == orig(instr_jal)
trap == orig(instr_jalr)
trap == orig(instr_beq)
trap == orig(instr_bne)
trap == orig(instr_blt)
trap == orig(instr_bge)
trap == orig(instr_bltu)
trap == orig(instr_bgeu)
trap == orig(instr_lb)
trap == orig(instr_lh)
trap == orig(instr_lw)
trap == orig(instr_lbu)
trap == orig(instr_lhu)
trap == orig(instr_sb)
trap == orig(instr_sh)
trap == orig(instr_addi)
trap == orig(instr_slti)
trap == orig(instr_sltiu)
trap == orig(instr_xori)
trap == orig(instr_ori)
trap == orig(instr_andi)
trap == orig(instr_slli)
trap == orig(instr_srli)
trap == orig(instr_srai)
trap == orig(instr_add)
trap == orig(instr_sub)
trap == orig(instr_sll)
trap == orig(instr_slt)
trap == orig(instr_sltu)
trap == orig(instr_xor)
trap == orig(instr_srl)
trap == orig(instr_sra)
trap == orig(instr_or)
trap == orig(instr_and)
trap == orig(instr_rdcycle)
trap == orig(instr_rdcycleh)
trap == orig(instr_rdinstr)
trap == orig(instr_rdinstrh)
trap == orig(instr_ecall_ebreak)
trap == orig(instr_getq)
trap == orig(instr_setq)
trap == orig(instr_retirq)
trap == orig(instr_maskirq)
trap == orig(instr_waitirq)
trap == orig(instr_timer)
trap == orig(decoded_rd)
trap == orig(decoded_imm)
trap == orig(decoder_trigger)
trap == orig(decoder_trigger_q)
trap == orig(decoder_pseudo_trigger)
trap == orig(decoder_pseudo_trigger_q)
trap == orig(compressed_instr)
trap == orig(is_lui_auipc_jal)
trap == orig(is_lb_lh_lw_lbu_lhu)
trap == orig(is_slli_srli_srai)
trap == orig(is_jalr_addi_slti_sltiu_xori_ori_andi)
trap == orig(is_sll_srl_sra)
trap == orig(is_lui_auipc_jal_jalr_addi_add_sub)
trap == orig(is_slti_blt_slt)
trap == orig(is_sltiu_bltu_sltu)
trap == orig(is_beq_bne_blt_bge_bltu_bgeu)
trap == orig(is_lbu_lhu_lw)
trap == orig(is_alu_reg_imm)
trap == orig(is_alu_reg_reg)
trap == orig(is_compare)
trap == orig(dbg_insn_imm)
trap == orig(dbg_insn_rd)
trap == orig(q_insn_imm)
trap == orig(q_insn_rd)
trap == orig(dbg_next)
trap == orig(cached_insn_imm)
trap == orig(cached_insn_rd)
trap == orig(irq_state)
trap == orig(set_mem_do_rinst)
trap == orig(set_mem_do_rdata)
trap == orig(set_mem_do_wdata)
trap == orig(latched_store)
trap == orig(latched_stalu)
trap == orig(latched_branch)
trap == orig(latched_compr)
trap == orig(latched_trace)
trap == orig(latched_is_lu)
trap == orig(latched_is_lh)
trap == orig(latched_is_lb)
trap == orig(latched_rd)
trap == orig(pcpi_timeout)
trap == orig(do_waitirq)
trap == orig(alu_wait)
trap == orig(alu_wait_2)
trap == orig(alu_eq)
trap == orig(alu_ltu)
trap == orig(alu_lts)
trap == orig(clear_prefetched_high_word_q)
trap == orig(cpuregs_write)
mem_instr == mem_do_wdata
mem_instr == instr_sw
mem_instr == decoder_trigger
mem_instr == dbg_insn_rs1
mem_instr == dbg_rs1val_valid
mem_instr == dbg_rs2val_valid
mem_instr == q_insn_rs1
mem_instr == dbg_valid_insn
mem_instr == cached_insn_rs1
mem_instr == set_mem_do_wdata
mem_instr == orig(mem_valid)
mem_instr == orig(mem_instr)
mem_instr == orig(mem_state)
mem_instr == orig(mem_do_prefetch)
mem_instr == orig(mem_do_rinst)
mem_instr == orig(last_mem_valid)
mem_instr == orig(instr_sw)
mem_instr == orig(decoded_rs1)
mem_instr == orig(is_sb_sh_sw)
mem_instr == orig(dbg_insn_rs1)
mem_instr == orig(dbg_rs1val_valid)
mem_instr == orig(dbg_rs2val_valid)
mem_instr == orig(q_insn_rs1)
mem_instr == orig(dbg_valid_insn)
mem_instr == orig(cached_insn_rs1)
mem_addr == reg_next_pc
mem_addr == orig(mem_addr)
mem_addr == orig(reg_next_pc)
mem_wdata == orig(mem_wdata)
mem_la_wdata == reg_op2
mem_la_wdata == dbg_rs2val
mem_la_wdata == orig(mem_la_wdata)
mem_la_wdata == orig(reg_op2)
mem_la_wdata == orig(dbg_rs2val)
mem_la_wdata == orig(cpuregs_rs2)
mem_la_wstrb == orig(mem_la_wstrb)
pcpi_insn == trace_data
pcpi_insn == reg_out
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out
pcpi_insn == alu_out_q
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == cpuregs_wrdata
pcpi_insn == decoded_rs
pcpi_insn == orig(pcpi_insn)
pcpi_insn == orig(trace_data)
pcpi_insn == orig(reg_out)
pcpi_insn == orig(reg_sh)
pcpi_insn == orig(irq_pending)
pcpi_insn == orig(pcpi_int_rd)
pcpi_insn == orig(mem_16bit_buffer)
pcpi_insn == orig(current_pc)
pcpi_insn == orig(pcpi_timeout_counter)
pcpi_insn == orig(next_irq_pending)
pcpi_insn == orig(alu_out)
pcpi_insn == orig(alu_out_q)
pcpi_insn == orig(alu_out_0)
pcpi_insn == orig(alu_out_0_q)
pcpi_insn == orig(cpuregs_wrdata)
pcpi_insn == orig(decoded_rs)
count_instr == orig(count_instr)
reg_pc == dbg_insn_addr
reg_pc == orig(reg_pc)
reg_pc == orig(dbg_insn_addr)
reg_op1 == dbg_rs1val
reg_op1 == orig(reg_op1)
reg_op1 == orig(dbg_rs1val)
reg_op1 == orig(cpuregs_rs1)
next_insn_opcode == mem_rdata_word
next_insn_opcode == mem_rdata_q
next_insn_opcode == orig(mem_rdata_word)
dbg_insn_opcode == q_insn_opcode
dbg_insn_opcode == cached_insn_opcode
dbg_insn_opcode == orig(next_insn_opcode)
dbg_insn_opcode == orig(dbg_insn_opcode)
dbg_insn_opcode == orig(mem_rdata_q)
dbg_insn_opcode == orig(q_insn_opcode)
dbg_insn_opcode == orig(cached_insn_opcode)
irq_mask == orig(irq_mask)
new_ascii_instr == dbg_ascii_instr
new_ascii_instr == q_ascii_instr
new_ascii_instr == cached_ascii_instr
new_ascii_instr == orig(new_ascii_instr)
new_ascii_instr == orig(dbg_ascii_instr)
new_ascii_instr == orig(q_ascii_instr)
new_ascii_instr == orig(cached_ascii_instr)
dbg_insn_rs2 == q_insn_rs2
dbg_insn_rs2 == cached_insn_rs2
dbg_insn_rs2 == orig(decoded_rs2)
dbg_insn_rs2 == orig(dbg_insn_rs2)
dbg_insn_rs2 == orig(q_insn_rs2)
dbg_insn_rs2 == orig(cached_insn_rs2)
cpu_state == orig(cpu_state)
dbg_ascii_state == orig(dbg_ascii_state)
alu_add_sub == orig(alu_add_sub)
alu_shl == orig(alu_shl)
alu_shr == orig(alu_shr)
trap == 0
mem_instr == 1
mem_addr one of { 8, 20 }
mem_la_wstrb == 15
pcpi_insn == -1
reg_pc one of { 4, 16 }
reg_op1 == 1020
next_insn_opcode one of { 41219, 4284477551L }
dbg_insn_opcode one of { 40995, 2138147 }
irq_mask == 4294967295L
instr_jal one of { 0, 1 }
decoded_rd one of { 0, 2 }
decoded_rs1 one of { 1, 31 }
decoded_rs2 one of { 0, 21 }
decoded_imm_j one of { 40960, 4294967284L }
is_lb_lh_lw_lbu_lhu one of { 0, 1 }
new_ascii_instr == 29559
dbg_insn_rs2 one of { 0, 2 }
cpu_state == 2
dbg_ascii_state == 495874565485L
alu_shr >= 0
cpuregs_rs1 one of { -1, 1020 }
cpuregs_rs2 one of { -1, 0 }
trap < mem_addr
trap <= mem_la_wdata
trap < count_cycle
trap < count_instr
trap < reg_pc
trap < next_insn_opcode
trap < dbg_insn_opcode
trap <= instr_jal
trap <= decoded_rd
trap < decoded_rs1
trap <= decoded_rs2
trap < decoded_imm_j
trap <= is_lb_lh_lw_lbu_lhu
trap <= dbg_insn_rs2
trap < alu_add_sub
trap <= alu_shl
trap <= alu_shr
trap != cpuregs_rs1
trap >= cpuregs_rs2
trap < orig(count_cycle)
trap < orig(decoded_imm_j)
mem_instr < mem_addr
mem_instr < count_cycle
mem_instr < count_instr
mem_instr < reg_pc
mem_instr < next_insn_opcode
mem_instr < dbg_insn_opcode
mem_instr >= instr_jal
mem_instr != decoded_rd
mem_instr <= decoded_rs1
mem_instr != decoded_rs2
mem_instr < decoded_imm_j
mem_instr >= is_lb_lh_lw_lbu_lhu
mem_instr != dbg_insn_rs2
mem_instr < alu_add_sub
mem_instr != alu_shl
mem_instr != cpuregs_rs1
mem_instr > cpuregs_rs2
mem_instr < orig(count_cycle)
mem_instr < orig(decoded_imm_j)
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr < count_cycle
mem_addr != count_instr
mem_addr > reg_pc
mem_addr < reg_op1
mem_addr < next_insn_opcode
mem_addr < dbg_insn_opcode
mem_addr < irq_mask
mem_addr > instr_jal
mem_addr > decoded_rd
mem_addr != decoded_rs1
mem_addr != decoded_rs2
mem_addr < decoded_imm_j
mem_addr > is_lb_lh_lw_lbu_lhu
mem_addr < new_ascii_instr
mem_addr > dbg_insn_rs2
mem_addr > cpu_state
mem_addr < dbg_ascii_state
mem_addr < alu_add_sub
mem_addr != alu_shl
mem_addr != alu_shr
mem_addr != cpuregs_rs1
mem_addr > cpuregs_rs2
mem_addr < orig(count_cycle)
mem_addr < orig(decoded_imm_j)
mem_wdata - mem_la_wdata + 1 == 0
mem_wdata >= pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata < reg_op1
mem_wdata < next_insn_opcode
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata < decoded_imm_j
mem_wdata < new_ascii_instr
mem_wdata < dbg_ascii_state
mem_wdata - alu_add_sub + 1021 == 0
mem_wdata != alu_shl
mem_wdata != alu_shr
mem_wdata != cpuregs_rs1
mem_wdata != cpuregs_rs2
mem_wdata < orig(count_cycle)
mem_wdata < orig(decoded_imm_j)
mem_la_wdata > pcpi_insn
mem_la_wdata < count_cycle
mem_la_wdata < count_instr
mem_la_wdata < reg_op1
mem_la_wdata < next_insn_opcode
mem_la_wdata < dbg_insn_opcode
mem_la_wdata < irq_mask
mem_la_wdata >= instr_jal
mem_la_wdata != decoded_rd
mem_la_wdata < decoded_imm_j
mem_la_wdata != is_lb_lh_lw_lbu_lhu
mem_la_wdata < new_ascii_instr
mem_la_wdata < dbg_ascii_state
mem_la_wdata - alu_add_sub + 1020 == 0
mem_la_wdata != alu_shl
mem_la_wdata != cpuregs_rs1
mem_la_wdata % cpuregs_rs1 == 0
mem_la_wdata >= cpuregs_rs2
mem_la_wdata < orig(count_cycle)
mem_la_wdata < orig(decoded_imm_j)
mem_la_wstrb != count_cycle
mem_la_wstrb != count_instr
mem_la_wstrb != reg_pc
mem_la_wstrb < next_insn_opcode
mem_la_wstrb < dbg_insn_opcode
mem_la_wstrb > instr_jal
mem_la_wstrb > decoded_rd
mem_la_wstrb != decoded_rs1
mem_la_wstrb != decoded_rs2
mem_la_wstrb < decoded_imm_j
mem_la_wstrb > is_lb_lh_lw_lbu_lhu
mem_la_wstrb > dbg_insn_rs2
mem_la_wstrb < alu_add_sub
mem_la_wstrb != alu_shl
mem_la_wstrb != cpuregs_rs1
mem_la_wstrb > cpuregs_rs2
mem_la_wstrb != orig(count_cycle)
mem_la_wstrb < orig(decoded_imm_j)
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < next_insn_opcode
pcpi_insn < dbg_insn_opcode
pcpi_insn < instr_jal
pcpi_insn < decoded_rd
pcpi_insn < decoded_rs1
pcpi_insn < decoded_rs2
pcpi_insn < decoded_imm_j
pcpi_insn < is_lb_lh_lw_lbu_lhu
pcpi_insn < dbg_insn_rs2
pcpi_insn < alu_add_sub
pcpi_insn < alu_shl
pcpi_insn < alu_shr
pcpi_insn <= cpuregs_rs1
pcpi_insn <= cpuregs_rs2
pcpi_insn < orig(count_cycle)
pcpi_insn < orig(decoded_imm_j)
count_cycle > count_instr
count_cycle > reg_pc
count_cycle < reg_op1
count_cycle < next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle < irq_mask
count_cycle > instr_jal
count_cycle > decoded_rd
count_cycle != decoded_rs1
count_cycle > decoded_rs2
count_cycle < decoded_imm_j
count_cycle > is_lb_lh_lw_lbu_lhu
count_cycle < new_ascii_instr
count_cycle > dbg_insn_rs2
count_cycle % cpu_state == 0
count_cycle > cpu_state
count_cycle < dbg_ascii_state
count_cycle < alu_add_sub
count_cycle != alu_shl
count_cycle != alu_shr
count_cycle != cpuregs_rs1
count_cycle > cpuregs_rs2
count_cycle - orig(count_cycle) - 1 == 0
count_cycle < orig(decoded_imm_j)
count_instr != reg_pc
count_instr < reg_op1
count_instr < next_insn_opcode
count_instr < dbg_insn_opcode
count_instr < irq_mask
count_instr > instr_jal
count_instr >= decoded_rd
decoded_rd % count_instr == 0
count_instr != decoded_rs1
count_instr < decoded_imm_j
count_instr > is_lb_lh_lw_lbu_lhu
count_instr < new_ascii_instr
count_instr > dbg_insn_rs2
count_instr >= cpu_state
count_instr < dbg_ascii_state
count_instr < alu_add_sub
count_instr != alu_shl
count_instr != alu_shr
count_instr != cpuregs_rs1
count_instr > cpuregs_rs2
count_instr < orig(count_cycle)
count_instr < orig(decoded_imm_j)
reg_pc < reg_op1
reg_pc < next_insn_opcode
reg_pc < dbg_insn_opcode
reg_pc < irq_mask
reg_pc > instr_jal
reg_pc > decoded_rd
reg_pc != decoded_rs1
reg_pc != decoded_rs2
reg_pc < decoded_imm_j
reg_pc > is_lb_lh_lw_lbu_lhu
reg_pc < new_ascii_instr
reg_pc > dbg_insn_rs2
reg_pc > cpu_state
reg_pc < dbg_ascii_state
reg_pc < alu_add_sub
reg_pc != alu_shl
reg_pc != alu_shr
reg_pc != cpuregs_rs1
reg_pc > cpuregs_rs2
reg_pc < orig(count_cycle)
reg_pc < orig(decoded_imm_j)
reg_op1 < next_insn_opcode
reg_op1 < dbg_insn_opcode
reg_op1 > instr_jal
reg_op1 > decoded_rd
reg_op1 > decoded_rs1
reg_op1 > decoded_rs2
reg_op1 < decoded_imm_j
reg_op1 > is_lb_lh_lw_lbu_lhu
reg_op1 > dbg_insn_rs2
reg_op1 <= alu_add_sub
reg_op1 >= alu_shr
reg_op1 >= cpuregs_rs1
reg_op1 > cpuregs_rs2
reg_op1 > orig(count_cycle)
reg_op1 < orig(decoded_imm_j)
next_insn_opcode > dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode > instr_jal
next_insn_opcode > decoded_rd
next_insn_opcode > decoded_rs1
next_insn_opcode > decoded_rs2
next_insn_opcode != decoded_imm_j
next_insn_opcode > is_lb_lh_lw_lbu_lhu
next_insn_opcode > new_ascii_instr
next_insn_opcode > dbg_insn_rs2
next_insn_opcode > cpu_state
next_insn_opcode < dbg_ascii_state
next_insn_opcode > alu_add_sub
next_insn_opcode > alu_shl
next_insn_opcode > alu_shr
next_insn_opcode > cpuregs_rs1
next_insn_opcode > cpuregs_rs2
next_insn_opcode > orig(count_cycle)
next_insn_opcode > orig(decoded_imm_j)
dbg_insn_opcode < irq_mask
dbg_insn_opcode > instr_jal
dbg_insn_opcode > decoded_rd
dbg_insn_opcode > decoded_rs1
dbg_insn_opcode > decoded_rs2
dbg_insn_opcode != decoded_imm_j
dbg_insn_opcode > is_lb_lh_lw_lbu_lhu
dbg_insn_opcode > new_ascii_instr
dbg_insn_opcode > dbg_insn_rs2
dbg_insn_opcode > cpu_state
dbg_insn_opcode < dbg_ascii_state
dbg_insn_opcode > alu_add_sub
dbg_insn_opcode != alu_shl
dbg_insn_opcode > alu_shr
dbg_insn_opcode > cpuregs_rs1
dbg_insn_opcode > cpuregs_rs2
dbg_insn_opcode > orig(count_cycle)
dbg_insn_opcode > orig(decoded_imm_j)
irq_mask > instr_jal
irq_mask > decoded_rd
irq_mask > decoded_rs1
irq_mask > decoded_rs2
irq_mask > decoded_imm_j
irq_mask > is_lb_lh_lw_lbu_lhu
irq_mask > dbg_insn_rs2
irq_mask > alu_add_sub
irq_mask > alu_shl
irq_mask > alu_shr
irq_mask > cpuregs_rs1
irq_mask > cpuregs_rs2
irq_mask > orig(count_cycle)
irq_mask > orig(decoded_imm_j)
instr_jal != decoded_rd
instr_jal < decoded_rs1
instr_jal <= decoded_rs2
instr_jal < decoded_imm_j
instr_jal != is_lb_lh_lw_lbu_lhu
instr_jal < new_ascii_instr
instr_jal <= dbg_insn_rs2
instr_jal < cpu_state
instr_jal < dbg_ascii_state
instr_jal < alu_add_sub
instr_jal != alu_shl
instr_jal != cpuregs_rs1
instr_jal >= cpuregs_rs2
instr_jal < orig(count_cycle)
instr_jal < orig(decoded_imm_j)
decoded_rd != decoded_rs1
decoded_rd != decoded_rs2
decoded_rd < decoded_imm_j
decoded_rd >= is_lb_lh_lw_lbu_lhu
decoded_rd < new_ascii_instr
decoded_rd != dbg_insn_rs2
decoded_rd <= cpu_state
decoded_rd < dbg_ascii_state
decoded_rd < alu_add_sub
decoded_rd <= alu_shl
decoded_rd <= alu_shr
decoded_rd != cpuregs_rs1
decoded_rd > cpuregs_rs2
decoded_rd < orig(count_cycle)
decoded_rd < orig(decoded_imm_j)
decoded_rs1 > decoded_rs2
decoded_rs1 < decoded_imm_j
decoded_rs1 >= is_lb_lh_lw_lbu_lhu
decoded_rs1 < new_ascii_instr
decoded_rs1 > dbg_insn_rs2
decoded_rs1 != cpu_state
decoded_rs1 < dbg_ascii_state
decoded_rs1 < alu_add_sub
decoded_rs1 != alu_shl
decoded_rs1 != cpuregs_rs1
decoded_rs1 > cpuregs_rs2
decoded_rs1 != orig(count_cycle)
decoded_rs1 < orig(decoded_imm_j)
decoded_rs2 < decoded_imm_j
decoded_rs2 != is_lb_lh_lw_lbu_lhu
decoded_rs2 < new_ascii_instr
decoded_rs2 >= dbg_insn_rs2
decoded_rs2 != cpu_state
decoded_rs2 < dbg_ascii_state
decoded_rs2 < alu_add_sub
decoded_rs2 != alu_shl
decoded_rs2 != alu_shr
decoded_rs2 != cpuregs_rs1
decoded_rs2 >= cpuregs_rs2
decoded_rs2 < orig(count_cycle)
decoded_rs2 < orig(decoded_imm_j)
decoded_imm_j > is_lb_lh_lw_lbu_lhu
decoded_imm_j > new_ascii_instr
decoded_imm_j > dbg_insn_rs2
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j > alu_add_sub
decoded_imm_j > alu_shl
decoded_imm_j > alu_shr
decoded_imm_j > cpuregs_rs1
decoded_imm_j > cpuregs_rs2
decoded_imm_j > orig(count_cycle)
decoded_imm_j >= orig(decoded_imm_j)
is_lb_lh_lw_lbu_lhu < new_ascii_instr
is_lb_lh_lw_lbu_lhu != dbg_insn_rs2
is_lb_lh_lw_lbu_lhu < cpu_state
is_lb_lh_lw_lbu_lhu < dbg_ascii_state
is_lb_lh_lw_lbu_lhu < alu_add_sub
is_lb_lh_lw_lbu_lhu <= alu_shl
is_lb_lh_lw_lbu_lhu <= alu_shr
is_lb_lh_lw_lbu_lhu != cpuregs_rs1
is_lb_lh_lw_lbu_lhu > cpuregs_rs2
is_lb_lh_lw_lbu_lhu < orig(count_cycle)
is_lb_lh_lw_lbu_lhu < orig(decoded_imm_j)
new_ascii_instr > dbg_insn_rs2
new_ascii_instr > alu_add_sub
new_ascii_instr != alu_shl
new_ascii_instr > alu_shr
new_ascii_instr > cpuregs_rs1
new_ascii_instr > cpuregs_rs2
new_ascii_instr > orig(count_cycle)
new_ascii_instr < orig(decoded_imm_j)
dbg_insn_rs2 <= cpu_state
dbg_insn_rs2 < dbg_ascii_state
dbg_insn_rs2 < alu_add_sub
dbg_insn_rs2 != alu_shl
dbg_insn_rs2 != alu_shr
dbg_insn_rs2 != cpuregs_rs1
dbg_insn_rs2 >= cpuregs_rs2
dbg_insn_rs2 < orig(count_cycle)
dbg_insn_rs2 < orig(decoded_imm_j)
cpu_state < alu_add_sub
alu_shl % cpu_state == 0
cpu_state != alu_shl
cpu_state != alu_shr
cpu_state != cpuregs_rs1
cpu_state > cpuregs_rs2
cpu_state < orig(count_cycle)
cpu_state < orig(decoded_imm_j)
dbg_ascii_state > alu_add_sub
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
dbg_ascii_state > cpuregs_rs1
dbg_ascii_state > cpuregs_rs2
dbg_ascii_state > orig(count_cycle)
dbg_ascii_state > orig(decoded_imm_j)
alu_add_sub >= alu_shr
alu_add_sub % cpuregs_rs1 == 0
alu_add_sub >= cpuregs_rs1
alu_add_sub > cpuregs_rs2
alu_add_sub > orig(count_cycle)
alu_add_sub < orig(decoded_imm_j)
alu_shl >= alu_shr
alu_shl % cpuregs_rs1 == 0
alu_shl >= cpuregs_rs1
alu_shl > cpuregs_rs2
alu_shl != orig(count_cycle)
alu_shl != orig(decoded_imm_j)
alu_shr % cpuregs_rs1 == 0
alu_shr >= cpuregs_rs1
alu_shr > cpuregs_rs2
alu_shr != orig(count_cycle)
alu_shr < orig(decoded_imm_j)
cpuregs_rs1 >= cpuregs_rs2
cpuregs_rs1 != orig(count_cycle)
cpuregs_rs1 < orig(decoded_imm_j)
cpuregs_rs2 < orig(count_cycle)
cpuregs_rs2 < orig(decoded_imm_j)
mem_addr - 66 * mem_wdata + 3 * count_cycle - 110 == 0
mem_addr - 48 * mem_wdata + 12 * count_instr - 80 == 0
mem_addr - 66 * mem_wdata + 3 * orig(count_cycle) - 107 == 0
mem_addr - 66 * mem_la_wdata + 3 * count_cycle - 44 == 0
mem_addr - 48 * mem_la_wdata + 12 * count_instr - 32 == 0
mem_addr - 66 * mem_la_wdata + 3 * orig(count_cycle) - 41 == 0
mem_addr - 8 * count_cycle + 44 * count_instr == 0
mem_addr + 3 * count_cycle - 66 * alu_add_sub + 67276 == 0
mem_addr + 12 * count_instr - 48 * alu_add_sub + 48928 == 0
mem_addr + 44 * count_instr - 8 * orig(count_cycle) - 8 == 0
mem_addr - 66 * alu_add_sub + 3 * orig(count_cycle) + 67279 == 0
6 * mem_wdata - count_cycle + 4 * count_instr + 10 == 0
66 * mem_wdata - 3 * count_cycle - reg_pc + 106 == 0
2.3564399826E10 * mem_wdata - 1071109083 * count_cycle - next_insn_opcode + 3.6417750041E10 == 0
11534336 * mem_wdata - 524288 * count_cycle - dbg_insn_opcode + 17866787 == 0
22 * mem_wdata - count_cycle - 4 * instr_jal + 34 == 0
22 * mem_wdata - count_cycle + 2 * decoded_rd + 30 == 0
330 * mem_wdata - 15 * count_cycle - 2 * decoded_rs1 + 512 == 0
462 * mem_wdata - 21 * count_cycle - 4 * decoded_rs2 + 714 == 0
2.3622094782E10 * mem_wdata - 1073731581 * count_cycle - decoded_imm_j + 3.6506914714E10 == 0
22 * mem_wdata - count_cycle + 4 * is_lb_lh_lw_lbu_lhu + 30 == 0
22 * mem_wdata - count_cycle - 2 * dbg_insn_rs2 + 34 == 0
22462 * mem_wdata - 1021 * count_cycle + 4 * cpuregs_rs1 + 30634 == 0
22 * mem_wdata - count_cycle + 4 * cpuregs_rs2 + 34 == 0
22 * mem_wdata - count_cycle - 2 * orig(decoded_imm_j) + 81954 == 0
48 * mem_wdata - 12 * count_instr - reg_pc + 76 == 0
1.7137745328E10 * mem_wdata - 4.284436332E9 * count_instr - next_insn_opcode + 2.5706659211E10 == 0
8388608 * mem_wdata - 2097152 * count_instr - dbg_insn_opcode + 12623907 == 0
4 * mem_wdata - count_instr - instr_jal + 6 == 0
8 * mem_wdata - 2 * count_instr + decoded_rd + 10 == 0
120 * mem_wdata - 30 * count_instr - decoded_rs1 + 181 == 0
84 * mem_wdata - 21 * count_instr - decoded_rs2 + 126 == 0
1.7179705296E10 * mem_wdata - 4.294926324E9 * count_instr - decoded_imm_j + 2.5769598904E10 == 0
4 * mem_wdata - count_instr + is_lb_lh_lw_lbu_lhu + 5 == 0
8 * mem_wdata - 2 * count_instr - dbg_insn_rs2 + 12 == 0
4084 * mem_wdata - 1021 * count_instr + cpuregs_rs1 + 5106 == 0
4 * mem_wdata - count_instr + cpuregs_rs2 + 6 == 0
6 * mem_wdata + 4 * count_instr - orig(count_cycle) + 9 == 0
8 * mem_wdata - 2 * count_instr - orig(decoded_imm_j) + 40972 == 0
66 * mem_wdata - reg_pc - 3 * orig(count_cycle) + 103 == 0
2.3564399826E10 * mem_wdata - next_insn_opcode - 1071109083 * orig(count_cycle) + 3.5346640958E10 == 0
11534336 * mem_wdata - dbg_insn_opcode - 524288 * orig(count_cycle) + 17342499 == 0
22 * mem_wdata - 4 * instr_jal - orig(count_cycle) + 33 == 0
22 * mem_wdata + 2 * decoded_rd - orig(count_cycle) + 29 == 0
330 * mem_wdata - 2 * decoded_rs1 - 15 * orig(count_cycle) + 497 == 0
462 * mem_wdata - 4 * decoded_rs2 - 21 * orig(count_cycle) + 693 == 0
2.3622094782E10 * mem_wdata - decoded_imm_j - 1073731581 * orig(count_cycle) + 3.5433183133E10 == 0
22 * mem_wdata + 4 * is_lb_lh_lw_lbu_lhu - orig(count_cycle) + 29 == 0
22 * mem_wdata - 2 * dbg_insn_rs2 - orig(count_cycle) + 33 == 0
22462 * mem_wdata + 4 * cpuregs_rs1 - 1021 * orig(count_cycle) + 29613 == 0
22 * mem_wdata + 4 * cpuregs_rs2 - orig(count_cycle) + 33 == 0
22 * mem_wdata - orig(count_cycle) - 2 * orig(decoded_imm_j) + 81953 == 0
6 * mem_la_wdata - count_cycle + 4 * count_instr + 4 == 0
66 * mem_la_wdata - 3 * count_cycle - reg_pc + 40 == 0
2.3564399826E10 * mem_la_wdata - 1071109083 * count_cycle - next_insn_opcode + 1.2853350215E10 == 0
11534336 * mem_la_wdata - 524288 * count_cycle - dbg_insn_opcode + 6332451 == 0
22 * mem_la_wdata - count_cycle - 4 * instr_jal + 12 == 0
22 * mem_la_wdata - count_cycle + 2 * decoded_rd + 8 == 0
330 * mem_la_wdata - 15 * count_cycle - 2 * decoded_rs1 + 182 == 0
462 * mem_la_wdata - 21 * count_cycle - 4 * decoded_rs2 + 252 == 0
2.3622094782E10 * mem_la_wdata - 1073731581 * count_cycle - decoded_imm_j + 1.2884819932E10 == 0
22 * mem_la_wdata - count_cycle + 4 * is_lb_lh_lw_lbu_lhu + 8 == 0
22 * mem_la_wdata - count_cycle - 2 * dbg_insn_rs2 + 12 == 0
22462 * mem_la_wdata - 1021 * count_cycle + 4 * cpuregs_rs1 + 8172 == 0
22 * mem_la_wdata - count_cycle + 4 * cpuregs_rs2 + 12 == 0
22 * mem_la_wdata - count_cycle - 2 * orig(decoded_imm_j) + 81932 == 0
48 * mem_la_wdata - 12 * count_instr - reg_pc + 28 == 0
1.7137745328E10 * mem_la_wdata - 4.284436332E9 * count_instr - next_insn_opcode + 8.568913883E9 == 0
8388608 * mem_la_wdata - 2097152 * count_instr - dbg_insn_opcode + 4235299 == 0
4 * mem_la_wdata - count_instr - instr_jal + 2 == 0
8 * mem_la_wdata - 2 * count_instr + decoded_rd + 2 == 0
120 * mem_la_wdata - 30 * count_instr - decoded_rs1 + 61 == 0
84 * mem_la_wdata - 21 * count_instr - decoded_rs2 + 42 == 0
1.7179705296E10 * mem_la_wdata - 4.294926324E9 * count_instr - decoded_imm_j + 8.589893608E9 == 0
4 * mem_la_wdata - count_instr + is_lb_lh_lw_lbu_lhu + 1 == 0
8 * mem_la_wdata - 2 * count_instr - dbg_insn_rs2 + 4 == 0
4084 * mem_la_wdata - 1021 * count_instr + cpuregs_rs1 + 1022 == 0
4 * mem_la_wdata - count_instr + cpuregs_rs2 + 2 == 0
6 * mem_la_wdata + 4 * count_instr - orig(count_cycle) + 3 == 0
8 * mem_la_wdata - 2 * count_instr - orig(decoded_imm_j) + 40964 == 0
66 * mem_la_wdata - reg_pc - 3 * orig(count_cycle) + 37 == 0
2.3564399826E10 * mem_la_wdata - next_insn_opcode - 1071109083 * orig(count_cycle) + 1.1782241132E10 == 0
11534336 * mem_la_wdata - dbg_insn_opcode - 524288 * orig(count_cycle) + 5808163 == 0
22 * mem_la_wdata - 4 * instr_jal - orig(count_cycle) + 11 == 0
22 * mem_la_wdata + 2 * decoded_rd - orig(count_cycle) + 7 == 0
330 * mem_la_wdata - 2 * decoded_rs1 - 15 * orig(count_cycle) + 167 == 0
462 * mem_la_wdata - 4 * decoded_rs2 - 21 * orig(count_cycle) + 231 == 0
2.3622094782E10 * mem_la_wdata - decoded_imm_j - 1073731581 * orig(count_cycle) + 1.1811088351E10 == 0
22 * mem_la_wdata + 4 * is_lb_lh_lw_lbu_lhu - orig(count_cycle) + 7 == 0
22 * mem_la_wdata - 2 * dbg_insn_rs2 - orig(count_cycle) + 11 == 0
22462 * mem_la_wdata + 4 * cpuregs_rs1 - 1021 * orig(count_cycle) + 7151 == 0
22 * mem_la_wdata + 4 * cpuregs_rs2 - orig(count_cycle) + 11 == 0
22 * mem_la_wdata - orig(count_cycle) - 2 * orig(decoded_imm_j) + 81931 == 0
8 * count_cycle - 44 * count_instr - reg_pc - 4 == 0
2.856290888E9 * count_cycle - 1.5709599884E10 * count_instr - next_insn_opcode - 2.856249669E9 == 0
4194304 * count_cycle - 23068672 * count_instr - 3 * dbg_insn_opcode - 4071319 == 0
2 * count_cycle - 11 * count_instr - 3 * instr_jal - 2 == 0
4 * count_cycle - 22 * count_instr + 3 * decoded_rd - 10 == 0
20 * count_cycle - 110 * count_instr - decoded_rs1 - 19 == 0
14 * count_cycle - 77 * count_instr - decoded_rs2 - 14 == 0
2.863284216E9 * count_cycle - 1.5748063188E10 * count_instr - decoded_imm_j - 2.863243256E9 == 0
2 * count_cycle - 11 * count_instr + 3 * is_lb_lh_lw_lbu_lhu - 5 == 0
4 * count_cycle - 22 * count_instr - 3 * dbg_insn_rs2 - 4 == 0
count_cycle - 4 * count_instr - 6 * alu_add_sub + 6116 == 0
2042 * count_cycle - 11231 * count_instr + 3 * cpuregs_rs1 - 5102 == 0
2 * count_cycle - 11 * count_instr + 3 * cpuregs_rs2 - 2 == 0
4 * count_cycle - 22 * count_instr - 3 * orig(decoded_imm_j) + 122876 == 0
3 * count_cycle + reg_pc - 66 * alu_add_sub + 67280 == 0
1071109083 * count_cycle + next_insn_opcode - 2.3564399826E10 * alu_add_sub + 2.4022834472305E13 == 0
524288 * count_cycle + dbg_insn_opcode - 11534336 * alu_add_sub + 1.1758690269E10 == 0
count_cycle + 4 * instr_jal - 22 * alu_add_sub + 22428 == 0
count_cycle - 2 * decoded_rd - 22 * alu_add_sub + 22432 == 0
15 * count_cycle + 2 * decoded_rs1 - 330 * alu_add_sub + 336418 == 0
21 * count_cycle + 4 * decoded_rs2 - 462 * alu_add_sub + 470988 == 0
1073731581 * count_cycle + decoded_imm_j - 2.3622094782E10 * alu_add_sub + 2.4081651857708E13 == 0
count_cycle - 4 * is_lb_lh_lw_lbu_lhu - 22 * alu_add_sub + 22432 == 0
count_cycle + 2 * dbg_insn_rs2 - 22 * alu_add_sub + 22428 == 0
1021 * count_cycle - 22462 * alu_add_sub - 4 * cpuregs_rs1 + 22903068 == 0
count_cycle - 22 * alu_add_sub - 4 * cpuregs_rs2 + 22428 == 0
count_cycle - 22 * alu_add_sub + 2 * orig(decoded_imm_j) - 59492 == 0
12 * count_instr + reg_pc - 48 * alu_add_sub + 48932 == 0
44 * count_instr + reg_pc - 8 * orig(count_cycle) - 4 == 0
4.284436332E9 * count_instr + next_insn_opcode - 1.7137745328E10 * alu_add_sub + 1.7471931320677E13 == 0
1.5709599884E10 * count_instr + next_insn_opcode - 2.856290888E9 * orig(count_cycle) - 41219 == 0
2097152 * count_instr + dbg_insn_opcode - 8388608 * alu_add_sub + 8.552144861E9 == 0
23068672 * count_instr + 3 * dbg_insn_opcode - 4194304 * orig(count_cycle) - 122985 == 0
count_instr + instr_jal - 4 * alu_add_sub + 4078 == 0
11 * count_instr + 3 * instr_jal - 2 * orig(count_cycle) == 0
2 * count_instr - decoded_rd - 8 * alu_add_sub + 8158 == 0
22 * count_instr - 3 * decoded_rd - 4 * orig(count_cycle) + 6 == 0
30 * count_instr + decoded_rs1 - 120 * alu_add_sub + 122339 == 0
110 * count_instr + decoded_rs1 - 20 * orig(count_cycle) - 1 == 0
21 * count_instr + decoded_rs2 - 84 * alu_add_sub + 85638 == 0
77 * count_instr + decoded_rs2 - 14 * orig(count_cycle) == 0
4.294926324E9 * count_instr + decoded_imm_j - 1.7179705296E10 * alu_add_sub + 1.7514709508312E13 == 0
1.5748063188E10 * count_instr + decoded_imm_j - 2.863284216E9 * orig(count_cycle) - 40960 == 0
count_instr - is_lb_lh_lw_lbu_lhu - 4 * alu_add_sub + 4079 == 0
11 * count_instr - 3 * is_lb_lh_lw_lbu_lhu - 2 * orig(count_cycle) + 3 == 0
2 * count_instr + dbg_insn_rs2 - 8 * alu_add_sub + 8156 == 0
22 * count_instr + 3 * dbg_insn_rs2 - 4 * orig(count_cycle) == 0
1021 * count_instr - 4084 * alu_add_sub - cpuregs_rs1 + 4164658 == 0
count_instr - 4 * alu_add_sub - cpuregs_rs2 + 4078 == 0
4 * count_instr + 6 * alu_add_sub - orig(count_cycle) - 6117 == 0
2 * count_instr - 8 * alu_add_sub + orig(decoded_imm_j) - 32804 == 0
11231 * count_instr - 3 * cpuregs_rs1 - 2042 * orig(count_cycle) + 3060 == 0
11 * count_instr - 3 * cpuregs_rs2 - 2 * orig(count_cycle) == 0
22 * count_instr - 4 * orig(count_cycle) + 3 * orig(decoded_imm_j) - 122880 == 0
reg_pc - 66 * alu_add_sub + 3 * orig(count_cycle) + 67283 == 0
next_insn_opcode - 2.3564399826E10 * alu_add_sub + 1071109083 * orig(count_cycle) + 2.4023905581388E13 == 0
dbg_insn_opcode - 11534336 * alu_add_sub + 524288 * orig(count_cycle) + 1.1759214557E10 == 0
4 * instr_jal - 22 * alu_add_sub + orig(count_cycle) + 22429 == 0
2 * decoded_rd + 22 * alu_add_sub - orig(count_cycle) - 22433 == 0
2 * decoded_rs1 - 330 * alu_add_sub + 15 * orig(count_cycle) + 336433 == 0
4 * decoded_rs2 - 462 * alu_add_sub + 21 * orig(count_cycle) + 471009 == 0
decoded_imm_j - 2.3622094782E10 * alu_add_sub + 1073731581 * orig(count_cycle) + 2.4082725589289E13 == 0
4 * is_lb_lh_lw_lbu_lhu + 22 * alu_add_sub - orig(count_cycle) - 22433 == 0
2 * dbg_insn_rs2 - 22 * alu_add_sub + orig(count_cycle) + 22429 == 0
22462 * alu_add_sub + 4 * cpuregs_rs1 - 1021 * orig(count_cycle) - 22904089 == 0
22 * alu_add_sub + 4 * cpuregs_rs2 - orig(count_cycle) - 22429 == 0
22 * alu_add_sub - orig(count_cycle) - 2 * orig(decoded_imm_j) + 59491 == 0
Exiting Daikon.
