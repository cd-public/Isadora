Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files .(read 1 decls file)
Processing trace data; reading 70 dtrace files:

===========================================================================
..tick():::ENTER
trap == mem_valid
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_state
trap == mem_wordsize
trap == mem_do_prefetch
trap == mem_do_rinst
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == last_mem_valid
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jal
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lw
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_sw
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoder_trigger_q
trap == decoder_pseudo_trigger_q
trap == compressed_instr
trap == is_slli_srli_srai
trap == is_sll_srl_sra
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_lbu_lhu_lw
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_rs2val_valid
trap == dbg_next
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_stalu
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == clear_prefetched_high_word_q
mem_la_wdata == reg_op2
pcpi_insn == trace_data
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == dbg_rs2val
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == decoded_rs
reg_out == cpuregs_wrdata
next_insn_opcode == mem_rdata_word
next_insn_opcode == mem_rdata_q
dbg_insn_opcode == q_insn_opcode
instr_addi == is_jalr_addi_slti_sltiu_xori_ori_andi
instr_addi == dbg_rs1val_valid
decoded_imm == cached_insn_imm
decoder_trigger == is_lui_auipc_jal_jalr_addi_add_sub
decoder_trigger == dbg_valid_insn
decoder_pseudo_trigger == is_alu_reg_imm
decoder_pseudo_trigger == latched_store
decoder_pseudo_trigger == latched_is_lu
decoder_pseudo_trigger == cpuregs_write
is_lui_auipc_jal == is_lb_lh_lw_lbu_lhu
dbg_ascii_instr == q_ascii_instr
dbg_insn_imm == q_insn_imm
dbg_insn_rs1 == q_insn_rs1
dbg_insn_rs2 == q_insn_rs2
dbg_insn_rd == q_insn_rd
dbg_insn_rd == cached_insn_rd
dbg_insn_rd == latched_rd
alu_out == alu_out_q
alu_out == alu_add_sub
alu_eq == alu_ltu
alu_eq == alu_lts
trap == 0
mem_instr one of { 0, 1 }
mem_addr one of { 8, 16, 1020 }
mem_la_wdata >= -1
mem_la_wstrb == 15
pcpi_insn == -1
reg_pc one of { 8, 16 }
reg_next_pc one of { 8, 12, 16 }
reg_out >= -1
dbg_insn_opcode one of { 41219, 1114387, 4284477551L }
dbg_insn_addr one of { 8, 12, 20 }
irq_mask == 4294967295L
instr_addi one of { 0, 1 }
decoded_rd one of { 0, 2 }
decoded_rs1 one of { 1, 2 }
decoded_rs2 one of { 0, 1, 2 }
decoded_imm one of { 1, 4294967284L }
decoded_imm_j one of { 40960, 40962, 67584 }
decoder_trigger == 1
decoder_pseudo_trigger one of { 0, 1 }
is_lui_auipc_jal one of { 0, 1 }
is_sb_sh_sw one of { 0, 1 }
new_ascii_instr one of { 0, 1633969257 }
dbg_ascii_instr one of { 27767, 6971756, 1633969257 }
dbg_insn_imm one of { 0, 1, 4294967284L }
dbg_insn_rs1 one of { 1, 2, 31 }
dbg_insn_rs2 one of { 0, 1, 21 }
dbg_insn_rd one of { 0, 2 }
cached_ascii_instr one of { 6971756, 1633969257 }
cached_insn_rs1 one of { 2, 31 }
cached_insn_rs2 one of { 1, 21 }
cpu_state == 64
dbg_ascii_state == 439788790632L
alu_out >= -1
alu_shl >= -1
alu_shr >= -1
alu_eq one of { -1, 0 }
trap <= mem_instr
trap < mem_addr
trap <= mem_wdata
trap != mem_la_wdata
trap < count_cycle
trap < count_instr
trap < reg_pc
trap < reg_next_pc
trap < reg_op1
trap <= next_insn_opcode
trap < dbg_insn_opcode
trap < dbg_insn_addr
trap <= instr_addi
trap <= decoded_rd
trap < decoded_rs1
trap <= decoded_rs2
trap < decoded_imm
trap < decoded_imm_j
trap <= decoder_pseudo_trigger
trap <= is_lui_auipc_jal
trap <= is_sb_sh_sw
trap <= new_ascii_instr
trap < dbg_ascii_instr
trap <= dbg_insn_imm
trap < dbg_insn_rs1
trap <= dbg_insn_rs2
trap <= dbg_insn_rd
trap != dbg_rs1val
trap < cached_ascii_instr
trap < cached_insn_opcode
trap < cached_insn_rs1
trap < cached_insn_rs2
trap != alu_out
trap != alu_shl
trap >= alu_eq
trap != cpuregs_rs1
trap <= cpuregs_rs2
mem_instr < mem_addr
mem_instr <= mem_wdata
mem_instr < mem_la_wstrb
mem_instr > pcpi_insn
mem_instr < count_cycle
mem_instr < count_instr
mem_instr < reg_pc
mem_instr < reg_next_pc
mem_instr < reg_op1
mem_instr <= next_insn_opcode
mem_instr < dbg_insn_opcode
mem_instr < dbg_insn_addr
mem_instr < irq_mask
mem_instr != decoded_rd
mem_instr <= decoded_rs1
mem_instr != decoded_rs2
mem_instr <= decoded_imm
mem_instr < decoded_imm_j
mem_instr <= decoder_trigger
mem_instr != decoder_pseudo_trigger
mem_instr >= is_lui_auipc_jal
mem_instr >= is_sb_sh_sw
mem_instr != new_ascii_instr
mem_instr < dbg_ascii_instr
mem_instr <= dbg_insn_imm
mem_instr < dbg_insn_rs1
mem_instr <= dbg_insn_rs2
mem_instr != dbg_insn_rd
mem_instr != dbg_rs1val
mem_instr < cached_ascii_instr
mem_instr < cached_insn_opcode
mem_instr < cached_insn_rs1
mem_instr <= cached_insn_rs2
mem_instr < cpu_state
mem_instr < dbg_ascii_state
mem_instr != alu_out
mem_instr != alu_shl
mem_instr != alu_shr
mem_instr > alu_eq
mem_instr != cpuregs_rs1
mem_instr != cpuregs_rs2
mem_addr != mem_la_wdata
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr != count_cycle
mem_addr != count_instr
mem_addr >= reg_pc
mem_addr % reg_next_pc == 0
mem_addr >= reg_next_pc
mem_addr > reg_out
mem_addr != next_insn_opcode
mem_addr < dbg_insn_opcode
mem_addr != dbg_insn_addr
mem_addr < irq_mask
mem_addr > instr_addi
mem_addr > decoded_rd
mem_addr % decoded_rs1 == 0
mem_addr > decoded_rs1
mem_addr > decoded_rs2
mem_addr != decoded_imm
mem_addr < decoded_imm_j
mem_addr > decoder_trigger
mem_addr > decoder_pseudo_trigger
mem_addr > is_lui_auipc_jal
mem_addr > is_sb_sh_sw
mem_addr != new_ascii_instr
mem_addr < dbg_ascii_instr
mem_addr != dbg_insn_imm
mem_addr != dbg_insn_rs1
mem_addr != dbg_insn_rs2
mem_addr > dbg_insn_rd
mem_addr < cached_ascii_instr
mem_addr != cached_insn_rs1
mem_addr != cached_insn_rs2
mem_addr != cpu_state
mem_addr < dbg_ascii_state
mem_addr != alu_shr
mem_addr > alu_eq
mem_addr != cpuregs_rs1
mem_wdata % mem_la_wdata == 0
mem_wdata >= mem_la_wdata
mem_wdata > pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata <= reg_op1
mem_wdata >= reg_out
mem_wdata <= next_insn_opcode
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata < decoded_imm_j
mem_wdata >= is_lui_auipc_jal
mem_wdata >= is_sb_sh_sw
mem_wdata != new_ascii_instr
mem_wdata < dbg_ascii_instr
mem_wdata < cached_ascii_instr
mem_wdata < cpu_state
mem_wdata < dbg_ascii_state
mem_wdata != alu_out
mem_wdata != alu_shl
mem_wdata > alu_shr
mem_wdata > alu_eq
mem_wdata != cpuregs_rs2
mem_la_wdata != mem_la_wstrb
mem_la_wdata >= pcpi_insn
mem_la_wdata < count_cycle
mem_la_wdata < count_instr
mem_la_wdata != reg_pc
mem_la_wdata != reg_next_pc
mem_la_wdata < reg_op1
mem_la_wdata != reg_out
mem_la_wdata < next_insn_opcode
mem_la_wdata < dbg_insn_opcode
mem_la_wdata != dbg_insn_addr
mem_la_wdata < irq_mask
instr_addi % mem_la_wdata == 0
mem_la_wdata != decoded_rd
decoded_rs2 % mem_la_wdata == 0
mem_la_wdata != decoded_rs2
mem_la_wdata <= decoded_imm
mem_la_wdata < decoded_imm_j
decoder_pseudo_trigger % mem_la_wdata == 0
mem_la_wdata != decoder_pseudo_trigger
mem_la_wdata != is_lui_auipc_jal
is_sb_sh_sw % mem_la_wdata == 0
mem_la_wdata != new_ascii_instr
new_ascii_instr % mem_la_wdata == 0
mem_la_wdata < dbg_ascii_instr
mem_la_wdata <= dbg_insn_imm
mem_la_wdata < dbg_insn_rs1
dbg_insn_rd % mem_la_wdata == 0
mem_la_wdata != dbg_insn_rd
mem_la_wdata != dbg_rs1val
mem_la_wdata < cached_ascii_instr
mem_la_wdata != cached_insn_opcode
mem_la_wdata < cached_insn_rs1
mem_la_wdata < cpu_state
mem_la_wdata < dbg_ascii_state
mem_la_wdata <= alu_out
mem_la_wdata <= alu_shl
alu_shr % mem_la_wdata == 0
alu_eq % mem_la_wdata == 0
mem_la_wdata >= alu_eq
mem_la_wdata <= cpuregs_rs1
cpuregs_rs2 % mem_la_wdata == 0
mem_la_wdata != cpuregs_rs2
mem_la_wstrb < count_cycle
mem_la_wstrb != reg_pc
mem_la_wstrb != reg_next_pc
mem_la_wstrb < dbg_insn_opcode
mem_la_wstrb != dbg_insn_addr
mem_la_wstrb > instr_addi
mem_la_wstrb > decoded_rd
mem_la_wstrb > decoded_rs1
mem_la_wstrb > decoded_rs2
mem_la_wstrb != decoded_imm
mem_la_wstrb < decoded_imm_j
mem_la_wstrb > decoder_pseudo_trigger
mem_la_wstrb > is_lui_auipc_jal
mem_la_wstrb > is_sb_sh_sw
mem_la_wstrb != new_ascii_instr
mem_la_wstrb < dbg_ascii_instr
mem_la_wstrb != dbg_insn_imm
mem_la_wstrb != dbg_insn_rs1
mem_la_wstrb != dbg_insn_rs2
mem_la_wstrb > dbg_insn_rd
mem_la_wstrb < cached_ascii_instr
mem_la_wstrb != cached_insn_rs1
mem_la_wstrb != cached_insn_rs2
mem_la_wstrb != alu_out
mem_la_wstrb != alu_shl
mem_la_wstrb > alu_eq
mem_la_wstrb != cpuregs_rs2
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < reg_next_pc
pcpi_insn < reg_op1
pcpi_insn <= reg_out
pcpi_insn < next_insn_opcode
pcpi_insn < dbg_insn_opcode
pcpi_insn < dbg_insn_addr
pcpi_insn < instr_addi
pcpi_insn < decoded_rd
pcpi_insn < decoded_rs1
pcpi_insn < decoded_rs2
pcpi_insn < decoded_imm
pcpi_insn < decoded_imm_j
pcpi_insn < decoder_pseudo_trigger
pcpi_insn < is_lui_auipc_jal
pcpi_insn < is_sb_sh_sw
pcpi_insn < new_ascii_instr
pcpi_insn < dbg_ascii_instr
pcpi_insn < dbg_insn_imm
pcpi_insn < dbg_insn_rs1
pcpi_insn < dbg_insn_rs2
pcpi_insn < dbg_insn_rd
pcpi_insn <= dbg_rs1val
pcpi_insn < cached_ascii_instr
pcpi_insn < cached_insn_opcode
pcpi_insn < cached_insn_rs1
pcpi_insn < cached_insn_rs2
pcpi_insn <= alu_out
pcpi_insn <= alu_shl
pcpi_insn <= alu_shr
pcpi_insn <= alu_eq
pcpi_insn <= cpuregs_rs1
pcpi_insn < cpuregs_rs2
count_cycle > count_instr
count_cycle > reg_pc
count_cycle > reg_next_pc
count_cycle != reg_op1
count_cycle > reg_out
count_cycle != next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle > dbg_insn_addr
count_cycle < irq_mask
count_cycle > instr_addi
count_cycle > decoded_rd
count_cycle % decoded_rs1 == 0
count_cycle > decoded_rs1
count_cycle > decoded_rs2
count_cycle != decoded_imm
count_cycle < decoded_imm_j
count_cycle > decoder_trigger
count_cycle > decoder_pseudo_trigger
count_cycle > is_lui_auipc_jal
count_cycle > is_sb_sh_sw
count_cycle != new_ascii_instr
count_cycle < dbg_ascii_instr
count_cycle != dbg_insn_imm
count_cycle > dbg_insn_rs1
count_cycle > dbg_insn_rs2
count_cycle > dbg_insn_rd
count_cycle != dbg_rs1val
count_cycle < cached_ascii_instr
count_cycle != cached_insn_opcode
count_cycle > cached_insn_rs1
count_cycle > cached_insn_rs2
count_cycle != cpu_state
count_cycle < dbg_ascii_state
count_cycle != alu_out
count_cycle != alu_shl
count_cycle > alu_shr
count_cycle > alu_eq
count_cycle != cpuregs_rs1
count_cycle != cpuregs_rs2
count_instr != reg_pc
count_instr != reg_next_pc
count_instr != reg_op1
count_instr > reg_out
count_instr != next_insn_opcode
count_instr < dbg_insn_opcode
count_instr != dbg_insn_addr
count_instr < irq_mask
count_instr > instr_addi
count_instr > decoded_rd
count_instr > decoded_rs1
count_instr > decoded_rs2
count_instr != decoded_imm
count_instr < decoded_imm_j
count_instr > decoder_trigger
count_instr > decoder_pseudo_trigger
count_instr > is_lui_auipc_jal
count_instr > is_sb_sh_sw
count_instr != new_ascii_instr
count_instr < dbg_ascii_instr
count_instr != dbg_insn_imm
count_instr > dbg_insn_rs1
count_instr > dbg_insn_rs2
count_instr > dbg_insn_rd
count_instr != dbg_rs1val
count_instr < cached_ascii_instr
count_instr != cached_insn_opcode
count_instr > cached_insn_rs1
count_instr > cached_insn_rs2
count_instr < dbg_ascii_state
count_instr != alu_out
count_instr != alu_shl
count_instr > alu_shr
count_instr > alu_eq
count_instr != cpuregs_rs1
count_instr != cpuregs_rs2
reg_pc <= reg_next_pc
reg_pc < dbg_insn_opcode
reg_pc < irq_mask
reg_pc > instr_addi
reg_pc > decoded_rd
reg_pc > decoded_rs1
reg_pc > decoded_rs2
reg_pc != decoded_imm
reg_pc < decoded_imm_j
reg_pc > decoder_trigger
reg_pc > decoder_pseudo_trigger
reg_pc > is_lui_auipc_jal
reg_pc > is_sb_sh_sw
reg_pc != new_ascii_instr
reg_pc < dbg_ascii_instr
reg_pc != dbg_insn_imm
reg_pc != dbg_insn_rs1
reg_pc != dbg_insn_rs2
reg_pc > dbg_insn_rd
reg_pc < cached_ascii_instr
reg_pc != cached_insn_rs1
reg_pc != cached_insn_rs2
reg_pc < cpu_state
reg_pc < dbg_ascii_state
reg_pc != alu_shr
reg_pc > alu_eq
reg_next_pc < dbg_insn_opcode
reg_next_pc != dbg_insn_addr
reg_next_pc < irq_mask
reg_next_pc > instr_addi
reg_next_pc > decoded_rd
reg_next_pc % decoded_rs1 == 0
reg_next_pc > decoded_rs1
reg_next_pc > decoded_rs2
reg_next_pc != decoded_imm
reg_next_pc < decoded_imm_j
reg_next_pc > decoder_trigger
reg_next_pc > decoder_pseudo_trigger
reg_next_pc > is_lui_auipc_jal
reg_next_pc > is_sb_sh_sw
reg_next_pc != new_ascii_instr
reg_next_pc < dbg_ascii_instr
reg_next_pc != dbg_insn_imm
reg_next_pc != dbg_insn_rs1
reg_next_pc != dbg_insn_rs2
reg_next_pc > dbg_insn_rd
reg_next_pc < cached_ascii_instr
reg_next_pc != cached_insn_rs1
reg_next_pc != cached_insn_rs2
reg_next_pc < cpu_state
reg_next_pc < dbg_ascii_state
reg_next_pc != alu_shr
reg_next_pc > alu_eq
reg_op1 > reg_out
reg_op1 != next_insn_opcode
reg_op1 < dbg_insn_opcode
reg_op1 < irq_mask
reg_op1 > instr_addi
reg_op1 > decoded_rd
reg_op1 % decoded_rs1 == 0
reg_op1 > decoded_rs1
reg_op1 > decoded_rs2
reg_op1 != decoded_imm
reg_op1 < decoded_imm_j
reg_op1 > decoder_trigger
reg_op1 > decoder_pseudo_trigger
reg_op1 > is_lui_auipc_jal
reg_op1 > is_sb_sh_sw
reg_op1 != new_ascii_instr
reg_op1 < dbg_ascii_instr
reg_op1 != dbg_insn_imm
reg_op1 > dbg_insn_rs1
reg_op1 > dbg_insn_rs2
reg_op1 > dbg_insn_rd
reg_op1 % dbg_rs1val == 0
reg_op1 >= dbg_rs1val
reg_op1 < cached_ascii_instr
reg_op1 > cached_insn_rs1
reg_op1 > cached_insn_rs2
reg_op1 != cpu_state
reg_op1 < dbg_ascii_state
reg_op1 != alu_out
reg_op1 != alu_shl
reg_op1 > alu_shr
reg_op1 > alu_eq
reg_out <= next_insn_opcode
reg_out < dbg_insn_opcode
reg_out < irq_mask
reg_out < decoded_imm_j
reg_out < new_ascii_instr
reg_out < dbg_ascii_instr
reg_out <= dbg_rs1val
reg_out < cached_ascii_instr
reg_out < cached_insn_opcode
reg_out < cpu_state
reg_out < dbg_ascii_state
reg_out != alu_out
reg_out != alu_shl
reg_out != alu_shr
reg_out != alu_eq
reg_out < cpuregs_rs2
next_insn_opcode != dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode != decoded_imm_j
next_insn_opcode >= is_lui_auipc_jal
next_insn_opcode >= is_sb_sh_sw
next_insn_opcode != new_ascii_instr
next_insn_opcode < dbg_ascii_instr
next_insn_opcode >= dbg_insn_rs2
next_insn_opcode != dbg_rs1val
next_insn_opcode < cached_ascii_instr
next_insn_opcode != cached_insn_opcode
next_insn_opcode != cpu_state
next_insn_opcode < dbg_ascii_state
next_insn_opcode > alu_out
next_insn_opcode != alu_shl
next_insn_opcode > alu_shr
next_insn_opcode > alu_eq
next_insn_opcode >= cpuregs_rs1
next_insn_opcode != cpuregs_rs2
dbg_insn_opcode > dbg_insn_addr
dbg_insn_opcode < irq_mask
dbg_insn_opcode > instr_addi
dbg_insn_opcode > decoded_rd
dbg_insn_opcode > decoded_rs1
dbg_insn_opcode > decoded_rs2
dbg_insn_opcode != decoded_imm
dbg_insn_opcode != decoded_imm_j
dbg_insn_opcode > decoder_trigger
dbg_insn_opcode > decoder_pseudo_trigger
dbg_insn_opcode > is_lui_auipc_jal
dbg_insn_opcode > is_sb_sh_sw
dbg_insn_opcode != new_ascii_instr
dbg_insn_opcode != dbg_ascii_instr
dbg_insn_opcode != dbg_insn_imm
dbg_insn_opcode > dbg_insn_rs1
dbg_insn_opcode > dbg_insn_rs2
dbg_insn_opcode > dbg_insn_rd
dbg_insn_opcode > dbg_rs1val
dbg_insn_opcode != cached_ascii_instr
dbg_insn_opcode != cached_insn_opcode
dbg_insn_opcode > cached_insn_rs1
dbg_insn_opcode > cached_insn_rs2
dbg_insn_opcode > cpu_state
dbg_insn_opcode < dbg_ascii_state
dbg_insn_opcode > alu_out
dbg_insn_opcode > alu_shl
dbg_insn_opcode > alu_shr
dbg_insn_opcode > alu_eq
dbg_insn_opcode > cpuregs_rs1
dbg_insn_opcode > cpuregs_rs2
dbg_insn_addr < irq_mask
dbg_insn_addr > instr_addi
dbg_insn_addr > decoded_rd
dbg_insn_addr % decoded_rs1 == 0
dbg_insn_addr > decoded_rs1
dbg_insn_addr > decoded_rs2
dbg_insn_addr != decoded_imm
dbg_insn_addr < decoded_imm_j
dbg_insn_addr > decoder_trigger
dbg_insn_addr > decoder_pseudo_trigger
dbg_insn_addr > is_lui_auipc_jal
dbg_insn_addr > is_sb_sh_sw
dbg_insn_addr != new_ascii_instr
dbg_insn_addr < dbg_ascii_instr
dbg_insn_addr != dbg_insn_imm
dbg_insn_addr != dbg_insn_rs1
dbg_insn_addr != dbg_insn_rs2
dbg_insn_addr > dbg_insn_rd
dbg_insn_addr < cached_ascii_instr
dbg_insn_addr != cached_insn_rs1
dbg_insn_addr != cached_insn_rs2
dbg_insn_addr < cpu_state
dbg_insn_addr < dbg_ascii_state
dbg_insn_addr != alu_out
dbg_insn_addr != alu_shl
dbg_insn_addr > alu_eq
dbg_insn_addr != cpuregs_rs2
irq_mask > instr_addi
irq_mask > decoded_rd
irq_mask > decoded_rs1
irq_mask > decoded_rs2
irq_mask > decoded_imm
irq_mask > decoded_imm_j
irq_mask > decoder_pseudo_trigger
irq_mask > is_lui_auipc_jal
irq_mask > is_sb_sh_sw
irq_mask > new_ascii_instr
irq_mask > dbg_ascii_instr
irq_mask > dbg_insn_imm
irq_mask > dbg_insn_rs1
irq_mask > dbg_insn_rs2
irq_mask > dbg_insn_rd
irq_mask > dbg_rs1val
irq_mask > cached_ascii_instr
irq_mask > cached_insn_opcode
irq_mask > cached_insn_rs1
irq_mask > cached_insn_rs2
irq_mask > alu_out
irq_mask > alu_shl
irq_mask > alu_shr
irq_mask > alu_eq
irq_mask > cpuregs_rs1
irq_mask > cpuregs_rs2
instr_addi != decoded_rd
instr_addi <= decoded_rs1
instr_addi <= decoded_rs2
instr_addi <= decoded_imm
instr_addi < decoded_imm_j
instr_addi <= decoder_trigger
instr_addi >= decoder_pseudo_trigger
instr_addi != is_lui_auipc_jal
instr_addi >= is_sb_sh_sw
instr_addi <= new_ascii_instr
instr_addi < dbg_ascii_instr
instr_addi <= dbg_insn_rs1
instr_addi <= dbg_insn_rd
instr_addi != dbg_rs1val
instr_addi < cached_ascii_instr
instr_addi < cached_insn_opcode
instr_addi < cached_insn_rs1
instr_addi <= cached_insn_rs2
instr_addi < cpu_state
instr_addi < dbg_ascii_state
instr_addi != alu_out
instr_addi != alu_shl
instr_addi >= alu_eq
instr_addi <= cpuregs_rs2
decoded_rd != decoded_rs2
decoded_rd != decoded_imm
decoded_rd < decoded_imm_j
decoded_rd != decoder_trigger
decoded_rd >= decoder_pseudo_trigger
decoded_rd >= is_lui_auipc_jal
decoded_rd != is_sb_sh_sw
decoded_rd != new_ascii_instr
decoded_rd < dbg_ascii_instr
decoded_rd != dbg_insn_imm
decoded_rd != dbg_insn_rs1
decoded_rd != dbg_insn_rs2
decoded_rd != dbg_rs1val
decoded_rd < cached_ascii_instr
decoded_rd < cached_insn_opcode
decoded_rd <= cached_insn_rs1
decoded_rd != cached_insn_rs2
decoded_rd < cpu_state
decoded_rd < dbg_ascii_state
decoded_rd != alu_out
decoded_rd != alu_shl
decoded_rd != alu_shr
decoded_rd >= alu_eq
decoded_rd != cpuregs_rs2
decoded_rs1 != decoded_rs2
decoded_imm_j % decoded_rs1 == 0
decoded_rs1 < decoded_imm_j
decoded_rs1 >= decoder_trigger
decoded_rs1 > decoder_pseudo_trigger
decoded_rs1 >= is_lui_auipc_jal
decoded_rs1 >= is_sb_sh_sw
decoded_rs1 != new_ascii_instr
decoded_rs1 < dbg_ascii_instr
dbg_insn_imm % decoded_rs1 == 0
decoded_rs1 != dbg_insn_rs1
dbg_insn_rs2 % decoded_rs1 == 0
dbg_rs1val % decoded_rs1 == 0
decoded_rs1 != dbg_rs1val
decoded_rs1 < cached_ascii_instr
decoded_rs1 < cached_insn_opcode
decoded_rs1 <= cached_insn_rs1
decoded_rs1 < cpu_state
decoded_rs1 < dbg_ascii_state
decoded_rs1 != alu_out
decoded_rs1 != alu_shl
decoded_rs1 != alu_shr
decoded_rs1 > alu_eq
cpuregs_rs2 % decoded_rs1 == 0
decoded_rs1 != cpuregs_rs2
decoded_rs2 % decoded_imm == 0
decoded_rs2 < decoded_imm_j
decoded_rs2 >= decoder_pseudo_trigger
decoded_rs2 != is_lui_auipc_jal
decoded_rs2 >= is_sb_sh_sw
decoded_rs2 <= new_ascii_instr
decoded_rs2 < dbg_ascii_instr
decoded_rs2 != dbg_insn_imm
decoded_rs2 % dbg_insn_rs1 == 0
decoded_rs2 <= dbg_insn_rs1
decoded_rs2 != dbg_insn_rs2
decoded_rs2 <= dbg_insn_rd
decoded_rs2 != dbg_rs1val
decoded_rs2 < cached_ascii_instr
decoded_rs2 < cached_insn_opcode
decoded_rs2 <= cached_insn_rs1
decoded_rs2 % cached_insn_rs2 == 0
decoded_rs2 < cpu_state
decoded_rs2 < dbg_ascii_state
decoded_rs2 != alu_out
decoded_rs2 != alu_shl
decoded_rs2 >= alu_eq
decoded_rs2 <= cpuregs_rs2
decoded_imm != decoded_imm_j
decoded_imm >= decoder_trigger
decoded_imm >= decoder_pseudo_trigger
decoded_imm > is_lui_auipc_jal
decoded_imm >= is_sb_sh_sw
decoded_imm != new_ascii_instr
decoded_imm != dbg_ascii_instr
dbg_insn_imm % decoded_imm == 0
decoded_imm >= dbg_insn_imm
decoded_imm >= dbg_insn_rs2
decoded_imm != dbg_insn_rd
decoded_imm != dbg_rs1val
decoded_imm != cached_ascii_instr
decoded_imm != cached_insn_opcode
decoded_imm != cached_insn_rs1
decoded_imm >= cached_insn_rs2
decoded_imm != cpu_state
decoded_imm < dbg_ascii_state
decoded_imm != alu_out
decoded_imm != alu_shl
alu_shr % decoded_imm == 0
decoded_imm != alu_shr
decoded_imm > alu_eq
cpuregs_rs2 % decoded_imm == 0
decoded_imm != cpuregs_rs2
decoded_imm_j > decoder_trigger
decoded_imm_j > decoder_pseudo_trigger
decoded_imm_j > is_lui_auipc_jal
decoded_imm_j > is_sb_sh_sw
decoded_imm_j != new_ascii_instr
decoded_imm_j != dbg_ascii_instr
decoded_imm_j != dbg_insn_imm
decoded_imm_j > dbg_insn_rs1
decoded_imm_j > dbg_insn_rs2
decoded_imm_j > dbg_insn_rd
decoded_imm_j > dbg_rs1val
decoded_imm_j < cached_ascii_instr
decoded_imm_j != cached_insn_opcode
decoded_imm_j > cached_insn_rs1
decoded_imm_j > cached_insn_rs2
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j > alu_out
decoded_imm_j != alu_shl
decoded_imm_j > alu_shr
decoded_imm_j > alu_eq
decoded_imm_j > cpuregs_rs1
decoded_imm_j > cpuregs_rs2
decoder_trigger >= decoder_pseudo_trigger
decoder_trigger >= is_lui_auipc_jal
decoder_trigger >= is_sb_sh_sw
decoder_trigger != new_ascii_instr
decoder_trigger < dbg_ascii_instr
decoder_trigger <= dbg_insn_rs1
decoder_trigger != dbg_insn_rd
decoder_trigger != dbg_rs1val
decoder_trigger < cached_ascii_instr
decoder_trigger < cached_insn_opcode
decoder_trigger < cached_insn_rs1
decoder_trigger <= cached_insn_rs2
decoder_trigger != alu_out
decoder_trigger != alu_shl
decoder_trigger != alu_shr
decoder_trigger > alu_eq
decoder_trigger != cpuregs_rs2
decoder_pseudo_trigger <= new_ascii_instr
decoder_pseudo_trigger < dbg_ascii_instr
decoder_pseudo_trigger != dbg_insn_imm
decoder_pseudo_trigger % dbg_insn_rs1 == 0
decoder_pseudo_trigger <= dbg_insn_rs1
decoder_pseudo_trigger != dbg_insn_rs2
decoder_pseudo_trigger <= dbg_insn_rd
decoder_pseudo_trigger != dbg_rs1val
decoder_pseudo_trigger < cached_ascii_instr
decoder_pseudo_trigger < cached_insn_opcode
decoder_pseudo_trigger < cached_insn_rs1
decoder_pseudo_trigger <= cached_insn_rs2
decoder_pseudo_trigger < cpu_state
decoder_pseudo_trigger < dbg_ascii_state
decoder_pseudo_trigger != alu_out
decoder_pseudo_trigger % alu_out == 0
decoder_pseudo_trigger != alu_shl
decoder_pseudo_trigger % alu_shl == 0
decoder_pseudo_trigger >= alu_eq
decoder_pseudo_trigger <= cpuregs_rs2
is_lui_auipc_jal != new_ascii_instr
is_lui_auipc_jal < dbg_ascii_instr
is_lui_auipc_jal <= dbg_insn_imm
is_lui_auipc_jal < dbg_insn_rs1
is_lui_auipc_jal <= dbg_insn_rs2
is_lui_auipc_jal != dbg_insn_rd
is_lui_auipc_jal != dbg_rs1val
is_lui_auipc_jal % dbg_rs1val == 0
is_lui_auipc_jal < cached_ascii_instr
is_lui_auipc_jal < cached_insn_opcode
is_lui_auipc_jal < cached_insn_rs1
is_lui_auipc_jal < cached_insn_rs2
is_lui_auipc_jal < cpu_state
is_lui_auipc_jal < dbg_ascii_state
is_lui_auipc_jal != alu_out
is_lui_auipc_jal != alu_shl
is_lui_auipc_jal != alu_shr
is_lui_auipc_jal >= alu_eq
is_lui_auipc_jal != cpuregs_rs1
is_lui_auipc_jal != cpuregs_rs2
is_sb_sh_sw <= new_ascii_instr
is_sb_sh_sw < dbg_ascii_instr
is_sb_sh_sw <= dbg_insn_imm
is_sb_sh_sw < dbg_insn_rs1
is_sb_sh_sw <= dbg_insn_rs2
is_sb_sh_sw <= dbg_insn_rd
is_sb_sh_sw != dbg_rs1val
is_sb_sh_sw < cached_ascii_instr
is_sb_sh_sw < cached_insn_opcode
is_sb_sh_sw < cached_insn_rs1
is_sb_sh_sw <= cached_insn_rs2
is_sb_sh_sw < cpu_state
is_sb_sh_sw < dbg_ascii_state
is_sb_sh_sw != alu_out
is_sb_sh_sw != alu_shl
is_sb_sh_sw >= alu_eq
is_sb_sh_sw != cpuregs_rs1
is_sb_sh_sw <= cpuregs_rs2
new_ascii_instr != dbg_insn_imm
new_ascii_instr != dbg_insn_rs1
new_ascii_instr != dbg_insn_rs2
new_ascii_instr >= dbg_insn_rd
new_ascii_instr > dbg_rs1val
new_ascii_instr <= cached_ascii_instr
new_ascii_instr != cached_insn_opcode
new_ascii_instr != cached_insn_rs1
new_ascii_instr != cached_insn_rs2
new_ascii_instr != cpu_state
new_ascii_instr < dbg_ascii_state
new_ascii_instr != alu_out
new_ascii_instr != alu_shl
new_ascii_instr >= alu_shr
new_ascii_instr >= alu_eq
new_ascii_instr != cpuregs_rs1
new_ascii_instr >= cpuregs_rs2
dbg_ascii_instr != dbg_insn_imm
dbg_ascii_instr > dbg_insn_rs1
dbg_ascii_instr > dbg_insn_rs2
dbg_ascii_instr > dbg_insn_rd
dbg_ascii_instr > dbg_rs1val
dbg_ascii_instr <= cached_ascii_instr
dbg_ascii_instr != cached_insn_opcode
dbg_ascii_instr > cached_insn_rs1
dbg_ascii_instr > cached_insn_rs2
dbg_ascii_instr > cpu_state
dbg_ascii_instr < dbg_ascii_state
dbg_ascii_instr > alu_out
dbg_ascii_instr != alu_shl
dbg_ascii_instr > alu_shr
dbg_ascii_instr > alu_eq
dbg_ascii_instr > cpuregs_rs1
dbg_ascii_instr > cpuregs_rs2
dbg_insn_imm != dbg_insn_rs1
dbg_insn_imm >= dbg_insn_rs2
dbg_insn_imm != dbg_insn_rd
dbg_insn_imm != dbg_rs1val
dbg_insn_imm != cached_ascii_instr
dbg_insn_imm != cached_insn_opcode
dbg_insn_imm != cached_insn_rs1
dbg_insn_imm != cpu_state
dbg_insn_imm < dbg_ascii_state
dbg_insn_imm != alu_out
dbg_insn_imm != alu_shl
dbg_insn_imm != alu_shr
dbg_insn_imm > alu_eq
dbg_insn_imm != cpuregs_rs1
dbg_insn_imm != cpuregs_rs2
dbg_insn_rs1 > dbg_insn_rs2
dbg_insn_rd % dbg_insn_rs1 == 0
dbg_insn_rs1 != dbg_rs1val
dbg_insn_rs1 < cached_ascii_instr
dbg_insn_rs1 != cached_insn_opcode
cached_insn_rs1 % dbg_insn_rs1 == 0
dbg_insn_rs1 <= cached_insn_rs1
dbg_insn_rs1 >= cached_insn_rs2
dbg_insn_rs1 < cpu_state
dbg_insn_rs1 < dbg_ascii_state
dbg_insn_rs1 != alu_out
dbg_insn_rs1 != alu_shl
dbg_insn_rs1 != alu_shr
alu_eq % dbg_insn_rs1 == 0
dbg_insn_rs1 > alu_eq
dbg_insn_rs1 != cpuregs_rs2
dbg_insn_rs2 != dbg_insn_rd
dbg_insn_rs2 != dbg_rs1val
dbg_insn_rs2 < cached_ascii_instr
dbg_insn_rs2 != cached_insn_opcode
dbg_insn_rs2 < cached_insn_rs1
dbg_insn_rs2 % cached_insn_rs2 == 0
dbg_insn_rs2 <= cached_insn_rs2
dbg_insn_rs2 < cpu_state
dbg_insn_rs2 < dbg_ascii_state
dbg_insn_rs2 != alu_out
dbg_insn_rs2 != alu_shl
dbg_insn_rs2 != alu_shr
dbg_insn_rs2 > alu_eq
dbg_insn_rs2 != cpuregs_rs1
dbg_insn_rs2 != cpuregs_rs2
dbg_insn_rd != dbg_rs1val
dbg_insn_rd < cached_ascii_instr
dbg_insn_rd < cached_insn_opcode
dbg_insn_rd <= cached_insn_rs1
dbg_insn_rd != cached_insn_rs2
dbg_insn_rd < cpu_state
dbg_insn_rd < dbg_ascii_state
dbg_insn_rd != alu_out
dbg_insn_rd != alu_shl
dbg_insn_rd >= alu_eq
dbg_insn_rd <= cpuregs_rs2
dbg_rs1val < cached_ascii_instr
dbg_rs1val <= cached_insn_opcode
dbg_rs1val != cached_insn_rs1
dbg_rs1val != cached_insn_rs2
dbg_rs1val != cpu_state
dbg_rs1val < dbg_ascii_state
dbg_rs1val != alu_out
dbg_rs1val != alu_shl
dbg_rs1val != alu_shr
dbg_rs1val != alu_eq
dbg_rs1val != cpuregs_rs1
dbg_rs1val <= cpuregs_rs2
cached_ascii_instr > cached_insn_opcode
cached_ascii_instr > cached_insn_rs1
cached_ascii_instr > cached_insn_rs2
cached_ascii_instr > cpu_state
cached_ascii_instr < dbg_ascii_state
cached_ascii_instr > alu_out
cached_ascii_instr != alu_shl
cached_ascii_instr > alu_shr
cached_ascii_instr > alu_eq
cached_ascii_instr > cpuregs_rs1
cached_ascii_instr > cpuregs_rs2
cached_insn_opcode != cached_insn_rs1
cached_insn_opcode != cached_insn_rs2
cached_insn_opcode != cpu_state
cached_insn_opcode < dbg_ascii_state
cached_insn_opcode != alu_out
cached_insn_opcode != alu_shl
cached_insn_opcode > alu_shr
cached_insn_opcode > alu_eq
cached_insn_opcode != cpuregs_rs1
cached_insn_opcode != cpuregs_rs2
cached_insn_rs1 > cached_insn_rs2
cached_insn_rs1 < cpu_state
cached_insn_rs1 < dbg_ascii_state
cached_insn_rs1 != alu_out
cached_insn_rs1 != alu_shl
cached_insn_rs1 != alu_shr
cached_insn_rs1 > alu_eq
cached_insn_rs1 != cpuregs_rs2
cached_insn_rs2 < cpu_state
cached_insn_rs2 < dbg_ascii_state
cached_insn_rs2 != alu_out
cached_insn_rs2 != alu_shl
alu_shr % cached_insn_rs2 == 0
cached_insn_rs2 != alu_shr
cached_insn_rs2 > alu_eq
cached_insn_rs2 != cpuregs_rs2
cpuregs_rs2 % cached_insn_rs2 == 0
cpu_state != alu_out
cpu_state != alu_shl
cpu_state > alu_shr
cpu_state > alu_eq
cpu_state != cpuregs_rs1
cpu_state != cpuregs_rs2
dbg_ascii_state > alu_out
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
dbg_ascii_state > alu_eq
dbg_ascii_state > cpuregs_rs1
dbg_ascii_state > cpuregs_rs2
alu_out <= alu_shl
alu_out >= alu_shr
alu_eq % alu_out == 0
alu_out >= alu_eq
cpuregs_rs2 % alu_out == 0
alu_shl >= alu_shr
alu_eq % alu_shl == 0
alu_shl >= alu_eq
alu_shl != cpuregs_rs2
alu_shr >= alu_eq
alu_shr <= cpuregs_rs1
alu_shr <= cpuregs_rs2
alu_eq <= cpuregs_rs1
alu_eq <= cpuregs_rs2
cpuregs_rs1 != cpuregs_rs2
2229762 * mem_instr + mem_addr + 2 * cached_insn_opcode - 2229794 == 0
3343139 * mem_instr - mem_la_wdata + 3 * cached_insn_opcode - 3343162 == 0
3 * mem_instr + 2 * count_cycle - 11 * count_instr - 11 == 0
2228750 * mem_instr + reg_pc + 2 * cached_insn_opcode - 2228782 == 0
2228754 * mem_instr + reg_next_pc + 2 * cached_insn_opcode - 2228786 == 0
13471744 * mem_instr + reg_op1 + 506 * decoded_imm_j - 34198524 == 0
281936875 * mem_instr - reg_op1 + 253 * cached_insn_opcode - 281938891 == 0
1.193322490906957E15 * mem_instr - dbg_insn_opcode + 1070840791 * cached_insn_opcode - 1.193331056518898E15 == 0
2228762 * mem_instr - dbg_insn_addr + 2 * cached_insn_opcode - 2228766 == 0
1114375 * mem_instr - 2 * decoded_rd + cached_insn_opcode - 1114383 == 0
1114377 * mem_instr + 2 * decoded_rs2 + cached_insn_opcode - 1114389 == 0
344070 * mem_instr + 13 * decoded_imm_j - 2 * dbg_rs1val - 876552 == 0
1167623 * mem_instr + 2 * decoded_imm_j + cached_insn_opcode - 1249555 == 0
13630454 * mem_instr + 512 * decoded_imm_j + alu_out - 34603007 == 0
186370 * mem_instr + 7 * decoded_imm_j - 2 * alu_shr - 473090 == 0
344072 * mem_instr + 13 * decoded_imm_j - 2 * cpuregs_rs2 - 876552 == 0
1114375 * mem_instr + 4 * is_sb_sh_sw + cached_insn_opcode - 1114387 == 0
1.813085312400919E15 * mem_instr + 4 * dbg_ascii_instr + 1626997501 * cached_insn_opcode - 1.813104864257955E15 == 0
4.786221345862261E15 * mem_instr - 4 * dbg_insn_imm + 4.294967283E9 * cached_insn_opcode - 4.786255705600521E15 == 0
32316995 * mem_instr - 4 * dbg_insn_rs1 + 29 * cached_insn_opcode - 32317219 == 0
5571896 * mem_instr - dbg_insn_rs2 + 5 * cached_insn_opcode - 5571935 == 0
10033459 * mem_instr + 4 * dbg_rs1val + 9 * cached_insn_opcode - 10033563 == 0
mem_instr + dbg_rs1val - cpuregs_rs2 == 0
285281034 * mem_instr + 256 * cached_insn_opcode - alu_out - 285283073 == 0
1114374 * mem_instr + cached_insn_opcode + alu_shr - 1114386 == 0
10033455 * mem_instr + 9 * cached_insn_opcode + 4 * cpuregs_rs2 - 10033563 == 0
mem_addr - 2229762 * decoded_rs1 + 2 * cached_insn_opcode + 2229730 == 0
1167623 * mem_addr - 4459524 * decoded_imm_j + 105484 * cached_insn_opcode + 1.82651496248E11 == 0
16 * mem_wdata - 4 * count_instr + reg_next_pc == 0
4 * mem_wdata - count_instr + decoded_rs2 + 2 == 0
mem_la_wdata + 3343139 * decoded_rs1 - 3 * cached_insn_opcode - 3343116 == 0
1167623 * mem_la_wdata + 6686278 * decoded_imm_j - 159730 * cached_insn_opcode - 2.73883209219E11 == 0
2 * count_cycle - 11 * count_instr - 3 * decoded_rs1 - 5 == 0
17748 * count_cycle - 97614 * count_instr - decoded_imm_j - 30030 == 0
2 * count_cycle - 11 * count_instr - 3 * decoder_pseudo_trigger - 8 == 0
2228758 * count_cycle - 12258169 * count_instr - 3 * cached_insn_opcode - 8915008 == 0
2 * count_cycle - 11 * count_instr + 3 * alu_eq - 8 == 0
1.193322490906957E15 * reg_pc + 2228750 * dbg_insn_opcode + 8.568872664E9 * cached_insn_opcode - 1.9095712095518872E16 == 0
1114381 * reg_pc + 1114375 * dbg_insn_addr + 12 * cached_insn_opcode - 31202692 == 0
reg_pc - 2228750 * decoded_rs1 + 2 * cached_insn_opcode + 2228718 == 0
1114377 * reg_pc - 4457500 * decoded_rs2 + 4 * cached_insn_opcode - 8915064 == 0
1167623 * reg_pc - 4457500 * decoded_imm_j + 106496 * cached_insn_opcode + 1.82568581064E11 == 0
1.813085312400919E15 * reg_pc - 8915000 * dbg_ascii_instr - 55551912 * cached_insn_opcode - 1.4442528627844408E16 == 0
4.786221345862261E15 * reg_pc + 8915000 * dbg_insn_imm + 3.4359738272E10 * cached_insn_opcode - 7.6579816420617344E16 == 0
6463399 * reg_pc + 1783000 * dbg_insn_rs1 + 48 * cached_insn_opcode - 106980768 == 0
2785948 * reg_pc + 1114375 * dbg_insn_rs2 + 21 * cached_insn_opcode - 45689711 == 0
1.193322490906957E15 * reg_next_pc + 2228754 * dbg_insn_opcode + 4.2855095E9 * cached_insn_opcode - 1.9095677833071112E16 == 0
1114381 * reg_next_pc + 1114377 * dbg_insn_addr + 8 * cached_insn_opcode - 31202684 == 0
1114375 * reg_next_pc + 4457508 * decoded_rd - 4 * cached_insn_opcode - 17829968 == 0
reg_next_pc - 2228754 * decoded_rs1 + 2 * cached_insn_opcode + 2228722 == 0
1167623 * reg_next_pc - 4457508 * decoded_imm_j + 106492 * cached_insn_opcode + 1.82568908792E11 == 0
1114375 * reg_next_pc - 8915016 * is_sb_sh_sw - 4 * cached_insn_opcode - 8914952 == 0
1.813085312400919E15 * reg_next_pc - 8915016 * dbg_ascii_instr - 6.563541916E9 * cached_insn_opcode - 1.4442450420416264E16 == 0
4.786221345862261E15 * reg_next_pc + 8915016 * dbg_insn_imm + 1.717986914E10 * cached_insn_opcode - 7.657967898166432E16 == 0
32316995 * reg_next_pc + 8915016 * dbg_insn_rs1 + 124 * cached_insn_opcode - 534902944 == 0
253268 * reg_next_pc + 101307 * dbg_insn_rs2 + cached_insn_opcode - 4153603 == 0
reg_op1 + 1021 * instr_addi - dbg_rs1val - 1021 == 0
reg_op1 - 13471744 * decoded_rs1 + 506 * decoded_imm_j - 7255036 == 0
reg_op1 + 281936875 * decoded_rs1 - 253 * cached_insn_opcode - 281934859 == 0
4.294967283E9 * reg_op1 - 1021 * decoded_imm - 4.294967283E9 * dbg_rs1val + 1021 == 0
reg_op1 + 506 * decoded_imm_j - 13471744 * decoder_pseudo_trigger - 20726780 == 0
1167623 * reg_op1 + 563873750 * decoded_imm_j - 13471744 * cached_insn_opcode - 2.3097298114532E13 == 0
reg_op1 + 506 * decoded_imm_j + 13471744 * alu_eq - 20726780 == 0
reg_op1 - 1021 * is_lui_auipc_jal - dbg_rs1val == 0
1633969257 * reg_op1 + 1021 * new_ascii_instr - 1633969257 * dbg_rs1val - 1.668282611397E12 == 0
2 * reg_op1 + 1021 * dbg_insn_rd - 2 * dbg_rs1val - 2042 == 0
1626997501 * reg_op1 - 1626997501 * dbg_rs1val + 1021 * cached_ascii_instr - 1.668282611397E12 == 0
29 * reg_op1 - 29 * dbg_rs1val - 1021 * cached_insn_rs1 + 2042 == 0
20 * reg_op1 - 20 * dbg_rs1val - 1021 * cached_insn_rs2 + 1021 == 0
2228762 * dbg_insn_opcode - 1.193322490906957E15 * dbg_insn_addr - 4.281216828E9 * cached_insn_opcode + 1.4317420437219214E16 == 0
dbg_insn_opcode + 1.193322490906957E15 * decoded_rs1 - 1070840791 * cached_insn_opcode - 1.193313925295016E15 == 0
1114377 * dbg_insn_opcode + 2.386644981813914E15 * decoded_rs2 + 2142754750 * cached_insn_opcode - 4.774548952907727E15 == 0
1114375 * dbg_insn_opcode + 4.773289963627828E15 * is_sb_sh_sw + 4.284436332E9 * cached_insn_opcode - 4.774566084131609E15 == 0
32316995 * dbg_insn_opcode - 4.773289963627828E15 * dbg_insn_rs1 - 4.252241292E9 * cached_insn_opcode + 9.510600306078928E15 == 0
5571896 * dbg_insn_opcode - 1.193322490906957E15 * dbg_insn_rs2 - 1065474951 * cached_insn_opcode + 1.187121766238813E15 == 0
1114375 * dbg_insn_addr - 4457524 * decoded_rd + 12 * cached_insn_opcode - 13372596 == 0
dbg_insn_addr + 2228762 * decoded_rs1 - 2 * cached_insn_opcode - 2228758 == 0
1114377 * dbg_insn_addr + 4457524 * decoded_rs2 + 8 * cached_insn_opcode - 22287636 == 0
1167623 * dbg_insn_addr + 4457524 * decoded_imm_j - 106484 * cached_insn_opcode - 1.82602257692E11 == 0
1114375 * dbg_insn_addr + 8915048 * is_sb_sh_sw + 12 * cached_insn_opcode - 22287644 == 0
1.813085312400919E15 * dbg_insn_addr + 8915048 * dbg_ascii_instr + 1.9579521924E10 * cached_insn_opcode - 3.632409474166576E16 == 0
4.786221345862261E15 * dbg_insn_addr - 8915048 * dbg_insn_imm + 1.7179869124E10 * cached_insn_opcode - 5.7434793580385072E16 == 0
32316995 * dbg_insn_addr - 8915048 * dbg_insn_rs1 + 108 * cached_insn_opcode - 369974708 == 0
2785948 * dbg_insn_addr - 1114381 * dbg_insn_rs2 + 9 * cached_insn_opcode - 32317067 == 0
3.4359738271E10 * instr_addi + 8 * dbg_insn_imm - alu_shr - 3.4359738272E10 == 0
2 * decoded_rd + 1114375 * decoded_rs1 - cached_insn_opcode - 1114367 == 0
1114377 * decoded_rd + 1114375 * decoded_rs2 - cached_insn_opcode - 2228742 == 0
1167623 * decoded_rd + 1114375 * decoded_imm_j - 26624 * cached_insn_opcode - 4.5646815758E10 == 0
1.813085312400919E15 * decoded_rd + 2228750 * dbg_ascii_instr + 13887978 * cached_insn_opcode - 3.641709092642574E15 == 0
1114377 * decoded_rs1 - 2 * decoded_rs2 - cached_insn_opcode - 1114365 == 0
1167623 * decoded_rs1 - 2 * decoded_imm_j - cached_insn_opcode - 1085691 == 0
13630454 * decoded_rs1 - 512 * decoded_imm_j - alu_out + 7342099 == 0
1114375 * decoded_rs1 - 4 * is_sb_sh_sw - cached_insn_opcode - 1114363 == 0
1.813085312400919E15 * decoded_rs1 - 4 * dbg_ascii_instr - 1626997501 * cached_insn_opcode - 1.813065760543883E15 == 0
4.786221345862261E15 * decoded_rs1 + 4 * dbg_insn_imm - 4.294967283E9 * cached_insn_opcode - 4.786186986124001E15 == 0
32316995 * decoded_rs1 + 4 * dbg_insn_rs1 - 29 * cached_insn_opcode - 32316771 == 0
5571896 * decoded_rs1 + dbg_insn_rs2 - 5 * cached_insn_opcode - 5571857 == 0
10033459 * decoded_rs1 - 4 * dbg_rs1val - 9 * cached_insn_opcode - 10033355 == 0
decoded_rs1 - dbg_rs1val + cpuregs_rs2 - 2 == 0
285281034 * decoded_rs1 - 256 * cached_insn_opcode + alu_out - 285278995 == 0
1114374 * decoded_rs1 - cached_insn_opcode - alu_shr - 1114362 == 0
10033455 * decoded_rs1 - 9 * cached_insn_opcode - 4 * cpuregs_rs2 - 10033347 == 0
1167623 * decoded_rs2 - 1114377 * decoded_imm_j + 26623 * cached_insn_opcode + 4.5644562444E10 == 0
4.786221345862261E15 * decoded_rs2 + 2228754 * dbg_insn_imm + 4.294967285E9 * cached_insn_opcode - 9.572477053691556E15 == 0
32316995 * decoded_rs2 + 2228754 * dbg_insn_rs1 + 31 * cached_insn_opcode - 69091746 == 0
1013072 * decoded_rs2 + 101307 * dbg_insn_rs2 + cached_insn_opcode - 2127459 == 0
512 * decoded_imm_j - 13630454 * decoder_pseudo_trigger + alu_out - 20972553 == 0
1114375 * decoded_imm_j - 2335246 * is_sb_sh_sw - 26624 * cached_insn_opcode - 4.5644480512E10 == 0
32316995 * decoded_imm_j + 2335246 * dbg_insn_rs1 - 772036 * cached_insn_opcode - 1.323767243394E12 == 0
11143792 * decoded_imm_j + 1167623 * dbg_insn_rs2 - 266219 * cached_insn_opcode - 4.56471045775E11 == 0
13 * decoded_imm_j - 344072 * dbg_rs1val + 344070 * cpuregs_rs2 - 876552 == 0
570562068 * decoded_imm_j - 13630454 * cached_insn_opcode + 1167623 * alu_out - 2.3371264894391E13 == 0
512 * decoded_imm_j + alu_out + 13630454 * alu_eq - 20972553 == 0
decoder_pseudo_trigger - dbg_rs1val + cpuregs_rs2 - 1 == 0
1.813085312400919E15 * is_sb_sh_sw - 1114375 * dbg_ascii_instr - 6943989 * cached_insn_opcode + 7.769233920368E12 == 0
4.786221345862261E15 * is_sb_sh_sw + 1114375 * dbg_insn_imm + 4.294967284E9 * cached_insn_opcode - 4.786255706714908E15 == 0
6463399 * is_sb_sh_sw + 222875 * dbg_insn_rs1 + 6 * cached_insn_opcode - 6909197 == 0
22287584 * is_sb_sh_sw + 1114375 * dbg_insn_rs2 + 21 * cached_insn_opcode - 23402127 == 0
32316995 * dbg_ascii_instr + 1.813085312400919E15 * dbg_insn_rs1 + 4.9011300711E10 * cached_insn_opcode - 5.643153902383024E16 == 0
22287584 * dbg_ascii_instr + 1.813085312400919E15 * dbg_insn_rs2 + 3.4305827301E10 * cached_insn_opcode - 3.8230586827824416E16 == 0
32316995 * dbg_insn_imm - 4.786221345862261E15 * dbg_insn_rs1 - 4.294967254E9 * cached_insn_opcode + 9.57247701914556E15 == 0
22287584 * dbg_insn_imm - 4.786221345862261E15 * dbg_insn_rs2 - 4.294967263E9 * cached_insn_opcode + 4.786255683312781E15 == 0
16 * dbg_insn_imm + 3.4359738271E10 * dbg_insn_rd - 2 * alu_shr - 6.8719476544E10 == 0
232 * dbg_insn_imm - 3.4359738271E10 * cached_insn_rs1 - 29 * alu_shr + 6.8719476513E10 == 0
160 * dbg_insn_imm - 3.4359738271E10 * cached_insn_rs2 - 20 * alu_shr + 3.4359738251E10 == 0
22287584 * dbg_insn_rs1 - 32316995 * dbg_insn_rs2 - 9 * cached_insn_opcode - 12258101 == 0
1114375 * dbg_rs1val - cached_insn_opcode - 1114375 * cpuregs_rs2 + 1114387 == 0
dbg_rs1val + alu_eq - cpuregs_rs2 + 1 == 0
===========================================================================
..tick():::EXIT
trap == mem_valid
trap == mem_wstrb
trap == pcpi_valid
trap == eoi
trap == trace_valid
trap == irq_delay
trap == irq_active
trap == timer
trap == pcpi_int_wr
trap == pcpi_int_wait
trap == pcpi_int_ready
trap == mem_state
trap == mem_wordsize
trap == mem_do_rinst
trap == mem_do_rdata
trap == mem_do_wdata
trap == mem_la_secondword
trap == mem_la_firstword_reg
trap == last_mem_valid
trap == prefetched_high_word
trap == clear_prefetched_high_word
trap == instr_lui
trap == instr_auipc
trap == instr_jal
trap == instr_jalr
trap == instr_beq
trap == instr_bne
trap == instr_blt
trap == instr_bge
trap == instr_bltu
trap == instr_bgeu
trap == instr_lb
trap == instr_lh
trap == instr_lbu
trap == instr_lhu
trap == instr_sb
trap == instr_sh
trap == instr_slti
trap == instr_sltiu
trap == instr_xori
trap == instr_ori
trap == instr_andi
trap == instr_slli
trap == instr_srli
trap == instr_srai
trap == instr_add
trap == instr_sub
trap == instr_sll
trap == instr_slt
trap == instr_sltu
trap == instr_xor
trap == instr_srl
trap == instr_sra
trap == instr_or
trap == instr_and
trap == instr_rdcycle
trap == instr_rdcycleh
trap == instr_rdinstr
trap == instr_rdinstrh
trap == instr_ecall_ebreak
trap == instr_getq
trap == instr_setq
trap == instr_retirq
trap == instr_maskirq
trap == instr_waitirq
trap == instr_timer
trap == decoder_trigger
trap == decoder_pseudo_trigger
trap == compressed_instr
trap == is_lui_auipc_jal
trap == is_slli_srli_srai
trap == is_sll_srl_sra
trap == is_slti_blt_slt
trap == is_sltiu_bltu_sltu
trap == is_beq_bne_blt_bge_bltu_bgeu
trap == is_lbu_lhu_lw
trap == is_alu_reg_reg
trap == is_compare
trap == dbg_rs1val_valid
trap == dbg_rs2val_valid
trap == irq_state
trap == set_mem_do_rinst
trap == set_mem_do_rdata
trap == set_mem_do_wdata
trap == latched_store
trap == latched_stalu
trap == latched_branch
trap == latched_compr
trap == latched_trace
trap == latched_is_lu
trap == latched_is_lh
trap == latched_is_lb
trap == pcpi_timeout
trap == do_waitirq
trap == alu_wait
trap == alu_wait_2
trap == clear_prefetched_high_word_q
trap == cpuregs_write
trap == orig(trap)
trap == orig(mem_valid)
trap == orig(mem_wstrb)
trap == orig(pcpi_valid)
trap == orig(eoi)
trap == orig(trace_valid)
trap == orig(irq_delay)
trap == orig(irq_active)
trap == orig(timer)
trap == orig(pcpi_int_wr)
trap == orig(pcpi_int_wait)
trap == orig(pcpi_int_ready)
trap == orig(mem_state)
trap == orig(mem_wordsize)
trap == orig(mem_do_prefetch)
trap == orig(mem_do_rinst)
trap == orig(mem_do_rdata)
trap == orig(mem_do_wdata)
trap == orig(mem_la_secondword)
trap == orig(mem_la_firstword_reg)
trap == orig(last_mem_valid)
trap == orig(prefetched_high_word)
trap == orig(clear_prefetched_high_word)
trap == orig(instr_lui)
trap == orig(instr_auipc)
trap == orig(instr_jal)
trap == orig(instr_jalr)
trap == orig(instr_beq)
trap == orig(instr_bne)
trap == orig(instr_blt)
trap == orig(instr_bge)
trap == orig(instr_bltu)
trap == orig(instr_bgeu)
trap == orig(instr_lb)
trap == orig(instr_lh)
trap == orig(instr_lw)
trap == orig(instr_lbu)
trap == orig(instr_lhu)
trap == orig(instr_sb)
trap == orig(instr_sh)
trap == orig(instr_sw)
trap == orig(instr_slti)
trap == orig(instr_sltiu)
trap == orig(instr_xori)
trap == orig(instr_ori)
trap == orig(instr_andi)
trap == orig(instr_slli)
trap == orig(instr_srli)
trap == orig(instr_srai)
trap == orig(instr_add)
trap == orig(instr_sub)
trap == orig(instr_sll)
trap == orig(instr_slt)
trap == orig(instr_sltu)
trap == orig(instr_xor)
trap == orig(instr_srl)
trap == orig(instr_sra)
trap == orig(instr_or)
trap == orig(instr_and)
trap == orig(instr_rdcycle)
trap == orig(instr_rdcycleh)
trap == orig(instr_rdinstr)
trap == orig(instr_rdinstrh)
trap == orig(instr_ecall_ebreak)
trap == orig(instr_getq)
trap == orig(instr_setq)
trap == orig(instr_retirq)
trap == orig(instr_maskirq)
trap == orig(instr_waitirq)
trap == orig(instr_timer)
trap == orig(decoder_trigger_q)
trap == orig(decoder_pseudo_trigger_q)
trap == orig(compressed_instr)
trap == orig(is_slli_srli_srai)
trap == orig(is_sll_srl_sra)
trap == orig(is_slti_blt_slt)
trap == orig(is_sltiu_bltu_sltu)
trap == orig(is_beq_bne_blt_bge_bltu_bgeu)
trap == orig(is_lbu_lhu_lw)
trap == orig(is_alu_reg_reg)
trap == orig(is_compare)
trap == orig(dbg_rs2val_valid)
trap == orig(dbg_next)
trap == orig(irq_state)
trap == orig(set_mem_do_rinst)
trap == orig(set_mem_do_rdata)
trap == orig(set_mem_do_wdata)
trap == orig(latched_stalu)
trap == orig(latched_branch)
trap == orig(latched_compr)
trap == orig(latched_trace)
trap == orig(latched_is_lh)
trap == orig(latched_is_lb)
trap == orig(pcpi_timeout)
trap == orig(do_waitirq)
trap == orig(alu_wait)
trap == orig(alu_wait_2)
trap == orig(clear_prefetched_high_word_q)
mem_instr == orig(mem_instr)
mem_addr == orig(mem_addr)
mem_wdata == orig(mem_wdata)
mem_la_wdata == reg_op2
mem_la_wdata == orig(mem_la_wdata)
mem_la_wdata == orig(reg_op2)
mem_la_wstrb == orig(mem_la_wstrb)
pcpi_insn == trace_data
pcpi_insn == reg_out
pcpi_insn == reg_sh
pcpi_insn == irq_pending
pcpi_insn == pcpi_int_rd
pcpi_insn == mem_16bit_buffer
pcpi_insn == dbg_rs1val
pcpi_insn == dbg_rs2val
pcpi_insn == current_pc
pcpi_insn == pcpi_timeout_counter
pcpi_insn == next_irq_pending
pcpi_insn == alu_out
pcpi_insn == alu_out_0
pcpi_insn == alu_out_0_q
pcpi_insn == cpuregs_wrdata
pcpi_insn == decoded_rs
pcpi_insn == orig(pcpi_insn)
pcpi_insn == orig(trace_data)
pcpi_insn == orig(reg_sh)
pcpi_insn == orig(irq_pending)
pcpi_insn == orig(pcpi_int_rd)
pcpi_insn == orig(mem_16bit_buffer)
pcpi_insn == orig(dbg_rs2val)
pcpi_insn == orig(current_pc)
pcpi_insn == orig(pcpi_timeout_counter)
pcpi_insn == orig(next_irq_pending)
pcpi_insn == orig(alu_out_0)
pcpi_insn == orig(alu_out_0_q)
pcpi_insn == orig(decoded_rs)
reg_pc == dbg_insn_addr
reg_pc == orig(reg_next_pc)
reg_op1 == orig(reg_op1)
next_insn_opcode == mem_rdata_word
next_insn_opcode == mem_rdata_q
next_insn_opcode == orig(next_insn_opcode)
next_insn_opcode == orig(mem_rdata_word)
next_insn_opcode == orig(mem_rdata_q)
irq_mask == orig(irq_mask)
mem_do_prefetch == decoder_trigger_q
mem_do_prefetch == dbg_next
mem_do_prefetch == dbg_valid_insn
mem_do_prefetch == orig(decoder_trigger)
mem_do_prefetch == orig(is_lui_auipc_jal_jalr_addi_add_sub)
mem_do_prefetch == orig(dbg_valid_insn)
instr_lw == is_lb_lh_lw_lbu_lhu
instr_lw == orig(is_lui_auipc_jal)
instr_lw == orig(is_lb_lh_lw_lbu_lhu)
instr_sw == is_sb_sh_sw
instr_sw == orig(is_sb_sh_sw)
instr_addi == decoded_imm
instr_addi == decoder_pseudo_trigger_q
instr_addi == is_jalr_addi_slti_sltiu_xori_ori_andi
instr_addi == is_lui_auipc_jal_jalr_addi_add_sub
instr_addi == is_alu_reg_imm
instr_addi == dbg_insn_imm
instr_addi == orig(decoder_pseudo_trigger)
instr_addi == orig(is_alu_reg_imm)
instr_addi == orig(latched_store)
instr_addi == orig(latched_is_lu)
instr_addi == orig(cpuregs_write)
decoded_rd == dbg_insn_rd
decoded_rd == latched_rd
decoded_rd == orig(decoded_rd)
decoded_rs1 == dbg_insn_rs1
decoded_rs1 == orig(decoded_rs1)
decoded_rs2 == dbg_insn_rs2
decoded_rs2 == orig(decoded_rs2)
decoded_imm_j == orig(decoded_imm_j)
new_ascii_instr == dbg_ascii_instr
q_ascii_instr == orig(dbg_ascii_instr)
q_ascii_instr == orig(q_ascii_instr)
q_insn_imm == orig(dbg_insn_imm)
q_insn_imm == orig(q_insn_imm)
q_insn_opcode == orig(dbg_insn_opcode)
q_insn_opcode == orig(q_insn_opcode)
q_insn_rs1 == orig(dbg_insn_rs1)
q_insn_rs1 == orig(q_insn_rs1)
q_insn_rs2 == orig(dbg_insn_rs2)
q_insn_rs2 == orig(q_insn_rs2)
q_insn_rd == cached_insn_rd
q_insn_rd == orig(dbg_insn_rd)
q_insn_rd == orig(q_insn_rd)
q_insn_rd == orig(cached_insn_rd)
q_insn_rd == orig(latched_rd)
cached_ascii_instr == orig(cached_ascii_instr)
cached_insn_imm == orig(decoded_imm)
cached_insn_imm == orig(cached_insn_imm)
cached_insn_opcode == orig(cached_insn_opcode)
cached_insn_rs1 == orig(cached_insn_rs1)
cached_insn_rs2 == orig(cached_insn_rs2)
alu_out_q == alu_add_sub
alu_out_q == orig(alu_out)
alu_out_q == orig(alu_out_q)
alu_out_q == orig(alu_add_sub)
alu_shl == orig(alu_shl)
alu_shr == orig(alu_shr)
alu_eq == alu_ltu
alu_eq == alu_lts
alu_eq == orig(alu_eq)
alu_eq == orig(alu_ltu)
alu_eq == orig(alu_lts)
cpuregs_rs2 == orig(cpuregs_rs2)
trap == 0
mem_instr one of { 0, 1 }
mem_addr one of { 8, 16, 1020 }
mem_la_wdata >= -1
mem_la_wstrb == 15
pcpi_insn == -1
reg_pc one of { 8, 12, 16 }
reg_next_pc one of { 12, 16, 20 }
dbg_insn_opcode one of { 41219, 1114387, 2138147 }
irq_mask == 4294967295L
mem_do_prefetch == 1
instr_lw one of { 0, 1 }
instr_sw one of { 0, 1 }
instr_addi one of { 0, 1 }
decoded_rd one of { 0, 2 }
decoded_rs1 one of { 1, 2 }
decoded_rs2 one of { 0, 1, 2 }
decoded_imm_j one of { 40960, 40962, 67584 }
new_ascii_instr one of { 27767, 29559, 1633969257 }
q_ascii_instr one of { 27767, 6971756, 1633969257 }
q_insn_imm one of { 0, 1, 4294967284L }
q_insn_opcode one of { 41219, 1114387, 4284477551L }
q_insn_rs1 one of { 1, 2, 31 }
q_insn_rs2 one of { 0, 1, 21 }
q_insn_rd one of { 0, 2 }
cached_ascii_instr one of { 6971756, 1633969257 }
cached_insn_imm one of { 1, 4294967284L }
cached_insn_rs1 one of { 2, 31 }
cached_insn_rs2 one of { 1, 21 }
cpu_state == 32
dbg_ascii_state == 119178353865521L
alu_out_q >= -1
alu_shl >= -1
alu_shr >= -1
alu_eq one of { -1, 0 }
trap <= mem_instr
trap < mem_addr
trap <= mem_wdata
trap != mem_la_wdata
trap < count_cycle
trap < count_instr
trap < reg_pc
trap < reg_next_pc
trap < reg_op1
trap <= next_insn_opcode
trap < dbg_insn_opcode
trap <= instr_lw
trap <= instr_sw
trap <= instr_addi
trap <= decoded_rd
trap < decoded_rs1
trap <= decoded_rs2
trap < decoded_imm_j
trap < new_ascii_instr
trap < q_ascii_instr
trap <= q_insn_imm
trap < q_insn_opcode
trap < q_insn_rs1
trap <= q_insn_rs2
trap <= q_insn_rd
trap < cached_ascii_instr
trap < cached_insn_imm
trap < cached_insn_opcode
trap < cached_insn_rs1
trap < cached_insn_rs2
trap != alu_out_q
trap != alu_shl
trap >= alu_eq
trap <= cpuregs_rs1
trap <= cpuregs_rs2
trap < orig(count_cycle)
trap < orig(count_instr)
trap < orig(reg_pc)
trap < orig(dbg_insn_addr)
trap <= orig(instr_addi)
trap <= orig(new_ascii_instr)
trap != orig(dbg_rs1val)
trap != orig(cpuregs_rs1)
mem_instr < mem_addr
mem_instr <= mem_wdata
mem_instr < mem_la_wstrb
mem_instr > pcpi_insn
mem_instr < count_cycle
mem_instr < count_instr
mem_instr < reg_pc
mem_instr < reg_next_pc
mem_instr < reg_op1
mem_instr <= next_insn_opcode
mem_instr < dbg_insn_opcode
mem_instr < irq_mask
mem_instr <= mem_do_prefetch
mem_instr >= instr_lw
mem_instr >= instr_sw
mem_instr != instr_addi
mem_instr != decoded_rd
mem_instr <= decoded_rs1
mem_instr != decoded_rs2
mem_instr < decoded_imm_j
mem_instr < new_ascii_instr
mem_instr < q_ascii_instr
mem_instr <= q_insn_imm
mem_instr < q_insn_opcode
mem_instr < q_insn_rs1
mem_instr <= q_insn_rs2
mem_instr != q_insn_rd
mem_instr < cached_ascii_instr
mem_instr <= cached_insn_imm
mem_instr < cached_insn_opcode
mem_instr < cached_insn_rs1
mem_instr <= cached_insn_rs2
mem_instr < cpu_state
mem_instr < dbg_ascii_state
mem_instr != alu_out_q
mem_instr != alu_shl
mem_instr != alu_shr
mem_instr > alu_eq
mem_instr <= cpuregs_rs1
mem_instr != cpuregs_rs2
mem_instr < orig(count_cycle)
mem_instr < orig(count_instr)
mem_instr < orig(reg_pc)
mem_instr < orig(dbg_insn_addr)
mem_instr != orig(new_ascii_instr)
mem_instr != orig(dbg_rs1val)
mem_instr < orig(cpu_state)
mem_instr < orig(dbg_ascii_state)
mem_instr != orig(cpuregs_rs1)
mem_addr != mem_la_wdata
mem_addr != mem_la_wstrb
mem_addr > pcpi_insn
mem_addr != count_cycle
mem_addr != count_instr
mem_addr % reg_pc == 0
mem_addr >= reg_pc
mem_addr != reg_next_pc
mem_addr != next_insn_opcode
mem_addr < dbg_insn_opcode
mem_addr < irq_mask
mem_addr > mem_do_prefetch
mem_addr > instr_lw
mem_addr > instr_sw
mem_addr > instr_addi
mem_addr > decoded_rd
mem_addr % decoded_rs1 == 0
mem_addr > decoded_rs1
mem_addr > decoded_rs2
mem_addr < decoded_imm_j
mem_addr < new_ascii_instr
mem_addr < q_ascii_instr
mem_addr != q_insn_imm
mem_addr < q_insn_opcode
mem_addr != q_insn_rs1
mem_addr != q_insn_rs2
mem_addr > q_insn_rd
mem_addr < cached_ascii_instr
mem_addr != cached_insn_imm
mem_addr != cached_insn_rs1
mem_addr != cached_insn_rs2
mem_addr != cpu_state
mem_addr < dbg_ascii_state
mem_addr != alu_shr
mem_addr > alu_eq
mem_addr != cpuregs_rs1
mem_addr != orig(count_cycle)
mem_addr != orig(count_instr)
mem_addr >= orig(reg_pc)
mem_addr > orig(reg_out)
mem_addr != orig(dbg_insn_addr)
mem_addr > orig(instr_addi)
mem_addr != orig(new_ascii_instr)
mem_addr != orig(cpu_state)
mem_addr < orig(dbg_ascii_state)
mem_addr != orig(cpuregs_rs1)
mem_wdata % mem_la_wdata == 0
mem_wdata >= mem_la_wdata
mem_wdata > pcpi_insn
mem_wdata < count_cycle
mem_wdata < count_instr
mem_wdata <= reg_op1
mem_wdata <= next_insn_opcode
mem_wdata < dbg_insn_opcode
mem_wdata < irq_mask
mem_wdata >= instr_lw
mem_wdata >= instr_sw
mem_wdata < decoded_imm_j
mem_wdata < new_ascii_instr
mem_wdata < q_ascii_instr
mem_wdata < q_insn_opcode
mem_wdata < cached_ascii_instr
mem_wdata < dbg_ascii_state
mem_wdata != alu_out_q
mem_wdata != alu_shl
mem_wdata > alu_shr
mem_wdata > alu_eq
mem_wdata <= cpuregs_rs1
mem_wdata != cpuregs_rs2
mem_wdata < orig(count_cycle)
mem_wdata < orig(count_instr)
mem_wdata >= orig(reg_out)
mem_wdata != orig(new_ascii_instr)
mem_wdata < orig(cpu_state)
mem_wdata < orig(dbg_ascii_state)
mem_la_wdata != mem_la_wstrb
mem_la_wdata >= pcpi_insn
mem_la_wdata < count_cycle
mem_la_wdata < count_instr
mem_la_wdata != reg_pc
mem_la_wdata != reg_next_pc
mem_la_wdata < reg_op1
mem_la_wdata < next_insn_opcode
mem_la_wdata < dbg_insn_opcode
mem_la_wdata < irq_mask
mem_la_wdata != instr_lw
instr_sw % mem_la_wdata == 0
instr_addi % mem_la_wdata == 0
mem_la_wdata != instr_addi
mem_la_wdata != decoded_rd
decoded_rs2 % mem_la_wdata == 0
mem_la_wdata != decoded_rs2
mem_la_wdata < decoded_imm_j
mem_la_wdata < new_ascii_instr
mem_la_wdata < q_ascii_instr
mem_la_wdata <= q_insn_imm
mem_la_wdata < q_insn_opcode
mem_la_wdata < q_insn_rs1
mem_la_wdata != q_insn_rd
q_insn_rd % mem_la_wdata == 0
mem_la_wdata < cached_ascii_instr
mem_la_wdata <= cached_insn_imm
mem_la_wdata != cached_insn_opcode
mem_la_wdata < cached_insn_rs1
mem_la_wdata < cpu_state
mem_la_wdata < dbg_ascii_state
mem_la_wdata <= alu_out_q
mem_la_wdata <= alu_shl
alu_shr % mem_la_wdata == 0
alu_eq % mem_la_wdata == 0
mem_la_wdata >= alu_eq
mem_la_wdata < cpuregs_rs1
cpuregs_rs2 % mem_la_wdata == 0
mem_la_wdata != cpuregs_rs2
mem_la_wdata < orig(count_cycle)
mem_la_wdata < orig(count_instr)
mem_la_wdata != orig(reg_pc)
mem_la_wdata != orig(reg_out)
mem_la_wdata != orig(dbg_insn_addr)
orig(instr_addi) % mem_la_wdata == 0
mem_la_wdata != orig(new_ascii_instr)
orig(new_ascii_instr) % mem_la_wdata == 0
mem_la_wdata != orig(dbg_rs1val)
mem_la_wdata < orig(cpu_state)
mem_la_wdata < orig(dbg_ascii_state)
mem_la_wdata <= orig(cpuregs_rs1)
mem_la_wstrb < count_cycle
mem_la_wstrb != count_instr
mem_la_wstrb != reg_pc
mem_la_wstrb != reg_next_pc
mem_la_wstrb < dbg_insn_opcode
mem_la_wstrb > instr_lw
mem_la_wstrb > instr_sw
mem_la_wstrb > instr_addi
mem_la_wstrb > decoded_rd
mem_la_wstrb > decoded_rs1
mem_la_wstrb > decoded_rs2
mem_la_wstrb < decoded_imm_j
mem_la_wstrb < new_ascii_instr
mem_la_wstrb < q_ascii_instr
mem_la_wstrb != q_insn_imm
mem_la_wstrb < q_insn_opcode
mem_la_wstrb != q_insn_rs1
mem_la_wstrb != q_insn_rs2
mem_la_wstrb > q_insn_rd
mem_la_wstrb < cached_ascii_instr
mem_la_wstrb != cached_insn_imm
mem_la_wstrb != cached_insn_rs1
mem_la_wstrb != cached_insn_rs2
mem_la_wstrb != alu_out_q
mem_la_wstrb != alu_shl
mem_la_wstrb > alu_eq
mem_la_wstrb != cpuregs_rs2
mem_la_wstrb < orig(count_cycle)
mem_la_wstrb != orig(reg_pc)
mem_la_wstrb != orig(dbg_insn_addr)
mem_la_wstrb > orig(instr_addi)
mem_la_wstrb != orig(new_ascii_instr)
pcpi_insn < count_cycle
pcpi_insn < count_instr
pcpi_insn < reg_pc
pcpi_insn < reg_next_pc
pcpi_insn < reg_op1
pcpi_insn < next_insn_opcode
pcpi_insn < dbg_insn_opcode
pcpi_insn < instr_lw
pcpi_insn < instr_sw
pcpi_insn < instr_addi
pcpi_insn < decoded_rd
pcpi_insn < decoded_rs1
pcpi_insn < decoded_rs2
pcpi_insn < decoded_imm_j
pcpi_insn < new_ascii_instr
pcpi_insn < q_ascii_instr
pcpi_insn < q_insn_imm
pcpi_insn < q_insn_opcode
pcpi_insn < q_insn_rs1
pcpi_insn < q_insn_rs2
pcpi_insn < q_insn_rd
pcpi_insn < cached_ascii_instr
pcpi_insn < cached_insn_imm
pcpi_insn < cached_insn_opcode
pcpi_insn < cached_insn_rs1
pcpi_insn < cached_insn_rs2
pcpi_insn <= alu_out_q
pcpi_insn <= alu_shl
pcpi_insn <= alu_shr
pcpi_insn <= alu_eq
pcpi_insn < cpuregs_rs1
pcpi_insn < cpuregs_rs2
pcpi_insn < orig(count_cycle)
pcpi_insn < orig(count_instr)
pcpi_insn < orig(reg_pc)
pcpi_insn <= orig(reg_out)
pcpi_insn < orig(dbg_insn_addr)
pcpi_insn < orig(instr_addi)
pcpi_insn < orig(new_ascii_instr)
pcpi_insn <= orig(dbg_rs1val)
pcpi_insn <= orig(cpuregs_rs1)
count_cycle > count_instr
count_cycle > reg_pc
count_cycle > reg_next_pc
count_cycle != reg_op1
count_cycle != next_insn_opcode
count_cycle < dbg_insn_opcode
count_cycle < irq_mask
count_cycle > mem_do_prefetch
count_cycle > instr_lw
count_cycle > instr_sw
count_cycle > instr_addi
count_cycle > decoded_rd
count_cycle > decoded_rs1
count_cycle > decoded_rs2
count_cycle < decoded_imm_j
count_cycle < new_ascii_instr
count_cycle < q_ascii_instr
count_cycle != q_insn_imm
count_cycle < q_insn_opcode
count_cycle > q_insn_rs1
count_cycle > q_insn_rs2
count_cycle > q_insn_rd
count_cycle < cached_ascii_instr
count_cycle != cached_insn_imm
count_cycle != cached_insn_opcode
count_cycle > cached_insn_rs1
count_cycle > cached_insn_rs2
count_cycle != cpu_state
count_cycle < dbg_ascii_state
count_cycle != alu_out_q
count_cycle != alu_shl
count_cycle > alu_shr
count_cycle > alu_eq
count_cycle != cpuregs_rs1
count_cycle != cpuregs_rs2
count_cycle - orig(count_cycle) - 1 == 0
count_cycle > orig(count_instr)
count_cycle > orig(reg_pc)
count_cycle > orig(reg_out)
count_cycle > orig(dbg_insn_addr)
count_cycle > orig(instr_addi)
count_cycle != orig(new_ascii_instr)
count_cycle != orig(dbg_rs1val)
count_cycle != orig(cpu_state)
count_cycle < orig(dbg_ascii_state)
count_cycle != orig(cpuregs_rs1)
count_instr != reg_op1
count_instr != next_insn_opcode
count_instr < dbg_insn_opcode
count_instr < irq_mask
count_instr > mem_do_prefetch
count_instr > instr_lw
count_instr > instr_sw
count_instr > instr_addi
count_instr > decoded_rd
count_instr % decoded_rs1 == 0
count_instr > decoded_rs1
count_instr > decoded_rs2
count_instr < decoded_imm_j
count_instr < new_ascii_instr
count_instr < q_ascii_instr
count_instr != q_insn_imm
count_instr < q_insn_opcode
count_instr > q_insn_rs1
count_instr > q_insn_rs2
count_instr > q_insn_rd
count_instr < cached_ascii_instr
count_instr != cached_insn_imm
count_instr != cached_insn_opcode
count_instr > cached_insn_rs1
count_instr > cached_insn_rs2
count_instr < dbg_ascii_state
count_instr != alu_out_q
count_instr != alu_shl
count_instr > alu_shr
count_instr > alu_eq
count_instr != cpuregs_rs1
count_instr != cpuregs_rs2
count_instr < orig(count_cycle)
count_instr - orig(count_instr) - 1 == 0
count_instr > orig(reg_out)
count_instr > orig(instr_addi)
count_instr != orig(new_ascii_instr)
count_instr != orig(dbg_rs1val)
count_instr < orig(dbg_ascii_state)
count_instr != orig(cpuregs_rs1)
reg_pc < reg_next_pc
reg_pc < dbg_insn_opcode
reg_pc < irq_mask
reg_pc > mem_do_prefetch
reg_pc > instr_lw
reg_pc > instr_sw
reg_pc > instr_addi
reg_pc > decoded_rd
reg_pc % decoded_rs1 == 0
reg_pc > decoded_rs1
reg_pc > decoded_rs2
reg_pc < decoded_imm_j
reg_pc < new_ascii_instr
reg_pc < q_ascii_instr
reg_pc != q_insn_imm
reg_pc < q_insn_opcode
reg_pc != q_insn_rs1
reg_pc != q_insn_rs2
reg_pc > q_insn_rd
reg_pc < cached_ascii_instr
reg_pc != cached_insn_imm
reg_pc != cached_insn_rs1
reg_pc != cached_insn_rs2
reg_pc < cpu_state
reg_pc < dbg_ascii_state
reg_pc != alu_shr
reg_pc > alu_eq
reg_pc < orig(count_cycle)
reg_pc != orig(count_instr)
reg_pc >= orig(reg_pc)
reg_pc != orig(dbg_insn_addr)
reg_pc > orig(instr_addi)
reg_pc != orig(new_ascii_instr)
reg_pc < orig(cpu_state)
reg_pc < orig(dbg_ascii_state)
reg_next_pc < dbg_insn_opcode
reg_next_pc < irq_mask
reg_next_pc > mem_do_prefetch
reg_next_pc > instr_lw
reg_next_pc > instr_sw
reg_next_pc > instr_addi
reg_next_pc > decoded_rd
reg_next_pc % decoded_rs1 == 0
reg_next_pc > decoded_rs1
reg_next_pc > decoded_rs2
reg_next_pc < decoded_imm_j
reg_next_pc < new_ascii_instr
reg_next_pc < q_ascii_instr
reg_next_pc != q_insn_imm
reg_next_pc < q_insn_opcode
reg_next_pc != q_insn_rs1
reg_next_pc != q_insn_rs2
reg_next_pc > q_insn_rd
reg_next_pc < cached_ascii_instr
reg_next_pc != cached_insn_imm
reg_next_pc != cached_insn_rs1
reg_next_pc != cached_insn_rs2
reg_next_pc < cpu_state
reg_next_pc < dbg_ascii_state
reg_next_pc != alu_shl
reg_next_pc > alu_eq
reg_next_pc < orig(count_cycle)
reg_next_pc != orig(count_instr)
reg_next_pc > orig(reg_pc)
reg_next_pc != orig(dbg_insn_addr)
reg_next_pc > orig(instr_addi)
reg_next_pc != orig(new_ascii_instr)
reg_next_pc < orig(cpu_state)
reg_next_pc < orig(dbg_ascii_state)
reg_op1 != next_insn_opcode
reg_op1 < dbg_insn_opcode
reg_op1 < irq_mask
reg_op1 > mem_do_prefetch
reg_op1 > instr_lw
reg_op1 > instr_sw
reg_op1 > instr_addi
reg_op1 > decoded_rd
reg_op1 % decoded_rs1 == 0
reg_op1 > decoded_rs1
reg_op1 > decoded_rs2
reg_op1 < decoded_imm_j
reg_op1 < new_ascii_instr
reg_op1 < q_ascii_instr
reg_op1 != q_insn_imm
reg_op1 < q_insn_opcode
reg_op1 > q_insn_rs1
reg_op1 > q_insn_rs2
reg_op1 > q_insn_rd
reg_op1 < cached_ascii_instr
reg_op1 != cached_insn_imm
reg_op1 > cached_insn_rs1
reg_op1 > cached_insn_rs2
reg_op1 != cpu_state
reg_op1 < dbg_ascii_state
reg_op1 != alu_out_q
reg_op1 != alu_shl
reg_op1 > alu_shr
reg_op1 > alu_eq
reg_op1 != orig(count_cycle)
reg_op1 != orig(count_instr)
reg_op1 > orig(reg_out)
reg_op1 > orig(instr_addi)
reg_op1 != orig(new_ascii_instr)
reg_op1 % orig(dbg_rs1val) == 0
reg_op1 >= orig(dbg_rs1val)
reg_op1 != orig(cpu_state)
reg_op1 < orig(dbg_ascii_state)
next_insn_opcode <= dbg_insn_opcode
next_insn_opcode < irq_mask
next_insn_opcode >= instr_lw
next_insn_opcode >= instr_sw
next_insn_opcode != decoded_imm_j
next_insn_opcode != new_ascii_instr
next_insn_opcode < q_ascii_instr
next_insn_opcode != q_insn_opcode
next_insn_opcode >= q_insn_rs2
next_insn_opcode < cached_ascii_instr
next_insn_opcode != cached_insn_opcode
next_insn_opcode < dbg_ascii_state
next_insn_opcode > alu_out_q
next_insn_opcode != alu_shl
next_insn_opcode > alu_shr
next_insn_opcode > alu_eq
next_insn_opcode >= cpuregs_rs1
next_insn_opcode != cpuregs_rs2
next_insn_opcode != orig(count_cycle)
next_insn_opcode != orig(count_instr)
next_insn_opcode >= orig(reg_out)
next_insn_opcode != orig(new_ascii_instr)
next_insn_opcode != orig(dbg_rs1val)
next_insn_opcode != orig(cpu_state)
next_insn_opcode < orig(dbg_ascii_state)
next_insn_opcode >= orig(cpuregs_rs1)
dbg_insn_opcode < irq_mask
dbg_insn_opcode > mem_do_prefetch
dbg_insn_opcode > instr_lw
dbg_insn_opcode > instr_sw
dbg_insn_opcode > instr_addi
dbg_insn_opcode > decoded_rd
dbg_insn_opcode > decoded_rs1
dbg_insn_opcode > decoded_rs2
dbg_insn_opcode > decoded_imm_j
dbg_insn_opcode != new_ascii_instr
dbg_insn_opcode != q_ascii_instr
dbg_insn_opcode != q_insn_imm
dbg_insn_opcode != q_insn_opcode
dbg_insn_opcode > q_insn_rs1
dbg_insn_opcode > q_insn_rs2
dbg_insn_opcode > q_insn_rd
dbg_insn_opcode < cached_ascii_instr
dbg_insn_opcode != cached_insn_imm
dbg_insn_opcode >= cached_insn_opcode
dbg_insn_opcode > cached_insn_rs1
dbg_insn_opcode > cached_insn_rs2
dbg_insn_opcode > cpu_state
dbg_insn_opcode < dbg_ascii_state
dbg_insn_opcode > alu_out_q
dbg_insn_opcode != alu_shl
dbg_insn_opcode > alu_shr
dbg_insn_opcode > alu_eq
dbg_insn_opcode > cpuregs_rs1
dbg_insn_opcode > cpuregs_rs2
dbg_insn_opcode > orig(count_cycle)
dbg_insn_opcode > orig(count_instr)
dbg_insn_opcode > orig(reg_pc)
dbg_insn_opcode > orig(reg_out)
dbg_insn_opcode > orig(dbg_insn_addr)
dbg_insn_opcode > orig(instr_addi)
dbg_insn_opcode != orig(new_ascii_instr)
dbg_insn_opcode > orig(dbg_rs1val)
dbg_insn_opcode > orig(cpu_state)
dbg_insn_opcode < orig(dbg_ascii_state)
dbg_insn_opcode > orig(cpuregs_rs1)
irq_mask > instr_lw
irq_mask > instr_sw
irq_mask > instr_addi
irq_mask > decoded_rd
irq_mask > decoded_rs1
irq_mask > decoded_rs2
irq_mask > decoded_imm_j
irq_mask > new_ascii_instr
irq_mask > q_ascii_instr
irq_mask > q_insn_imm
irq_mask > q_insn_opcode
irq_mask > q_insn_rs1
irq_mask > q_insn_rs2
irq_mask > q_insn_rd
irq_mask > cached_ascii_instr
irq_mask > cached_insn_imm
irq_mask > cached_insn_opcode
irq_mask > cached_insn_rs1
irq_mask > cached_insn_rs2
irq_mask > alu_out_q
irq_mask > alu_shl
irq_mask > alu_shr
irq_mask > alu_eq
irq_mask > cpuregs_rs1
irq_mask > cpuregs_rs2
irq_mask > orig(count_cycle)
irq_mask > orig(count_instr)
irq_mask > orig(reg_pc)
irq_mask > orig(reg_out)
irq_mask > orig(dbg_insn_addr)
irq_mask > orig(instr_addi)
irq_mask > orig(new_ascii_instr)
irq_mask > orig(dbg_rs1val)
irq_mask > orig(cpuregs_rs1)
mem_do_prefetch >= instr_lw
mem_do_prefetch >= instr_sw
mem_do_prefetch >= instr_addi
mem_do_prefetch != decoded_rd
mem_do_prefetch <= decoded_rs1
mem_do_prefetch < decoded_imm_j
mem_do_prefetch < new_ascii_instr
mem_do_prefetch < q_ascii_instr
mem_do_prefetch < q_insn_opcode
mem_do_prefetch <= q_insn_rs1
mem_do_prefetch != q_insn_rd
mem_do_prefetch < cached_ascii_instr
mem_do_prefetch <= cached_insn_imm
mem_do_prefetch < cached_insn_opcode
mem_do_prefetch < cached_insn_rs1
mem_do_prefetch <= cached_insn_rs2
mem_do_prefetch != alu_out_q
mem_do_prefetch != alu_shl
mem_do_prefetch != alu_shr
mem_do_prefetch > alu_eq
mem_do_prefetch != cpuregs_rs2
mem_do_prefetch < orig(count_cycle)
mem_do_prefetch < orig(count_instr)
mem_do_prefetch < orig(reg_pc)
mem_do_prefetch < orig(dbg_insn_addr)
mem_do_prefetch >= orig(instr_addi)
mem_do_prefetch != orig(new_ascii_instr)
mem_do_prefetch != orig(dbg_rs1val)
instr_lw <= decoded_rd
instr_lw <= decoded_rs1
instr_lw != decoded_rs2
instr_lw < decoded_imm_j
instr_lw < new_ascii_instr
instr_lw < q_ascii_instr
instr_lw <= q_insn_imm
instr_lw < q_insn_opcode
instr_lw < q_insn_rs1
instr_lw <= q_insn_rs2
instr_lw != q_insn_rd
instr_lw < cached_ascii_instr
instr_lw < cached_insn_imm
instr_lw < cached_insn_opcode
instr_lw < cached_insn_rs1
instr_lw < cached_insn_rs2
instr_lw < cpu_state
instr_lw < dbg_ascii_state
instr_lw != alu_out_q
instr_lw != alu_shl
instr_lw != alu_shr
instr_lw >= alu_eq
instr_lw <= cpuregs_rs1
instr_lw != cpuregs_rs2
instr_lw < orig(count_cycle)
instr_lw < orig(count_instr)
instr_lw < orig(reg_pc)
instr_lw < orig(dbg_insn_addr)
instr_lw != orig(instr_addi)
instr_lw != orig(new_ascii_instr)
instr_lw != orig(dbg_rs1val)
instr_lw % orig(dbg_rs1val) == 0
instr_lw < orig(cpu_state)
instr_lw < orig(dbg_ascii_state)
instr_lw != orig(cpuregs_rs1)
instr_sw != decoded_rd
instr_sw <= decoded_rs1
instr_sw <= decoded_rs2
instr_sw < decoded_imm_j
instr_sw < new_ascii_instr
instr_sw < q_ascii_instr
instr_sw <= q_insn_imm
instr_sw < q_insn_opcode
instr_sw < q_insn_rs1
instr_sw <= q_insn_rs2
instr_sw <= q_insn_rd
instr_sw < cached_ascii_instr
instr_sw <= cached_insn_imm
instr_sw < cached_insn_opcode
instr_sw < cached_insn_rs1
instr_sw <= cached_insn_rs2
instr_sw < cpu_state
instr_sw < dbg_ascii_state
instr_sw != alu_out_q
instr_sw != alu_shl
instr_sw >= alu_eq
instr_sw <= cpuregs_rs1
instr_sw <= cpuregs_rs2
instr_sw < orig(count_cycle)
instr_sw < orig(count_instr)
instr_sw < orig(reg_pc)
instr_sw < orig(dbg_insn_addr)
instr_sw <= orig(instr_addi)
instr_sw <= orig(new_ascii_instr)
instr_sw != orig(dbg_rs1val)
instr_sw < orig(cpu_state)
instr_sw < orig(dbg_ascii_state)
instr_sw != orig(cpuregs_rs1)
instr_addi <= decoded_rd
instr_addi < decoded_rs1
instr_addi <= decoded_rs2
instr_addi < decoded_imm_j
instr_addi < new_ascii_instr
instr_addi < q_ascii_instr
instr_addi != q_insn_imm
instr_addi < q_insn_opcode
instr_addi % q_insn_rs1 == 0
instr_addi <= q_insn_rs1
instr_addi != q_insn_rs2
instr_addi <= q_insn_rd
instr_addi < cached_ascii_instr
instr_addi <= cached_insn_imm
instr_addi < cached_insn_opcode
instr_addi < cached_insn_rs1
instr_addi <= cached_insn_rs2
instr_addi < cpu_state
instr_addi < dbg_ascii_state
instr_addi != alu_out_q
instr_addi % alu_out_q == 0
instr_addi != alu_shl
instr_addi % alu_shl == 0
instr_addi >= alu_eq
instr_addi <= cpuregs_rs2
instr_addi < orig(count_cycle)
instr_addi < orig(count_instr)
instr_addi < orig(reg_pc)
instr_addi < orig(dbg_insn_addr)
instr_addi <= orig(instr_addi)
instr_addi <= orig(new_ascii_instr)
instr_addi != orig(dbg_rs1val)
instr_addi < orig(cpu_state)
instr_addi < orig(dbg_ascii_state)
decoded_rd != decoded_rs2
decoded_rd < decoded_imm_j
decoded_rd < new_ascii_instr
decoded_rd < q_ascii_instr
decoded_rd != q_insn_imm
decoded_rd < q_insn_opcode
decoded_rd != q_insn_rs1
decoded_rd != q_insn_rs2
decoded_rd < cached_ascii_instr
decoded_rd != cached_insn_imm
decoded_rd < cached_insn_opcode
decoded_rd <= cached_insn_rs1
decoded_rd != cached_insn_rs2
decoded_rd < cpu_state
decoded_rd < dbg_ascii_state
decoded_rd != alu_out_q
decoded_rd != alu_shl
decoded_rd != alu_shr
decoded_rd >= alu_eq
decoded_rd != cpuregs_rs2
decoded_rd < orig(count_cycle)
decoded_rd < orig(count_instr)
decoded_rd < orig(reg_pc)
decoded_rd < orig(dbg_insn_addr)
decoded_rd != orig(instr_addi)
decoded_rd != orig(new_ascii_instr)
decoded_rd != orig(dbg_rs1val)
decoded_rd < orig(cpu_state)
decoded_rd < orig(dbg_ascii_state)
decoded_rs1 != decoded_rs2
decoded_imm_j % decoded_rs1 == 0
decoded_rs1 < decoded_imm_j
decoded_rs1 < new_ascii_instr
decoded_rs1 < q_ascii_instr
q_insn_imm % decoded_rs1 == 0
decoded_rs1 < q_insn_opcode
decoded_rs1 != q_insn_rs1
q_insn_rs2 % decoded_rs1 == 0
decoded_rs1 < cached_ascii_instr
decoded_rs1 < cached_insn_opcode
decoded_rs1 <= cached_insn_rs1
decoded_rs1 < cpu_state
decoded_rs1 < dbg_ascii_state
decoded_rs1 != alu_out_q
decoded_rs1 != alu_shl
decoded_rs1 != alu_shr
decoded_rs1 > alu_eq
cpuregs_rs2 % decoded_rs1 == 0
decoded_rs1 != cpuregs_rs2
decoded_rs1 < orig(count_cycle)
orig(count_cycle) % decoded_rs1 == 0
decoded_rs1 < orig(count_instr)
decoded_rs1 < orig(reg_pc)
decoded_rs1 < orig(dbg_insn_addr)
orig(dbg_insn_addr) % decoded_rs1 == 0
decoded_rs1 >= orig(instr_addi)
decoded_rs1 != orig(new_ascii_instr)
decoded_rs1 != orig(dbg_rs1val)
orig(dbg_rs1val) % decoded_rs1 == 0
decoded_rs1 < orig(cpu_state)
decoded_rs1 < orig(dbg_ascii_state)
decoded_rs2 < decoded_imm_j
decoded_rs2 < new_ascii_instr
decoded_rs2 < q_ascii_instr
decoded_rs2 != q_insn_imm
decoded_rs2 < q_insn_opcode
decoded_rs2 % q_insn_rs1 == 0
decoded_rs2 <= q_insn_rs1
decoded_rs2 != q_insn_rs2
decoded_rs2 <= q_insn_rd
decoded_rs2 < cached_ascii_instr
decoded_rs2 % cached_insn_imm == 0
decoded_rs2 < cached_insn_opcode
decoded_rs2 <= cached_insn_rs1
decoded_rs2 % cached_insn_rs2 == 0
decoded_rs2 < cpu_state
decoded_rs2 < dbg_ascii_state
decoded_rs2 != alu_out_q
decoded_rs2 != alu_shl
decoded_rs2 >= alu_eq
decoded_rs2 <= cpuregs_rs2
decoded_rs2 < orig(count_cycle)
decoded_rs2 < orig(count_instr)
decoded_rs2 < orig(reg_pc)
decoded_rs2 < orig(dbg_insn_addr)
decoded_rs2 >= orig(instr_addi)
decoded_rs2 <= orig(new_ascii_instr)
decoded_rs2 != orig(dbg_rs1val)
decoded_rs2 < orig(cpu_state)
decoded_rs2 < orig(dbg_ascii_state)
decoded_imm_j != new_ascii_instr
decoded_imm_j != q_ascii_instr
decoded_imm_j != q_insn_imm
decoded_imm_j != q_insn_opcode
decoded_imm_j > q_insn_rs1
decoded_imm_j > q_insn_rs2
decoded_imm_j > q_insn_rd
decoded_imm_j < cached_ascii_instr
decoded_imm_j != cached_insn_imm
decoded_imm_j != cached_insn_opcode
decoded_imm_j > cached_insn_rs1
decoded_imm_j > cached_insn_rs2
decoded_imm_j > cpu_state
decoded_imm_j < dbg_ascii_state
decoded_imm_j > alu_out_q
decoded_imm_j != alu_shl
decoded_imm_j > alu_shr
decoded_imm_j > alu_eq
decoded_imm_j > cpuregs_rs1
decoded_imm_j > cpuregs_rs2
decoded_imm_j > orig(count_cycle)
decoded_imm_j > orig(count_instr)
decoded_imm_j > orig(reg_pc)
decoded_imm_j > orig(reg_out)
decoded_imm_j > orig(dbg_insn_addr)
decoded_imm_j > orig(instr_addi)
decoded_imm_j != orig(new_ascii_instr)
decoded_imm_j > orig(dbg_rs1val)
decoded_imm_j > orig(cpu_state)
decoded_imm_j < orig(dbg_ascii_state)
decoded_imm_j > orig(cpuregs_rs1)
new_ascii_instr != q_ascii_instr
new_ascii_instr != q_insn_imm
new_ascii_instr != q_insn_opcode
new_ascii_instr > q_insn_rs1
new_ascii_instr > q_insn_rs2
new_ascii_instr > q_insn_rd
new_ascii_instr <= cached_ascii_instr
new_ascii_instr != cached_insn_imm
new_ascii_instr > cached_insn_opcode
new_ascii_instr > cached_insn_rs1
new_ascii_instr > cached_insn_rs2
new_ascii_instr > cpu_state
new_ascii_instr < dbg_ascii_state
new_ascii_instr > alu_out_q
new_ascii_instr != alu_shl
new_ascii_instr > alu_shr
new_ascii_instr > alu_eq
new_ascii_instr > cpuregs_rs1
new_ascii_instr > cpuregs_rs2
new_ascii_instr > orig(count_cycle)
new_ascii_instr > orig(count_instr)
new_ascii_instr > orig(reg_pc)
new_ascii_instr > orig(reg_out)
new_ascii_instr > orig(dbg_insn_addr)
new_ascii_instr > orig(instr_addi)
new_ascii_instr > orig(dbg_rs1val)
new_ascii_instr > orig(cpu_state)
new_ascii_instr < orig(dbg_ascii_state)
new_ascii_instr > orig(cpuregs_rs1)
q_ascii_instr != q_insn_imm
q_ascii_instr != q_insn_opcode
q_ascii_instr > q_insn_rs1
q_ascii_instr > q_insn_rs2
q_ascii_instr > q_insn_rd
q_ascii_instr <= cached_ascii_instr
q_ascii_instr != cached_insn_imm
q_ascii_instr != cached_insn_opcode
q_ascii_instr > cached_insn_rs1
q_ascii_instr > cached_insn_rs2
q_ascii_instr > cpu_state
q_ascii_instr < dbg_ascii_state
q_ascii_instr > alu_out_q
q_ascii_instr != alu_shl
q_ascii_instr > alu_shr
q_ascii_instr > alu_eq
q_ascii_instr > cpuregs_rs1
q_ascii_instr > cpuregs_rs2
q_ascii_instr > orig(count_cycle)
q_ascii_instr > orig(count_instr)
q_ascii_instr > orig(reg_pc)
q_ascii_instr > orig(reg_out)
q_ascii_instr > orig(dbg_insn_addr)
q_ascii_instr > orig(instr_addi)
q_ascii_instr > orig(dbg_rs1val)
q_ascii_instr > orig(cpu_state)
q_ascii_instr < orig(dbg_ascii_state)
q_ascii_instr > orig(cpuregs_rs1)
q_insn_imm != q_insn_opcode
q_insn_imm != q_insn_rs1
q_insn_imm >= q_insn_rs2
q_insn_imm != q_insn_rd
q_insn_imm != cached_ascii_instr
q_insn_imm % cached_insn_imm == 0
q_insn_imm <= cached_insn_imm
q_insn_imm != cached_insn_opcode
q_insn_imm != cached_insn_rs1
q_insn_imm != cpu_state
q_insn_imm < dbg_ascii_state
q_insn_imm != alu_out_q
q_insn_imm != alu_shl
q_insn_imm != alu_shr
q_insn_imm > alu_eq
q_insn_imm != cpuregs_rs2
q_insn_imm != orig(count_cycle)
q_insn_imm != orig(count_instr)
q_insn_imm != orig(reg_pc)
q_insn_imm != orig(dbg_insn_addr)
q_insn_imm != orig(new_ascii_instr)
q_insn_imm != orig(dbg_rs1val)
q_insn_imm != orig(cpu_state)
q_insn_imm < orig(dbg_ascii_state)
q_insn_imm != orig(cpuregs_rs1)
q_insn_opcode > q_insn_rs1
q_insn_opcode > q_insn_rs2
q_insn_opcode > q_insn_rd
q_insn_opcode != cached_ascii_instr
q_insn_opcode != cached_insn_imm
q_insn_opcode != cached_insn_opcode
q_insn_opcode > cached_insn_rs1
q_insn_opcode > cached_insn_rs2
q_insn_opcode > cpu_state
q_insn_opcode < dbg_ascii_state
q_insn_opcode > alu_out_q
q_insn_opcode > alu_shl
q_insn_opcode > alu_shr
q_insn_opcode > alu_eq
q_insn_opcode > cpuregs_rs1
q_insn_opcode > cpuregs_rs2
q_insn_opcode > orig(count_cycle)
q_insn_opcode > orig(count_instr)
q_insn_opcode > orig(reg_pc)
q_insn_opcode > orig(reg_out)
q_insn_opcode > orig(dbg_insn_addr)
q_insn_opcode > orig(instr_addi)
q_insn_opcode != orig(new_ascii_instr)
q_insn_opcode > orig(dbg_rs1val)
q_insn_opcode > orig(cpu_state)
q_insn_opcode < orig(dbg_ascii_state)
q_insn_opcode > orig(cpuregs_rs1)
q_insn_rs1 > q_insn_rs2
q_insn_rd % q_insn_rs1 == 0
q_insn_rs1 < cached_ascii_instr
q_insn_rs1 != cached_insn_opcode
cached_insn_rs1 % q_insn_rs1 == 0
q_insn_rs1 <= cached_insn_rs1
q_insn_rs1 >= cached_insn_rs2
q_insn_rs1 < cpu_state
q_insn_rs1 < dbg_ascii_state
q_insn_rs1 != alu_out_q
q_insn_rs1 != alu_shl
q_insn_rs1 != alu_shr
alu_eq % q_insn_rs1 == 0
q_insn_rs1 > alu_eq
q_insn_rs1 != cpuregs_rs2
q_insn_rs1 < orig(count_cycle)
q_insn_rs1 < orig(count_instr)
q_insn_rs1 != orig(reg_pc)
q_insn_rs1 != orig(dbg_insn_addr)
q_insn_rs1 >= orig(instr_addi)
q_insn_rs1 != orig(new_ascii_instr)
q_insn_rs1 != orig(dbg_rs1val)
q_insn_rs1 < orig(cpu_state)
q_insn_rs1 < orig(dbg_ascii_state)
q_insn_rs2 != q_insn_rd
q_insn_rs2 < cached_ascii_instr
q_insn_rs2 <= cached_insn_imm
q_insn_rs2 != cached_insn_opcode
q_insn_rs2 < cached_insn_rs1
q_insn_rs2 % cached_insn_rs2 == 0
q_insn_rs2 <= cached_insn_rs2
q_insn_rs2 < cpu_state
q_insn_rs2 < dbg_ascii_state
q_insn_rs2 != alu_out_q
q_insn_rs2 != alu_shl
q_insn_rs2 != alu_shr
q_insn_rs2 > alu_eq
q_insn_rs2 <= cpuregs_rs1
q_insn_rs2 != cpuregs_rs2
q_insn_rs2 < orig(count_cycle)
q_insn_rs2 < orig(count_instr)
q_insn_rs2 != orig(reg_pc)
q_insn_rs2 != orig(dbg_insn_addr)
q_insn_rs2 != orig(new_ascii_instr)
q_insn_rs2 != orig(dbg_rs1val)
q_insn_rs2 < orig(cpu_state)
q_insn_rs2 < orig(dbg_ascii_state)
q_insn_rs2 != orig(cpuregs_rs1)
q_insn_rd < cached_ascii_instr
q_insn_rd != cached_insn_imm
q_insn_rd < cached_insn_opcode
q_insn_rd <= cached_insn_rs1
q_insn_rd != cached_insn_rs2
q_insn_rd < cpu_state
q_insn_rd < dbg_ascii_state
q_insn_rd != alu_out_q
q_insn_rd != alu_shl
q_insn_rd >= alu_eq
q_insn_rd <= cpuregs_rs2
q_insn_rd < orig(count_cycle)
q_insn_rd < orig(count_instr)
q_insn_rd < orig(reg_pc)
q_insn_rd < orig(dbg_insn_addr)
q_insn_rd >= orig(instr_addi)
q_insn_rd <= orig(new_ascii_instr)
q_insn_rd != orig(dbg_rs1val)
q_insn_rd < orig(cpu_state)
q_insn_rd < orig(dbg_ascii_state)
cached_ascii_instr != cached_insn_imm
cached_ascii_instr > cached_insn_opcode
cached_ascii_instr > cached_insn_rs1
cached_ascii_instr > cached_insn_rs2
cached_ascii_instr > cpu_state
cached_ascii_instr < dbg_ascii_state
cached_ascii_instr > alu_out_q
cached_ascii_instr != alu_shl
cached_ascii_instr > alu_shr
cached_ascii_instr > alu_eq
cached_ascii_instr > cpuregs_rs1
cached_ascii_instr > cpuregs_rs2
cached_ascii_instr > orig(count_cycle)
cached_ascii_instr > orig(count_instr)
cached_ascii_instr > orig(reg_pc)
cached_ascii_instr > orig(reg_out)
cached_ascii_instr > orig(dbg_insn_addr)
cached_ascii_instr > orig(instr_addi)
cached_ascii_instr >= orig(new_ascii_instr)
cached_ascii_instr > orig(dbg_rs1val)
cached_ascii_instr > orig(cpu_state)
cached_ascii_instr < orig(dbg_ascii_state)
cached_ascii_instr > orig(cpuregs_rs1)
cached_insn_imm != cached_insn_opcode
cached_insn_imm != cached_insn_rs1
cached_insn_imm >= cached_insn_rs2
cached_insn_imm != cpu_state
cached_insn_imm < dbg_ascii_state
cached_insn_imm != alu_out_q
cached_insn_imm != alu_shl
alu_shr % cached_insn_imm == 0
cached_insn_imm != alu_shr
cached_insn_imm > alu_eq
cached_insn_imm != cpuregs_rs2
cpuregs_rs2 % cached_insn_imm == 0
cached_insn_imm != orig(count_cycle)
cached_insn_imm != orig(count_instr)
cached_insn_imm != orig(reg_pc)
cached_insn_imm != orig(dbg_insn_addr)
cached_insn_imm >= orig(instr_addi)
cached_insn_imm != orig(new_ascii_instr)
cached_insn_imm != orig(dbg_rs1val)
cached_insn_imm != orig(cpu_state)
cached_insn_imm < orig(dbg_ascii_state)
cached_insn_opcode != cached_insn_rs1
cached_insn_opcode != cached_insn_rs2
cached_insn_opcode != cpu_state
cached_insn_opcode < dbg_ascii_state
cached_insn_opcode != alu_out_q
cached_insn_opcode != alu_shl
cached_insn_opcode > alu_shr
cached_insn_opcode > alu_eq
cached_insn_opcode != cpuregs_rs1
cached_insn_opcode != cpuregs_rs2
cached_insn_opcode != orig(count_cycle)
cached_insn_opcode != orig(count_instr)
cached_insn_opcode > orig(reg_out)
cached_insn_opcode > orig(instr_addi)
cached_insn_opcode != orig(new_ascii_instr)
cached_insn_opcode >= orig(dbg_rs1val)
cached_insn_opcode != orig(cpu_state)
cached_insn_opcode < orig(dbg_ascii_state)
cached_insn_opcode != orig(cpuregs_rs1)
cached_insn_rs1 > cached_insn_rs2
cached_insn_rs1 < cpu_state
cached_insn_rs1 < dbg_ascii_state
cached_insn_rs1 != alu_out_q
cached_insn_rs1 != alu_shl
cached_insn_rs1 != alu_shr
cached_insn_rs1 > alu_eq
cached_insn_rs1 != cpuregs_rs2
cached_insn_rs1 < orig(count_cycle)
cached_insn_rs1 < orig(count_instr)
cached_insn_rs1 != orig(reg_pc)
cached_insn_rs1 != orig(dbg_insn_addr)
cached_insn_rs1 > orig(instr_addi)
cached_insn_rs1 != orig(new_ascii_instr)
cached_insn_rs1 != orig(dbg_rs1val)
cached_insn_rs1 < orig(cpu_state)
cached_insn_rs1 < orig(dbg_ascii_state)
cached_insn_rs2 < cpu_state
cached_insn_rs2 < dbg_ascii_state
cached_insn_rs2 != alu_out_q
cached_insn_rs2 != alu_shl
alu_shr % cached_insn_rs2 == 0
cached_insn_rs2 != alu_shr
cached_insn_rs2 > alu_eq
cached_insn_rs2 != cpuregs_rs2
cpuregs_rs2 % cached_insn_rs2 == 0
cached_insn_rs2 < orig(count_cycle)
cached_insn_rs2 < orig(count_instr)
cached_insn_rs2 != orig(reg_pc)
cached_insn_rs2 != orig(dbg_insn_addr)
cached_insn_rs2 >= orig(instr_addi)
cached_insn_rs2 != orig(new_ascii_instr)
cached_insn_rs2 != orig(dbg_rs1val)
cached_insn_rs2 < orig(cpu_state)
cached_insn_rs2 < orig(dbg_ascii_state)
cpu_state != alu_out_q
cpu_state > alu_shr
cpu_state > alu_eq
cpu_state != cpuregs_rs2
cpu_state != orig(count_cycle)
cpu_state != orig(count_instr)
cpu_state > orig(reg_pc)
cpu_state > orig(dbg_insn_addr)
cpu_state > orig(instr_addi)
cpu_state != orig(new_ascii_instr)
cpu_state != orig(dbg_rs1val)
dbg_ascii_state > alu_out_q
dbg_ascii_state > alu_shl
dbg_ascii_state > alu_shr
dbg_ascii_state > alu_eq
dbg_ascii_state > cpuregs_rs1
dbg_ascii_state > cpuregs_rs2
dbg_ascii_state > orig(count_cycle)
dbg_ascii_state > orig(count_instr)
dbg_ascii_state > orig(reg_pc)
dbg_ascii_state > orig(reg_out)
dbg_ascii_state > orig(dbg_insn_addr)
dbg_ascii_state > orig(instr_addi)
dbg_ascii_state > orig(new_ascii_instr)
dbg_ascii_state > orig(dbg_rs1val)
dbg_ascii_state > orig(cpuregs_rs1)
alu_out_q <= alu_shl
alu_out_q >= alu_shr
alu_eq % alu_out_q == 0
alu_out_q >= alu_eq
alu_out_q != cpuregs_rs1
cpuregs_rs2 % alu_out_q == 0
alu_out_q != orig(count_cycle)
alu_out_q != orig(count_instr)
alu_out_q != orig(reg_out)
alu_out_q != orig(dbg_insn_addr)
alu_out_q != orig(instr_addi)
alu_out_q != orig(new_ascii_instr)
alu_out_q != orig(dbg_rs1val)
alu_out_q != orig(cpu_state)
alu_out_q < orig(dbg_ascii_state)
alu_shl >= alu_shr
alu_eq % alu_shl == 0
alu_shl >= alu_eq
alu_shl != cpuregs_rs1
alu_shl != cpuregs_rs2
alu_shl != orig(count_cycle)
alu_shl != orig(count_instr)
alu_shl != orig(reg_out)
alu_shl != orig(dbg_insn_addr)
alu_shl != orig(instr_addi)
alu_shl != orig(new_ascii_instr)
alu_shl != orig(dbg_rs1val)
alu_shl != orig(cpu_state)
alu_shl < orig(dbg_ascii_state)
alu_shr >= alu_eq
alu_shr < cpuregs_rs1
alu_shr <= cpuregs_rs2
alu_shr < orig(count_cycle)
alu_shr < orig(count_instr)
alu_shr != orig(reg_pc)
alu_shr != orig(reg_out)
alu_shr <= orig(new_ascii_instr)
alu_shr != orig(dbg_rs1val)
alu_shr < orig(cpu_state)
alu_shr < orig(dbg_ascii_state)
alu_shr <= orig(cpuregs_rs1)
alu_eq < cpuregs_rs1
alu_eq <= cpuregs_rs2
alu_eq < orig(count_cycle)
alu_eq < orig(count_instr)
alu_eq < orig(reg_pc)
alu_eq != orig(reg_out)
alu_eq < orig(dbg_insn_addr)
alu_eq <= orig(instr_addi)
alu_eq <= orig(new_ascii_instr)
alu_eq != orig(dbg_rs1val)
alu_eq < orig(cpu_state)
alu_eq < orig(dbg_ascii_state)
alu_eq <= orig(cpuregs_rs1)
cpuregs_rs1 != cpuregs_rs2
cpuregs_rs1 != orig(count_cycle)
cpuregs_rs1 != orig(count_instr)
cpuregs_rs1 >= orig(reg_out)
cpuregs_rs1 != orig(new_ascii_instr)
cpuregs_rs1 != orig(dbg_rs1val)
cpuregs_rs1 != orig(cpu_state)
cpuregs_rs1 < orig(dbg_ascii_state)
cpuregs_rs1 % orig(cpuregs_rs1) == 0
cpuregs_rs1 >= orig(cpuregs_rs1)
cpuregs_rs2 != orig(count_cycle)
cpuregs_rs2 != orig(count_instr)
cpuregs_rs2 > orig(reg_out)
cpuregs_rs2 != orig(dbg_insn_addr)
cpuregs_rs2 >= orig(instr_addi)
cpuregs_rs2 <= orig(new_ascii_instr)
cpuregs_rs2 >= orig(dbg_rs1val)
cpuregs_rs2 != orig(cpu_state)
cpuregs_rs2 < orig(dbg_ascii_state)
cpuregs_rs2 != orig(cpuregs_rs1)
2229762 * mem_instr + mem_addr + 2 * cached_insn_opcode - 2229794 == 0
3343139 * mem_instr - mem_la_wdata + 3 * cached_insn_opcode - 3343162 == 0
3 * mem_instr + 2 * count_cycle - 11 * count_instr - 2 == 0
3 * mem_instr + 2 * count_cycle - 11 * orig(count_instr) - 13 == 0
3 * mem_instr - 11 * count_instr + 2 * orig(count_cycle) == 0
2228754 * mem_instr + reg_pc + 2 * cached_insn_opcode - 2228786 == 0
2228754 * mem_instr + reg_next_pc + 2 * cached_insn_opcode - 2228790 == 0
13471744 * mem_instr + reg_op1 + 506 * decoded_imm_j - 34198524 == 0
4.1338719697E11 * mem_instr + 448 * reg_op1 + 253 * new_ascii_instr - 4.13394678981E11 == 0
281936875 * mem_instr - reg_op1 + 253 * cached_insn_opcode - 281938891 == 0
5.84192108168E11 * mem_instr + dbg_insn_opcode + 524232 * cached_insn_opcode - 5.84198440171E11 == 0
1114375 * mem_instr + 4 * instr_sw + cached_insn_opcode - 1114387 == 0
1114375 * mem_instr - 2 * decoded_rd + cached_insn_opcode - 1114383 == 0
1114377 * mem_instr + 2 * decoded_rs2 + cached_insn_opcode - 1114389 == 0
1167623 * mem_instr + 2 * decoded_imm_j + cached_insn_opcode - 1249555 == 0
13630454 * mem_instr + 512 * decoded_imm_j + alu_out_q - 34603007 == 0
186370 * mem_instr + 7 * decoded_imm_j - 2 * alu_shr - 473090 == 0
344072 * mem_instr + 13 * decoded_imm_j - 2 * cpuregs_rs2 - 876552 == 0
344070 * mem_instr + 13 * decoded_imm_j - 2 * orig(dbg_rs1val) - 876552 == 0
2133181490 * mem_instr + new_ascii_instr + 448 * cached_insn_opcode - 2133214633 == 0
6.535758722E9 * mem_instr + 4 * new_ascii_instr + 7 * alu_out_q - 6.535877021E9 == 0
1633941746 * mem_instr + new_ascii_instr - 256 * alu_shr - 1633969513 == 0
2.123941153E10 * mem_instr + 13 * new_ascii_instr - 1792 * cpuregs_rs2 - 2.1239772501E10 == 0
2.1239409738E10 * mem_instr + 13 * new_ascii_instr - 1792 * orig(dbg_rs1val) - 2.1239772501E10 == 0
1.813085312400919E15 * mem_instr + 4 * q_ascii_instr + 1626997501 * cached_insn_opcode - 1.813104864257955E15 == 0
4.786221345862261E15 * mem_instr - 4 * q_insn_imm + 4.294967283E9 * cached_insn_opcode - 4.786255705600521E15 == 0
1.193322490906957E15 * mem_instr - q_insn_opcode + 1070840791 * cached_insn_opcode - 1.193331056518898E15 == 0
32316995 * mem_instr - 4 * q_insn_rs1 + 29 * cached_insn_opcode - 32317219 == 0
5571896 * mem_instr - q_insn_rs2 + 5 * cached_insn_opcode - 5571935 == 0
285281034 * mem_instr + 256 * cached_insn_opcode - alu_out_q - 285283073 == 0
1114374 * mem_instr + cached_insn_opcode + alu_shr - 1114386 == 0
10033455 * mem_instr + 9 * cached_insn_opcode + 4 * cpuregs_rs2 - 10033563 == 0
2228750 * mem_instr + 2 * cached_insn_opcode + orig(reg_pc) - 2228782 == 0
2228762 * mem_instr + 2 * cached_insn_opcode - orig(dbg_insn_addr) - 2228766 == 0
10033459 * mem_instr + 9 * cached_insn_opcode + 4 * orig(dbg_rs1val) - 10033563 == 0
1021 * mem_instr - cpuregs_rs1 + orig(reg_out) == 0
mem_instr - cpuregs_rs2 + orig(dbg_rs1val) == 0
3 * mem_instr + 2 * orig(count_cycle) - 11 * orig(count_instr) - 11 == 0
mem_addr - 2229762 * decoded_rs1 + 2 * cached_insn_opcode + 2229730 == 0
1167623 * mem_addr - 4459524 * decoded_imm_j + 105484 * cached_insn_opcode + 1.82651496248E11 == 0
16 * mem_wdata - 4 * count_instr + reg_pc + 4 == 0
16 * mem_wdata - 4 * count_instr + reg_next_pc == 0
4 * mem_wdata - count_instr + decoded_rs2 + 3 == 0
16 * mem_wdata + reg_pc - 4 * orig(count_instr) == 0
16 * mem_wdata + reg_next_pc - 4 * orig(count_instr) - 4 == 0
4 * mem_wdata + decoded_rs2 - orig(count_instr) + 2 == 0
mem_la_wdata + 3343139 * decoded_rs1 - 3 * cached_insn_opcode - 3343116 == 0
1167623 * mem_la_wdata + 6686278 * decoded_imm_j - 159730 * cached_insn_opcode - 2.73883209219E11 == 0
2 * count_cycle - 11 * count_instr - 3 * instr_addi + 1 == 0
2 * count_cycle - 11 * count_instr - 3 * decoded_rs1 + 4 == 0
17748 * count_cycle - 97614 * count_instr - decoded_imm_j + 49836 == 0
1089293132 * count_cycle - 5.991112226E9 * count_instr - new_ascii_instr + 544676125 == 0
2228758 * count_cycle - 12258169 * count_instr - 3 * cached_insn_opcode + 1114403 == 0
2 * count_cycle - 11 * count_instr + 3 * alu_eq + 1 == 0
2 * count_cycle - 3 * instr_addi - 11 * orig(count_instr) - 10 == 0
2 * count_cycle - 3 * decoded_rs1 - 11 * orig(count_instr) - 7 == 0
17748 * count_cycle - decoded_imm_j - 97614 * orig(count_instr) - 47778 == 0
1089293132 * count_cycle - new_ascii_instr - 5.991112226E9 * orig(count_instr) - 5.446436101E9 == 0
2228758 * count_cycle - 3 * cached_insn_opcode - 12258169 * orig(count_instr) - 11143766 == 0
2 * count_cycle + 3 * alu_eq - 11 * orig(count_instr) - 10 == 0
11 * count_instr + 3 * instr_addi - 2 * orig(count_cycle) - 3 == 0
11 * count_instr + 3 * decoded_rs1 - 2 * orig(count_cycle) - 6 == 0
97614 * count_instr + decoded_imm_j - 17748 * orig(count_cycle) - 67584 == 0
5.991112226E9 * count_instr + new_ascii_instr - 1089293132 * orig(count_cycle) - 1633969257 == 0
12258169 * count_instr + 3 * cached_insn_opcode - 2228758 * orig(count_cycle) - 3343161 == 0
11 * count_instr - 3 * alu_eq - 2 * orig(count_cycle) - 3 == 0
2.92096054084E11 * reg_pc - 1114377 * dbg_insn_opcode + 24704 * cached_insn_opcode - 2.290835223557E12 == 0
1114375 * reg_pc - 8915016 * instr_sw - 4 * cached_insn_opcode - 8914952 == 0
1114375 * reg_pc + 4457508 * decoded_rd - 4 * cached_insn_opcode - 17829968 == 0
reg_pc - 2228754 * decoded_rs1 + 2 * cached_insn_opcode + 2228722 == 0
1167623 * reg_pc - 4457508 * decoded_imm_j + 106492 * cached_insn_opcode + 1.82568908792E11 == 0
1.813085312400919E15 * reg_pc - 8915016 * q_ascii_instr - 6.563541916E9 * cached_insn_opcode - 1.4442450420416264E16 == 0
4.786221345862261E15 * reg_pc + 8915016 * q_insn_imm + 1.717986914E10 * cached_insn_opcode - 7.657967898166432E16 == 0
1.193322490906957E15 * reg_pc + 2228754 * q_insn_opcode + 4.2855095E9 * cached_insn_opcode - 1.9095677833071112E16 == 0
32316995 * reg_pc + 8915016 * q_insn_rs1 + 124 * cached_insn_opcode - 534902944 == 0
253268 * reg_pc + 101307 * q_insn_rs2 + cached_insn_opcode - 4153603 == 0
1114381 * reg_pc + 8 * cached_insn_opcode + 1114377 * orig(dbg_insn_addr) - 31202684 == 0
2.92096054084E11 * reg_next_pc - 1114377 * dbg_insn_opcode + 24704 * cached_insn_opcode - 3.459219439893E12 == 0
1114375 * reg_next_pc - 8915016 * instr_sw - 4 * cached_insn_opcode - 13372452 == 0
1114375 * reg_next_pc + 4457508 * decoded_rd - 4 * cached_insn_opcode - 22287468 == 0
reg_next_pc - 2228754 * decoded_rs1 + 2 * cached_insn_opcode + 2228718 == 0
1167623 * reg_next_pc - 4457508 * decoded_imm_j + 106492 * cached_insn_opcode + 1.825642383E11 == 0
1.813085312400919E15 * reg_next_pc - 8915016 * q_ascii_instr - 6.563541916E9 * cached_insn_opcode - 2.169479167001994E16 == 0
4.786221345862261E15 * reg_next_pc + 8915016 * q_insn_imm + 1.717986914E10 * cached_insn_opcode - 9.572456436511336E16 == 0
1.193322490906957E15 * reg_next_pc + 2228754 * q_insn_opcode + 4.2855095E9 * cached_insn_opcode - 2.3868967796698936E16 == 0
32316995 * reg_next_pc + 8915016 * q_insn_rs1 + 124 * cached_insn_opcode - 664170924 == 0
253268 * reg_next_pc + 101307 * q_insn_rs2 + cached_insn_opcode - 5166675 == 0
1114375 * reg_next_pc - 4 * cached_insn_opcode - 1114377 * orig(reg_pc) - 4457436 == 0
1114381 * reg_next_pc + 8 * cached_insn_opcode + 1114377 * orig(dbg_insn_addr) - 35660208 == 0
reg_op1 - 1021 * instr_lw - orig(dbg_rs1val) == 0
reg_op1 - 13471744 * instr_addi + 506 * decoded_imm_j - 20726780 == 0
reg_op1 - 13471744 * decoded_rs1 + 506 * decoded_imm_j - 7255036 == 0
448 * reg_op1 - 4.1338719697E11 * decoded_rs1 + 253 * new_ascii_instr + 4.13379714959E11 == 0
reg_op1 + 281936875 * decoded_rs1 - 253 * cached_insn_opcode - 281934859 == 0
805043193 * reg_op1 + 4.1338719697E11 * decoded_imm_j - 6735872 * new_ascii_instr - 1.6932973696990236E16 == 0
1167623 * reg_op1 + 563873750 * decoded_imm_j - 13471744 * cached_insn_opcode - 2.3097298114532E13 == 0
reg_op1 + 506 * decoded_imm_j + 13471744 * alu_eq - 20726780 == 0
2 * reg_op1 + 1021 * q_insn_rd - 2 * orig(dbg_rs1val) - 2042 == 0
1626997501 * reg_op1 + 1021 * cached_ascii_instr - 1626997501 * orig(dbg_rs1val) - 1.668282611397E12 == 0
4.294967283E9 * reg_op1 - 1021 * cached_insn_imm - 4.294967283E9 * orig(dbg_rs1val) + 1021 == 0
29 * reg_op1 - 1021 * cached_insn_rs1 - 29 * orig(dbg_rs1val) + 2042 == 0
20 * reg_op1 - 1021 * cached_insn_rs2 - 20 * orig(dbg_rs1val) + 1021 == 0
reg_op1 + 1021 * orig(instr_addi) - orig(dbg_rs1val) - 1021 == 0
1633969257 * reg_op1 + 1021 * orig(new_ascii_instr) - 1633969257 * orig(dbg_rs1val) - 1.668282611397E12 == 0
1114375 * dbg_insn_opcode + 1.168384216336E12 * decoded_rd - 1073168 * cached_insn_opcode - 2.382688977781E12 == 0
dbg_insn_opcode - 5.84192108168E11 * decoded_rs1 + 524232 * cached_insn_opcode + 5.84185776165E11 == 0
1114377 * dbg_insn_opcode - 1.168384216336E12 * decoded_rs2 - 24704 * cached_insn_opcode - 4.5933209115E10 == 0
1167623 * dbg_insn_opcode - 1.168384216336E12 * decoded_imm_j + 2.7913232368E10 * cached_insn_opcode + 4.7856634414081704E16 == 0
32316995 * dbg_insn_opcode + 2.336768432672E12 * q_insn_rs1 + 31785968 * cached_insn_opcode - 7.3772277061353E13 == 0
696487 * dbg_insn_opcode + 7.3024013521E10 * q_insn_rs2 + 705379 * cached_insn_opcode - 1.562221246142E12 == 0
1114375 * dbg_insn_opcode - 1073168 * cached_insn_opcode - 2.92096054084E11 * orig(reg_pc) + 2.290847887563E12 == 0
1114381 * dbg_insn_opcode + 2072224 * cached_insn_opcode + 2.92096054084E11 * orig(dbg_insn_addr) - 5.887879618807E12 == 0
4 * instr_sw - 1114375 * decoded_rs1 + cached_insn_opcode + 1114363 == 0
2335246 * instr_sw - 1114375 * decoded_imm_j + 26624 * cached_insn_opcode + 4.5644480512E10 == 0
1.813085312400919E15 * instr_sw - 1114375 * q_ascii_instr - 6943989 * cached_insn_opcode + 7.769233920368E12 == 0
4.786221345862261E15 * instr_sw + 1114375 * q_insn_imm + 4.294967284E9 * cached_insn_opcode - 4.786255706714908E15 == 0
4.773289963627828E15 * instr_sw + 1114375 * q_insn_opcode + 4.284436332E9 * cached_insn_opcode - 4.774566084131609E15 == 0
6463399 * instr_sw + 222875 * q_insn_rs1 + 6 * cached_insn_opcode - 6909197 == 0
22287584 * instr_sw + 1114375 * q_insn_rs2 + 21 * cached_insn_opcode - 23402127 == 0
8915048 * instr_sw + 12 * cached_insn_opcode + 1114375 * orig(dbg_insn_addr) - 22287644 == 0
13630454 * instr_addi - 512 * decoded_imm_j - alu_out_q + 20972553 == 0
1021 * instr_addi + cpuregs_rs1 - orig(reg_out) - 1021 == 0
instr_addi + cpuregs_rs2 - orig(dbg_rs1val) - 1 == 0
3 * instr_addi - 2 * orig(count_cycle) + 11 * orig(count_instr) + 8 == 0
2 * decoded_rd + 1114375 * decoded_rs1 - cached_insn_opcode - 1114367 == 0
1114377 * decoded_rd + 1114375 * decoded_rs2 - cached_insn_opcode - 2228742 == 0
1167623 * decoded_rd + 1114375 * decoded_imm_j - 26624 * cached_insn_opcode - 4.5646815758E10 == 0
1.813085312400919E15 * decoded_rd + 2228750 * q_ascii_instr + 13887978 * cached_insn_opcode - 3.641709092642574E15 == 0
4457524 * decoded_rd - 12 * cached_insn_opcode - 1114375 * orig(dbg_insn_addr) + 13372596 == 0
1114377 * decoded_rs1 - 2 * decoded_rs2 - cached_insn_opcode - 1114365 == 0
1167623 * decoded_rs1 - 2 * decoded_imm_j - cached_insn_opcode - 1085691 == 0
13630454 * decoded_rs1 - 512 * decoded_imm_j - alu_out_q + 7342099 == 0
2133181490 * decoded_rs1 - new_ascii_instr - 448 * cached_insn_opcode - 2133148347 == 0
6.535758722E9 * decoded_rs1 - 4 * new_ascii_instr - 7 * alu_out_q - 6.535640423E9 == 0
1633941746 * decoded_rs1 - new_ascii_instr + 256 * alu_shr - 1633913979 == 0
2.123941153E10 * decoded_rs1 - 13 * new_ascii_instr + 1792 * cpuregs_rs2 - 2.1239050559E10 == 0
2.1239409738E10 * decoded_rs1 - 13 * new_ascii_instr + 1792 * orig(dbg_rs1val) - 2.1239046975E10 == 0
1.813085312400919E15 * decoded_rs1 - 4 * q_ascii_instr - 1626997501 * cached_insn_opcode - 1.813065760543883E15 == 0
4.786221345862261E15 * decoded_rs1 + 4 * q_insn_imm - 4.294967283E9 * cached_insn_opcode - 4.786186986124001E15 == 0
1.193322490906957E15 * decoded_rs1 + q_insn_opcode - 1070840791 * cached_insn_opcode - 1.193313925295016E15 == 0
32316995 * decoded_rs1 + 4 * q_insn_rs1 - 29 * cached_insn_opcode - 32316771 == 0
5571896 * decoded_rs1 + q_insn_rs2 - 5 * cached_insn_opcode - 5571857 == 0
285281034 * decoded_rs1 - 256 * cached_insn_opcode + alu_out_q - 285278995 == 0
1114374 * decoded_rs1 - cached_insn_opcode - alu_shr - 1114362 == 0
10033455 * decoded_rs1 - 9 * cached_insn_opcode - 4 * cpuregs_rs2 - 10033347 == 0
2228750 * decoded_rs1 - 2 * cached_insn_opcode - orig(reg_pc) - 2228718 == 0
2228762 * decoded_rs1 - 2 * cached_insn_opcode + orig(dbg_insn_addr) - 2228758 == 0
10033459 * decoded_rs1 - 9 * cached_insn_opcode - 4 * orig(dbg_rs1val) - 10033355 == 0
1021 * decoded_rs1 + cpuregs_rs1 - orig(reg_out) - 2042 == 0
decoded_rs1 + cpuregs_rs2 - orig(dbg_rs1val) - 2 == 0
3 * decoded_rs1 - 2 * orig(count_cycle) + 11 * orig(count_instr) + 5 == 0
1167623 * decoded_rs2 - 1114377 * decoded_imm_j + 26623 * cached_insn_opcode + 4.5644562444E10 == 0
4.786221345862261E15 * decoded_rs2 + 2228754 * q_insn_imm + 4.294967285E9 * cached_insn_opcode - 9.572477053691556E15 == 0
2.386644981813914E15 * decoded_rs2 + 1114377 * q_insn_opcode + 2142754750 * cached_insn_opcode - 4.774548952907727E15 == 0
32316995 * decoded_rs2 + 2228754 * q_insn_rs1 + 31 * cached_insn_opcode - 69091746 == 0
1013072 * decoded_rs2 + 101307 * q_insn_rs2 + cached_insn_opcode - 2127459 == 0
4457500 * decoded_rs2 - 4 * cached_insn_opcode - 1114377 * orig(reg_pc) + 8915064 == 0
4457524 * decoded_rs2 + 8 * cached_insn_opcode + 1114377 * orig(dbg_insn_addr) - 22287636 == 0
4.18288558208E11 * decoded_imm_j - 6815227 * new_ascii_instr + 805043193 * alu_out_q - 1.713374171540994E16 == 0
32316995 * decoded_imm_j + 2335246 * q_insn_rs1 - 772036 * cached_insn_opcode - 1.323767243394E12 == 0
11143792 * decoded_imm_j + 1167623 * q_insn_rs2 - 266219 * cached_insn_opcode - 4.56471045775E11 == 0
570562068 * decoded_imm_j - 13630454 * cached_insn_opcode + 1167623 * alu_out_q - 2.3371264894391E13 == 0
4457500 * decoded_imm_j - 106496 * cached_insn_opcode - 1167623 * orig(reg_pc) - 1.82568581064E11 == 0
4457524 * decoded_imm_j - 106484 * cached_insn_opcode + 1167623 * orig(dbg_insn_addr) - 1.82602257692E11 == 0
512 * decoded_imm_j + alu_out_q + 13630454 * alu_eq - 20972553 == 0
1021 * decoded_imm_j + 26622 * cpuregs_rs1 - 26622 * orig(reg_out) - 69003264 == 0
13 * decoded_imm_j + 344070 * cpuregs_rs2 - 344072 * orig(dbg_rs1val) - 876552 == 0
decoded_imm_j - 17748 * orig(count_cycle) + 97614 * orig(count_instr) + 30030 == 0
1021 * new_ascii_instr + 1633939698 * cpuregs_rs1 - 1633939698 * orig(reg_out) - 1.668282611397E12 == 0
13 * new_ascii_instr + 2.1239409738E10 * cpuregs_rs2 - 2.123941153E10 * orig(dbg_rs1val) - 2.1239772501E10 == 0
new_ascii_instr - 1089293132 * orig(count_cycle) + 5.991112226E9 * orig(count_instr) + 4.357142969E9 == 0
32316995 * q_ascii_instr + 1.813085312400919E15 * q_insn_rs1 + 4.9011300711E10 * cached_insn_opcode - 5.643153902383024E16 == 0
22287584 * q_ascii_instr + 1.813085312400919E15 * q_insn_rs2 + 3.4305827301E10 * cached_insn_opcode - 3.8230586827824416E16 == 0
8915000 * q_ascii_instr + 55551912 * cached_insn_opcode - 1.813085312400919E15 * orig(reg_pc) + 1.4442528627844408E16 == 0
8915048 * q_ascii_instr + 1.9579521924E10 * cached_insn_opcode + 1.813085312400919E15 * orig(dbg_insn_addr) - 3.632409474166576E16 == 0
32316995 * q_insn_imm - 4.786221345862261E15 * q_insn_rs1 - 4.294967254E9 * cached_insn_opcode + 9.57247701914556E15 == 0
22287584 * q_insn_imm - 4.786221345862261E15 * q_insn_rs2 - 4.294967263E9 * cached_insn_opcode + 4.786255683312781E15 == 0
16 * q_insn_imm + 3.4359738271E10 * q_insn_rd - 2 * alu_shr - 6.8719476544E10 == 0
8915000 * q_insn_imm + 3.4359738272E10 * cached_insn_opcode + 4.786221345862261E15 * orig(reg_pc) - 7.6579816420617344E16 == 0
8915048 * q_insn_imm - 1.7179869124E10 * cached_insn_opcode - 4.786221345862261E15 * orig(dbg_insn_addr) + 5.7434793580385072E16 == 0
232 * q_insn_imm - 3.4359738271E10 * cached_insn_rs1 - 29 * alu_shr + 6.8719476513E10 == 0
160 * q_insn_imm - 3.4359738271E10 * cached_insn_rs2 - 20 * alu_shr + 3.4359738251E10 == 0
8 * q_insn_imm - alu_shr + 3.4359738271E10 * orig(instr_addi) - 3.4359738272E10 == 0
32316995 * q_insn_opcode - 4.773289963627828E15 * q_insn_rs1 - 4.252241292E9 * cached_insn_opcode + 9.510600306078928E15 == 0
5571896 * q_insn_opcode - 1.193322490906957E15 * q_insn_rs2 - 1065474951 * cached_insn_opcode + 1.187121766238813E15 == 0
2228750 * q_insn_opcode + 8.568872664E9 * cached_insn_opcode + 1.193322490906957E15 * orig(reg_pc) - 1.9095712095518872E16 == 0
2228762 * q_insn_opcode - 4.281216828E9 * cached_insn_opcode - 1.193322490906957E15 * orig(dbg_insn_addr) + 1.4317420437219214E16 == 0
22287584 * q_insn_rs1 - 32316995 * q_insn_rs2 - 9 * cached_insn_opcode - 12258101 == 0
1783000 * q_insn_rs1 + 48 * cached_insn_opcode + 6463399 * orig(reg_pc) - 106980768 == 0
8915048 * q_insn_rs1 - 108 * cached_insn_opcode - 32316995 * orig(dbg_insn_addr) + 369974708 == 0
1114375 * q_insn_rs2 + 21 * cached_insn_opcode + 2785948 * orig(reg_pc) - 45689711 == 0
1114381 * q_insn_rs2 - 9 * cached_insn_opcode - 2785948 * orig(dbg_insn_addr) + 32317067 == 0
1021 * cached_insn_opcode + 1114379 * cpuregs_rs1 - 1114379 * orig(reg_out) - 1137789127 == 0
cached_insn_opcode + 1114375 * cpuregs_rs2 - 1114375 * orig(dbg_rs1val) - 1114387 == 0
3 * cached_insn_opcode - 2228758 * orig(count_cycle) + 12258169 * orig(count_instr) + 8915008 == 0
12 * cached_insn_opcode + 1114381 * orig(reg_pc) + 1114375 * orig(dbg_insn_addr) - 31202692 == 0
1021 * alu_eq - cpuregs_rs1 + orig(reg_out) + 1021 == 0
alu_eq - cpuregs_rs2 + orig(dbg_rs1val) + 1 == 0
3 * alu_eq + 2 * orig(count_cycle) - 11 * orig(count_instr) - 8 == 0
Exiting Daikon.
