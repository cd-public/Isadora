Daikon version 5.7.2, released November 7, 2018; http://plse.cs.washington.edu/daikon.
Reading declaration files .(read 1 decls file)
Processing trace data; reading 1 dtrace file:

===========================================================================
..tick():::ENTER
ARESETN == r_start_wire
ARESETN == r_done_wire
ARESETN == M_AXI_BID
ARESETN == M_AXI_RLAST_wire
ARESETN == AR_CH_EN
ARESETN == AW_ADDR_VALID
reset_wire == AR_ADDR_VALID
reg00_config == reg_data_out
shadow_M_AXI_AWADDR == shadow_AW_ILL_DATA_TRANS_SRV_PTR
shadow_M_AXI_AWADDR == shadow_AW_ILL_TRANS_FIL_PTR
shadow_M_AXI_AWADDR == shadow_M_AXI_BRESP_wire
shadow_M_AXI_AWADDR == shadow_M_AXI_WDATA_wire
shadow_M_AXI_AWADDR == shadow_reg_data_out
shadow_M_AXI_AWADDR == shadow_reg05_w_anomaly
shadow_M_AXI_AWADDR == shadow_M_AXI_AWPROT
shadow_M_AXI_AWADDR == shadow_M_AXI_AWCACHE
shadow_M_AXI_AWADDR == shadow_M_AXI_AWBURST
shadow_M_AXI_AWADDR == shadow_M_AXI_AWLEN
shadow_M_AXI_AWADDR == shadow_M_AXI_WVALID
shadow_M_AXI_AWADDR == shadow_B_STATE
shadow_M_AXI_AWADDR == shadow_W_B_TO_SERVE
shadow_M_AXI_AWADDR == shadow_W_CH_EN
shadow_M_AXI_AWADDR == shadow_AW_CH_EN
shadow_M_AXI_AWADDR == shadow_AW_CH_DIS
ARESETN == 1
reset_wire == 0
r_base_addr_wire == 3053805654L
w_base_addr_wire == 3710927468L
o_data == 4294901760L
reg00_config == 4294967295L
reg10_r_config == 2684383232L
reg22_w_config == 2952790016L
reg25_w_config == 4026580992L
byte_index == 4
aw_en one of { 0, 1 }
M_AXI_ARLEN_wire == 8
AR_ILL_TRANS_SRV_PTR >= 0
W_B_TO_SERVE one of { 0, 1 }
AR_HIGH_ADDR == 36
internal_data == 65535
shadow_M_AXI_AWADDR == 0
shadow_AW_ADDR_VALID == 65535
shadow_AW_ADDR_VALID_FLAG == 1
DERIVED_taint_reg_count == 2
DERIVED_taint_reg_delta one of { 0, 2 }
ARESETN >= aw_en
ARESETN >= W_B_TO_SERVE
reset_wire <= aw_en
reset_wire <= AR_ILL_TRANS_SRV_PTR
reset_wire <= W_B_TO_SERVE
r_base_addr_wire > aw_en
r_base_addr_wire > AR_ILL_TRANS_SRV_PTR
r_base_addr_wire > W_B_TO_SERVE
w_base_addr_wire > aw_en
w_base_addr_wire > AR_ILL_TRANS_SRV_PTR
w_base_addr_wire > W_B_TO_SERVE
o_data > aw_en
o_data > AR_ILL_TRANS_SRV_PTR
o_data > W_B_TO_SERVE
reg00_config > aw_en
reg00_config > AR_ILL_TRANS_SRV_PTR
reg00_config > W_B_TO_SERVE
reg10_r_config > aw_en
reg10_r_config > AR_ILL_TRANS_SRV_PTR
reg10_r_config > W_B_TO_SERVE
reg22_w_config > aw_en
reg22_w_config > AR_ILL_TRANS_SRV_PTR
reg22_w_config > W_B_TO_SERVE
reg25_w_config > aw_en
reg25_w_config > AR_ILL_TRANS_SRV_PTR
reg25_w_config > W_B_TO_SERVE
byte_index > aw_en
byte_index > W_B_TO_SERVE
aw_en < M_AXI_ARLEN_wire
aw_en < AR_HIGH_ADDR
aw_en < internal_data
M_AXI_ARLEN_wire > W_B_TO_SERVE
AR_ILL_TRANS_SRV_PTR >= W_B_TO_SERVE
AR_ILL_TRANS_SRV_PTR < AR_HIGH_ADDR
AR_ILL_TRANS_SRV_PTR < internal_data
W_B_TO_SERVE < AR_HIGH_ADDR
W_B_TO_SERVE < internal_data
DERIVED_taint_reg_count >= DERIVED_taint_reg_delta
DERIVED_taint_reg_count < DERIVED_vcd_timestamp
DERIVED_taint_reg_delta < DERIVED_vcd_timestamp
===========================================================================
..tick():::EXIT
ARESETN == r_start_wire
ARESETN == r_done_wire
ARESETN == M_AXI_BID
ARESETN == aw_en
ARESETN == M_AXI_RLAST_wire
ARESETN == AR_CH_EN
ARESETN == AW_ADDR_VALID
ARESETN == orig(ARESETN)
ARESETN == orig(r_start_wire)
ARESETN == orig(r_done_wire)
ARESETN == orig(M_AXI_BID)
ARESETN == orig(M_AXI_RLAST_wire)
ARESETN == orig(AR_CH_EN)
ARESETN == orig(AW_ADDR_VALID)
reset_wire == AR_ADDR_VALID
reset_wire == orig(reset_wire)
reset_wire == orig(AR_ADDR_VALID)
r_base_addr_wire == orig(r_base_addr_wire)
w_base_addr_wire == orig(w_base_addr_wire)
o_data == orig(o_data)
reg00_config == reg_data_out
reg00_config == orig(reg00_config)
reg00_config == orig(reg_data_out)
reg10_r_config == orig(reg10_r_config)
reg22_w_config == orig(reg22_w_config)
reg25_w_config == orig(reg25_w_config)
byte_index == orig(byte_index)
M_AXI_ARLEN_wire == orig(M_AXI_ARLEN_wire)
AR_HIGH_ADDR == orig(AR_HIGH_ADDR)
internal_data == orig(internal_data)
shadow_M_AXI_AWADDR == shadow_AW_ILL_DATA_TRANS_SRV_PTR
shadow_M_AXI_AWADDR == shadow_AW_ILL_TRANS_FIL_PTR
shadow_M_AXI_AWADDR == shadow_M_AXI_BRESP_wire
shadow_M_AXI_AWADDR == shadow_M_AXI_WDATA_wire
shadow_M_AXI_AWADDR == shadow_reg_data_out
shadow_M_AXI_AWADDR == shadow_reg05_w_anomaly
shadow_M_AXI_AWADDR == shadow_M_AXI_AWPROT
shadow_M_AXI_AWADDR == shadow_M_AXI_AWCACHE
shadow_M_AXI_AWADDR == shadow_M_AXI_AWBURST
shadow_M_AXI_AWADDR == shadow_M_AXI_AWLEN
shadow_M_AXI_AWADDR == shadow_M_AXI_WVALID
shadow_M_AXI_AWADDR == shadow_B_STATE
shadow_M_AXI_AWADDR == shadow_W_B_TO_SERVE
shadow_M_AXI_AWADDR == shadow_W_CH_EN
shadow_M_AXI_AWADDR == shadow_AW_CH_EN
shadow_M_AXI_AWADDR == shadow_AW_CH_DIS
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_AWADDR)
shadow_M_AXI_AWADDR == orig(shadow_AW_ILL_DATA_TRANS_SRV_PTR)
shadow_M_AXI_AWADDR == orig(shadow_AW_ILL_TRANS_FIL_PTR)
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_BRESP_wire)
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_WDATA_wire)
shadow_M_AXI_AWADDR == orig(shadow_reg_data_out)
shadow_M_AXI_AWADDR == orig(shadow_reg05_w_anomaly)
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_AWPROT)
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_AWCACHE)
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_AWBURST)
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_AWLEN)
shadow_M_AXI_AWADDR == orig(shadow_M_AXI_WVALID)
shadow_M_AXI_AWADDR == orig(shadow_B_STATE)
shadow_M_AXI_AWADDR == orig(shadow_W_B_TO_SERVE)
shadow_M_AXI_AWADDR == orig(shadow_W_CH_EN)
shadow_M_AXI_AWADDR == orig(shadow_AW_CH_EN)
shadow_M_AXI_AWADDR == orig(shadow_AW_CH_DIS)
shadow_AW_ADDR_VALID == orig(shadow_AW_ADDR_VALID)
shadow_AW_ADDR_VALID_FLAG == orig(shadow_AW_ADDR_VALID_FLAG)
DERIVED_taint_reg_count == orig(DERIVED_taint_reg_count)
ARESETN == 1
reset_wire == 0
r_base_addr_wire == 3053805654L
w_base_addr_wire == 3710927468L
o_data == 4294901760L
reg00_config == 4294967295L
reg10_r_config == 2684383232L
reg22_w_config == 2952790016L
reg25_w_config == 4026580992L
byte_index == 4
M_AXI_ARLEN_wire == 8
AR_ILL_TRANS_SRV_PTR >= 0
W_B_TO_SERVE one of { 0, 1 }
AR_HIGH_ADDR == 36
internal_data == 65535
shadow_M_AXI_AWADDR == 0
shadow_AW_ADDR_VALID == 65535
shadow_AW_ADDR_VALID_FLAG == 1
DERIVED_taint_reg_count == 2
DERIVED_taint_reg_delta == 0
ARESETN >= W_B_TO_SERVE
ARESETN >= orig(aw_en)
ARESETN >= orig(W_B_TO_SERVE)
reset_wire <= AR_ILL_TRANS_SRV_PTR
reset_wire <= W_B_TO_SERVE
reset_wire <= orig(aw_en)
reset_wire <= orig(AR_ILL_TRANS_SRV_PTR)
reset_wire <= orig(W_B_TO_SERVE)
r_base_addr_wire > AR_ILL_TRANS_SRV_PTR
r_base_addr_wire > W_B_TO_SERVE
r_base_addr_wire > orig(aw_en)
r_base_addr_wire > orig(AR_ILL_TRANS_SRV_PTR)
r_base_addr_wire > orig(W_B_TO_SERVE)
w_base_addr_wire > AR_ILL_TRANS_SRV_PTR
w_base_addr_wire > W_B_TO_SERVE
w_base_addr_wire > orig(aw_en)
w_base_addr_wire > orig(AR_ILL_TRANS_SRV_PTR)
w_base_addr_wire > orig(W_B_TO_SERVE)
o_data > AR_ILL_TRANS_SRV_PTR
o_data > W_B_TO_SERVE
o_data > orig(aw_en)
o_data > orig(AR_ILL_TRANS_SRV_PTR)
o_data > orig(W_B_TO_SERVE)
reg00_config > AR_ILL_TRANS_SRV_PTR
reg00_config > W_B_TO_SERVE
reg00_config > orig(aw_en)
reg00_config > orig(AR_ILL_TRANS_SRV_PTR)
reg00_config > orig(W_B_TO_SERVE)
reg10_r_config > AR_ILL_TRANS_SRV_PTR
reg10_r_config > W_B_TO_SERVE
reg10_r_config > orig(aw_en)
reg10_r_config > orig(AR_ILL_TRANS_SRV_PTR)
reg10_r_config > orig(W_B_TO_SERVE)
reg22_w_config > AR_ILL_TRANS_SRV_PTR
reg22_w_config > W_B_TO_SERVE
reg22_w_config > orig(aw_en)
reg22_w_config > orig(AR_ILL_TRANS_SRV_PTR)
reg22_w_config > orig(W_B_TO_SERVE)
reg25_w_config > AR_ILL_TRANS_SRV_PTR
reg25_w_config > W_B_TO_SERVE
reg25_w_config > orig(aw_en)
reg25_w_config > orig(AR_ILL_TRANS_SRV_PTR)
reg25_w_config > orig(W_B_TO_SERVE)
byte_index > W_B_TO_SERVE
byte_index > orig(aw_en)
byte_index > orig(W_B_TO_SERVE)
M_AXI_ARLEN_wire > W_B_TO_SERVE
M_AXI_ARLEN_wire > orig(aw_en)
M_AXI_ARLEN_wire > orig(W_B_TO_SERVE)
AR_ILL_TRANS_SRV_PTR >= W_B_TO_SERVE
AR_ILL_TRANS_SRV_PTR < AR_HIGH_ADDR
AR_ILL_TRANS_SRV_PTR < internal_data
AR_ILL_TRANS_SRV_PTR != orig(AR_ILL_TRANS_SRV_PTR)
AR_ILL_TRANS_SRV_PTR != orig(W_B_TO_SERVE)
W_B_TO_SERVE < AR_HIGH_ADDR
W_B_TO_SERVE < internal_data
AR_HIGH_ADDR > orig(aw_en)
AR_HIGH_ADDR > orig(AR_ILL_TRANS_SRV_PTR)
AR_HIGH_ADDR > orig(W_B_TO_SERVE)
internal_data > orig(aw_en)
internal_data > orig(AR_ILL_TRANS_SRV_PTR)
internal_data > orig(W_B_TO_SERVE)
DERIVED_taint_reg_count < DERIVED_vcd_timestamp
DERIVED_taint_reg_count >= orig(DERIVED_taint_reg_delta)
DERIVED_taint_reg_count < orig(DERIVED_vcd_timestamp)
DERIVED_taint_reg_delta < DERIVED_vcd_timestamp
DERIVED_taint_reg_delta <= orig(DERIVED_taint_reg_delta)
DERIVED_taint_reg_delta < orig(DERIVED_vcd_timestamp)
DERIVED_vcd_timestamp > orig(DERIVED_taint_reg_delta)
DERIVED_vcd_timestamp - orig(DERIVED_vcd_timestamp) - 1 == 0
AR_ILL_TRANS_SRV_PTR - 16 * W_B_TO_SERVE - orig(AR_ILL_TRANS_SRV_PTR) + 15 == 0
Exiting Daikon.
